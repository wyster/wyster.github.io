<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <title>How to Manage Common Dependencies with Parent Services</title>
    <link rel="stylesheet" href="../_static/epub.css" type="text/css" />
    <link rel="stylesheet" href="../_static/pygments.css" type="text/css" />
    <link rel="stylesheet" type="text/css" href="../_static/rtd_custom.css" /> 
  </head><body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <div class="section" id="how-to-manage-common-dependencies-with-parent-services">
<span id="index-0"></span><h1>How to Manage Common Dependencies with Parent Services</h1>
<p>As you add more functionality to your application, you may well start to
have related classes that share some of the same dependencies. For example,
you may have multiple repository classes which need the
<code class="docutils literal notranslate"><span class="pre">doctrine.orm.entity_manager</span></code> service and an optional <code class="docutils literal notranslate"><span class="pre">logger</span></code> service:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="c1">// src/Repository/BaseDoctrineRepository.php</span>
<span class="k">namespace</span> <span class="nx">App\Repository</span><span class="p">;</span>

<span class="k">use</span> <span class="nx">Doctrine\Persistence\ObjectManager</span><span class="p">;</span>
<span class="k">use</span> <span class="nx">Psr\Log\LoggerInterface</span><span class="p">;</span>

<span class="c1">// ...</span>
<span class="k">abstract</span> <span class="k">class</span> <span class="nc">BaseDoctrineRepository</span>
<span class="p">{</span>
    <span class="k">protected</span> <span class="nv">$objectManager</span><span class="p">;</span>
    <span class="k">protected</span> <span class="nv">$logger</span><span class="p">;</span>

    <span class="k">public</span> <span class="k">function</span> <span class="fm">__construct</span><span class="p">(</span><span class="nx">ObjectManager</span> <span class="nv">$objectManager</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">objectManager</span> <span class="o">=</span> <span class="nv">$objectManager</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="k">public</span> <span class="k">function</span> <span class="nf">setLogger</span><span class="p">(</span><span class="nx">LoggerInterface</span> <span class="nv">$logger</span><span class="p">)</span><span class="o">:</span> <span class="nx">void</span>
    <span class="p">{</span>
        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">logger</span> <span class="o">=</span> <span class="nv">$logger</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="c1">// ...</span>
<span class="p">}</span>
</pre></div>
</div>
<p>Your child service classes may look like this:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="c1">// src/Repository/DoctrineUserRepository.php</span>
<span class="k">namespace</span> <span class="nx">App\Repository</span><span class="p">;</span>

<span class="k">use</span> <span class="nx">App\Repository\BaseDoctrineRepository</span><span class="p">;</span>

<span class="c1">// ...</span>
<span class="k">class</span> <span class="nc">DoctrineUserRepository</span> <span class="k">extends</span> <span class="nx">BaseDoctrineRepository</span>
<span class="p">{</span>
    <span class="c1">// ...</span>
<span class="p">}</span>

<span class="c1">// src/Repository/DoctrinePostRepository.php</span>
<span class="k">namespace</span> <span class="nx">App\Repository</span><span class="p">;</span>

<span class="k">use</span> <span class="nx">App\Repository\BaseDoctrineRepository</span><span class="p">;</span>

<span class="c1">// ...</span>
<span class="k">class</span> <span class="nc">DoctrinePostRepository</span> <span class="k">extends</span> <span class="nx">BaseDoctrineRepository</span>
<span class="p">{</span>
    <span class="c1">// ...</span>
<span class="p">}</span>
</pre></div>
</div>
<p>The service container allows you to extend parent services in order to
avoid duplicated service definitions:</p>
<div class="configuration-block">
<ul class="simple">
<li><p><em>YAML</em><div class="highlight-yaml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1"># config/services.yaml</span>
<span class="l l-Scalar l-Scalar-Plain">services</span><span class="p p-Indicator">:</span>
    <span class="l l-Scalar l-Scalar-Plain">App\Repository\BaseDoctrineRepository</span><span class="p p-Indicator">:</span>
        <span class="l l-Scalar l-Scalar-Plain">abstract</span><span class="p p-Indicator">:</span>  <span class="l l-Scalar l-Scalar-Plain">true</span>
        <span class="l l-Scalar l-Scalar-Plain">arguments</span><span class="p p-Indicator">:</span> <span class="p p-Indicator">[</span><span class="s">&#39;@doctrine.orm.entity_manager&#39;</span><span class="p p-Indicator">]</span>
        <span class="l l-Scalar l-Scalar-Plain">calls</span><span class="p p-Indicator">:</span>
            <span class="p p-Indicator">-</span> <span class="l l-Scalar l-Scalar-Plain">setLogger</span><span class="p p-Indicator">:</span> <span class="p p-Indicator">[</span><span class="s">&#39;@logger&#39;</span><span class="p p-Indicator">]</span>

    <span class="l l-Scalar l-Scalar-Plain">App\Repository\DoctrineUserRepository</span><span class="p p-Indicator">:</span>
        <span class="c1"># extend the App\Repository\BaseDoctrineRepository service</span>
        <span class="l l-Scalar l-Scalar-Plain">parent</span><span class="p p-Indicator">:</span> <span class="l l-Scalar l-Scalar-Plain">App\Repository\BaseDoctrineRepository</span>

    <span class="l l-Scalar l-Scalar-Plain">App\Repository\DoctrinePostRepository</span><span class="p p-Indicator">:</span>
        <span class="l l-Scalar l-Scalar-Plain">parent</span><span class="p p-Indicator">:</span> <span class="l l-Scalar l-Scalar-Plain">App\Repository\BaseDoctrineRepository</span>

    <span class="c1"># ...</span>
</pre></div>
</td></tr></table></div>
</p></li>
<li><p><em>XML</em><div class="highlight-xml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c">&lt;!-- config/services.xml --&gt;</span>
<span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span>
<span class="nt">&lt;container</span> <span class="na">xmlns=</span><span class="s">&quot;http://symfony.com/schema/dic/services&quot;</span>
    <span class="na">xmlns:xsi=</span><span class="s">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span>
    <span class="na">xsi:schemaLocation=</span><span class="s">&quot;http://symfony.com/schema/dic/services</span>
<span class="s">        https://symfony.com/schema/dic/services/services-1.0.xsd&quot;</span><span class="nt">&gt;</span>

    <span class="nt">&lt;services&gt;</span>
        <span class="nt">&lt;service</span> <span class="na">id=</span><span class="s">&quot;App\Repository\BaseDoctrineRepository&quot;</span> <span class="na">abstract=</span><span class="s">&quot;true&quot;</span><span class="nt">&gt;</span>
            <span class="nt">&lt;argument</span> <span class="na">type=</span><span class="s">&quot;service&quot;</span> <span class="na">id=</span><span class="s">&quot;doctrine.orm.entity_manager&quot;</span><span class="nt">/&gt;</span>

            <span class="nt">&lt;call</span> <span class="na">method=</span><span class="s">&quot;setLogger&quot;</span><span class="nt">&gt;</span>
                <span class="nt">&lt;argument</span> <span class="na">type=</span><span class="s">&quot;service&quot;</span> <span class="na">id=</span><span class="s">&quot;logger&quot;</span><span class="nt">/&gt;</span>
            <span class="nt">&lt;/call&gt;</span>
        <span class="nt">&lt;/service&gt;</span>

        <span class="c">&lt;!-- extends the App\Repository\BaseDoctrineRepository service --&gt;</span>
        <span class="nt">&lt;service</span> <span class="na">id=</span><span class="s">&quot;App\Repository\DoctrineUserRepository&quot;</span>
            <span class="na">parent=</span><span class="s">&quot;App\Repository\BaseDoctrineRepository&quot;</span>
        <span class="nt">/&gt;</span>

        <span class="nt">&lt;service</span> <span class="na">id=</span><span class="s">&quot;App\Repository\DoctrinePostRepository&quot;</span>
            <span class="na">parent=</span><span class="s">&quot;App\Repository\BaseDoctrineRepository&quot;</span>
        <span class="nt">/&gt;</span>

        <span class="c">&lt;!-- ... --&gt;</span>
    <span class="nt">&lt;/services&gt;</span>
<span class="nt">&lt;/container&gt;</span>
</pre></div>
</td></tr></table></div>
</p></li>
<li><p><em>PHP</em><div class="highlight-php notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1">// config/services.php</span>
<span class="k">namespace</span> <span class="nx">Symfony\Component\DependencyInjection\Loader\Configurator</span><span class="p">;</span>

<span class="k">use</span> <span class="nx">App\Repository\BaseDoctrineRepository</span><span class="p">;</span>
<span class="k">use</span> <span class="nx">App\Repository\DoctrinePostRepository</span><span class="p">;</span>
<span class="k">use</span> <span class="nx">App\Repository\DoctrineUserRepository</span><span class="p">;</span>

<span class="k">return</span> <span class="k">function</span><span class="p">(</span><span class="nx">ContainerConfigurator</span> <span class="nv">$configurator</span><span class="p">)</span> <span class="p">{</span>
    <span class="nv">$services</span> <span class="o">=</span> <span class="nv">$configurator</span><span class="o">-&gt;</span><span class="na">services</span><span class="p">();</span>

    <span class="nv">$services</span><span class="o">-&gt;</span><span class="na">set</span><span class="p">(</span><span class="nx">BaseDoctrineRepository</span><span class="o">::</span><span class="na">class</span><span class="p">)</span>
        <span class="o">-&gt;</span><span class="na">abstract</span><span class="p">()</span>
        <span class="o">-&gt;</span><span class="na">args</span><span class="p">([</span><span class="nx">service</span><span class="p">(</span><span class="s1">&#39;doctrine.orm.entity_manager&#39;</span><span class="p">)])</span>
        <span class="c1">// In versions earlier to Symfony 5.1 the service() function was called ref()</span>
        <span class="o">-&gt;</span><span class="na">call</span><span class="p">(</span><span class="s1">&#39;setLogger&#39;</span><span class="p">,</span> <span class="p">[</span><span class="nx">service</span><span class="p">(</span><span class="s1">&#39;logger&#39;</span><span class="p">)])</span>
    <span class="p">;</span>

    <span class="nv">$services</span><span class="o">-&gt;</span><span class="na">set</span><span class="p">(</span><span class="nx">DoctrineUserRepository</span><span class="o">::</span><span class="na">class</span><span class="p">)</span>
        <span class="c1">// extend the App\Repository\BaseDoctrineRepository service</span>
        <span class="o">-&gt;</span><span class="na">parent</span><span class="p">(</span><span class="nx">BaseDoctrineRepository</span><span class="o">::</span><span class="na">class</span><span class="p">)</span>
    <span class="p">;</span>

    <span class="nv">$services</span><span class="o">-&gt;</span><span class="na">set</span><span class="p">(</span><span class="nx">DoctrinePostRepository</span><span class="o">::</span><span class="na">class</span><span class="p">)</span>
        <span class="o">-&gt;</span><span class="na">parent</span><span class="p">(</span><span class="nx">BaseDoctrineRepository</span><span class="o">::</span><span class="na">class</span><span class="p">)</span>
    <span class="p">;</span>
<span class="p">};</span>
</pre></div>
</td></tr></table></div>
</p></li>
</ul>
</div>
<p>In this context, having a <code class="docutils literal notranslate"><span class="pre">parent</span></code> service implies that the arguments
and method calls of the parent service should be used for the child services.
Specifically, the <code class="docutils literal notranslate"><span class="pre">EntityManager</span></code> will be injected and <code class="docutils literal notranslate"><span class="pre">setLogger()</span></code> will
be called when <code class="docutils literal notranslate"><span class="pre">App\Repository\DoctrineUserRepository</span></code> is instantiated.</p>
<p>All attributes on the parent service are shared with the child <strong>except</strong> for
<code class="docutils literal notranslate"><span class="pre">shared</span></code>, <code class="docutils literal notranslate"><span class="pre">abstract</span></code> and <code class="docutils literal notranslate"><span class="pre">tags</span></code>. These are <em>not</em> inherited from the parent.</p>
<div class="admonition tip">
<p class="admonition-title">Tip</p>
<p>In the examples shown, the classes sharing the same configuration also
extend from the same parent class in PHP. This isn’t necessary at all.
You can also extract common parts of similar service definitions into
a parent service without also extending a parent class in PHP.</p>
</div>
<div class="section" id="overriding-parent-dependencies">
<h2>Overriding Parent Dependencies</h2>
<p>There may be times where you want to override what service is injected for
one child service only. You can override most settings by specifying it in
the child class:</p>
<div class="configuration-block">
<ul class="simple">
<li><p><em>YAML</em><div class="highlight-yaml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1"># config/services.yaml</span>
<span class="l l-Scalar l-Scalar-Plain">services</span><span class="p p-Indicator">:</span>
    <span class="c1"># ...</span>

    <span class="l l-Scalar l-Scalar-Plain">App\Repository\DoctrineUserRepository</span><span class="p p-Indicator">:</span>
        <span class="l l-Scalar l-Scalar-Plain">parent</span><span class="p p-Indicator">:</span> <span class="l l-Scalar l-Scalar-Plain">App\Repository\BaseDoctrineRepository</span>

        <span class="c1"># overrides the private setting of the parent service</span>
        <span class="l l-Scalar l-Scalar-Plain">public</span><span class="p p-Indicator">:</span> <span class="l l-Scalar l-Scalar-Plain">true</span>

        <span class="c1"># appends the &#39;@app.username_checker&#39; argument to the parent</span>
        <span class="c1"># argument list</span>
        <span class="l l-Scalar l-Scalar-Plain">arguments</span><span class="p p-Indicator">:</span> <span class="p p-Indicator">[</span><span class="s">&#39;@app.username_checker&#39;</span><span class="p p-Indicator">]</span>

    <span class="l l-Scalar l-Scalar-Plain">App\Repository\DoctrinePostRepository</span><span class="p p-Indicator">:</span>
        <span class="l l-Scalar l-Scalar-Plain">parent</span><span class="p p-Indicator">:</span> <span class="l l-Scalar l-Scalar-Plain">App\Repository\BaseDoctrineRepository</span>

        <span class="c1"># overrides the first argument (using the special index_N key)</span>
        <span class="l l-Scalar l-Scalar-Plain">arguments</span><span class="p p-Indicator">:</span>
            <span class="l l-Scalar l-Scalar-Plain">index_0</span><span class="p p-Indicator">:</span> <span class="s">&#39;@doctrine.custom_entity_manager&#39;</span>
</pre></div>
</td></tr></table></div>
</p></li>
<li><p><em>XML</em><div class="highlight-xml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c">&lt;!-- config/services.xml --&gt;</span>
<span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span>
<span class="nt">&lt;container</span> <span class="na">xmlns=</span><span class="s">&quot;http://symfony.com/schema/dic/services&quot;</span>
    <span class="na">xmlns:xsi=</span><span class="s">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span>
    <span class="na">xsi:schemaLocation=</span><span class="s">&quot;http://symfony.com/schema/dic/services</span>
<span class="s">        https://symfony.com/schema/dic/services/services-1.0.xsd&quot;</span><span class="nt">&gt;</span>

    <span class="nt">&lt;services&gt;</span>
        <span class="c">&lt;!-- ... --&gt;</span>

        <span class="c">&lt;!-- overrides the private setting of the parent service --&gt;</span>
        <span class="nt">&lt;service</span> <span class="na">id=</span><span class="s">&quot;App\Repository\DoctrineUserRepository&quot;</span>
            <span class="na">parent=</span><span class="s">&quot;App\Repository\BaseDoctrineRepository&quot;</span>
            <span class="na">public=</span><span class="s">&quot;true&quot;</span>
        <span class="nt">&gt;</span>
            <span class="c">&lt;!-- appends the &#39;@app.username_checker&#39; argument to the parent</span>
<span class="c">                 argument list --&gt;</span>
            <span class="nt">&lt;argument</span> <span class="na">type=</span><span class="s">&quot;service&quot;</span> <span class="na">id=</span><span class="s">&quot;app.username_checker&quot;</span><span class="nt">/&gt;</span>
        <span class="nt">&lt;/service&gt;</span>

        <span class="nt">&lt;service</span> <span class="na">id=</span><span class="s">&quot;App\Repository\DoctrinePostRepository&quot;</span>
            <span class="na">parent=</span><span class="s">&quot;App\Repository\BaseDoctrineRepository&quot;</span>
        <span class="nt">&gt;</span>
            <span class="c">&lt;!-- overrides the first argument (using the index attribute) --&gt;</span>
            <span class="nt">&lt;argument</span> <span class="na">index=</span><span class="s">&quot;0&quot;</span> <span class="na">type=</span><span class="s">&quot;service&quot;</span> <span class="na">id=</span><span class="s">&quot;doctrine.custom_entity_manager&quot;</span><span class="nt">/&gt;</span>
        <span class="nt">&lt;/service&gt;</span>

        <span class="c">&lt;!-- ... --&gt;</span>
    <span class="nt">&lt;/services&gt;</span>
<span class="nt">&lt;/container&gt;</span>
</pre></div>
</td></tr></table></div>
</p></li>
<li><p><em>PHP</em><div class="highlight-php notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1">// config/services.php</span>
<span class="k">namespace</span> <span class="nx">Symfony\Component\DependencyInjection\Loader\Configurator</span><span class="p">;</span>

<span class="k">use</span> <span class="nx">App\Repository\BaseDoctrineRepository</span><span class="p">;</span>
<span class="k">use</span> <span class="nx">App\Repository\DoctrinePostRepository</span><span class="p">;</span>
<span class="k">use</span> <span class="nx">App\Repository\DoctrineUserRepository</span><span class="p">;</span>
<span class="c1">// ...</span>

<span class="k">return</span> <span class="k">function</span><span class="p">(</span><span class="nx">ContainerConfigurator</span> <span class="nv">$configurator</span><span class="p">)</span> <span class="p">{</span>
    <span class="nv">$services</span> <span class="o">=</span> <span class="nv">$configurator</span><span class="o">-&gt;</span><span class="na">services</span><span class="p">();</span>

    <span class="nv">$services</span><span class="o">-&gt;</span><span class="na">set</span><span class="p">(</span><span class="nx">BaseDoctrineRepository</span><span class="o">::</span><span class="na">class</span><span class="p">)</span>
        <span class="c1">// ...</span>
    <span class="p">;</span>

    <span class="nv">$services</span><span class="o">-&gt;</span><span class="na">set</span><span class="p">(</span><span class="nx">DoctrineUserRepository</span><span class="o">::</span><span class="na">class</span><span class="p">)</span>
        <span class="o">-&gt;</span><span class="na">parent</span><span class="p">(</span><span class="nx">BaseDoctrineRepository</span><span class="o">::</span><span class="na">class</span><span class="p">)</span>

        <span class="c1">// overrides the private setting of the parent service</span>
        <span class="o">-&gt;</span><span class="na">public</span><span class="p">()</span>

        <span class="c1">// appends the &#39;@app.username_checker&#39; argument to the parent</span>
        <span class="c1">// argument list</span>
        <span class="o">-&gt;</span><span class="na">args</span><span class="p">([</span><span class="nx">service</span><span class="p">(</span><span class="s1">&#39;app.username_checker&#39;</span><span class="p">)])</span>
    <span class="p">;</span>

    <span class="nv">$services</span><span class="o">-&gt;</span><span class="na">set</span><span class="p">(</span><span class="nx">DoctrinePostRepository</span><span class="o">::</span><span class="na">class</span><span class="p">)</span>
        <span class="o">-&gt;</span><span class="na">parent</span><span class="p">(</span><span class="nx">BaseDoctrineRepository</span><span class="o">::</span><span class="na">class</span><span class="p">)</span>

        <span class="c1"># overrides the first argument</span>
        <span class="o">-&gt;</span><span class="na">arg</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="nx">service</span><span class="p">(</span><span class="s1">&#39;doctrine.custom_entity_manager&#39;</span><span class="p">))</span>
    <span class="p">;</span>
<span class="p">};</span>
</pre></div>
</td></tr></table></div>
</p></li>
</ul>
</div>
</div>
</div>


          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>