<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <title>How to Retrieve the Request from the Service Container</title>
    <link rel="stylesheet" href="../_static/epub.css" type="text/css" />
    <link rel="stylesheet" href="../_static/pygments.css" type="text/css" />
    <link rel="stylesheet" type="text/css" href="../_static/rtd_custom.css" /> 
  </head><body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <div class="section" id="how-to-retrieve-the-request-from-the-service-container">
<span id="index-0"></span><h1>How to Retrieve the Request from the Service Container</h1>
<p>Whenever you need to access the current request in a service, you can either
add it as an argument to the methods that need the request or inject the
<code class="docutils literal notranslate"><span class="pre">request_stack</span></code> service and access the <code class="docutils literal notranslate"><span class="pre">Request</span></code> by calling the
<code class="docutils literal notranslate"><a class="reference external" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Component/HttpFoundation/RequestStack.php" title="Symfony\Component\HttpFoundation\RequestStack::getCurrentRequest()"><span class="pre">getCurrentRequest()</span></a><span class="link-target"> <span class="pre">[https://github.com/symfony/symfony/blob/master/src/Symfony/Component/HttpFoundation/RequestStack.php]</span></span></code>
method:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="c1">// src/Newsletter/NewsletterManager.php</span>
<span class="k">namespace</span> <span class="nx">App\Newsletter</span><span class="p">;</span>

<span class="k">use</span> <span class="nx">Symfony\Component\HttpFoundation\RequestStack</span><span class="p">;</span>

<span class="k">class</span> <span class="nc">NewsletterManager</span>
<span class="p">{</span>
    <span class="k">protected</span> <span class="nv">$requestStack</span><span class="p">;</span>

    <span class="k">public</span> <span class="k">function</span> <span class="fm">__construct</span><span class="p">(</span><span class="nx">RequestStack</span> <span class="nv">$requestStack</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">requestStack</span> <span class="o">=</span> <span class="nv">$requestStack</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="k">public</span> <span class="k">function</span> <span class="nf">anyMethod</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="nv">$request</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">requestStack</span><span class="o">-&gt;</span><span class="na">getCurrentRequest</span><span class="p">();</span>
        <span class="c1">// ... do something with the request</span>
    <span class="p">}</span>

    <span class="c1">// ...</span>
<span class="p">}</span>
</pre></div>
</div>
<p>Now, inject the <code class="docutils literal notranslate"><span class="pre">request_stack</span></code>, which behaves like any normal service.
If youâ€™re using the <a class="reference internal" href="../service_container.xhtml#service-container-services-load-example"><span class="std std-ref">default services.yaml configuration</span></a>,
this will happen automatically via autowiring.</p>
<div class="admonition tip">
<p class="admonition-title">Tip</p>
<p>In a controller you can get the <code class="docutils literal notranslate"><span class="pre">Request</span></code> object by having it passed in as an
argument to your action method. See <a class="reference internal" href="../controller.xhtml#controller-request-argument"><span class="std std-ref">The Request object as a Controller Argument</span></a> for
details.</p>
</div>
</div>


          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>