<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <title>Workflows and State Machines</title>
    <link rel="stylesheet" href="../_static/epub.css" type="text/css" />
    <link rel="stylesheet" href="../_static/pygments.css" type="text/css" />
    <link rel="stylesheet" type="text/css" href="../_static/rtd_custom.css" /> 
  </head><body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <div class="section" id="workflows-and-state-machines">
<h1>Workflows and State Machines</h1>
<div class="section" id="workflows">
<h2>Workflows</h2>
<p>A workflow is a model of a process in your application. It may be the process of
how a blog post goes from draft to review and publish. Another example is when a
user submits a series of different forms to complete a task. Such processes are
best kept away from your models and should be defined in configuration.</p>
<p>A <strong>definition</strong> of a workflow consists of places and actions to get from one
place to another. The actions are called <strong>transitions</strong>. A workflow also needs to
know each object’s position in the workflow. The <strong>marking store</strong> writes
the current place to a property on the object.</p>
<div class="admonition note">
<p class="admonition-title">Note</p>
<p>The terminology above is commonly used when discussing workflows and
<a class="reference external" href="https://en.wikipedia.org/wiki/Petri_net">Petri nets</a><span class="link-target"> [https://en.wikipedia.org/wiki/Petri_net]</span></p>
</div>
<div class="section" id="examples">
<h3>Examples</h3>
<p>The simplest workflow looks like this. It contains two places and one transition.</p>
<img alt="../_images/simple.png" src="../_images/simple.png" />
<p>Workflows could be more complicated when they describe a real business case. The
workflow below describes the process to fill in a job application.</p>
<img alt="../_images/job_application.png" src="../_images/job_application.png" />
<p>When you fill in a job application in this example there are 4 to 7 steps
depending on the job you are applying for. Some jobs require personality
tests, logic tests and/or formal requirements to be answered by the user. Some
jobs don’t. The <code class="docutils literal notranslate"><span class="pre">GuardEvent</span></code> is used to decide what next steps are allowed for
a specific application.</p>
<p>By defining a workflow like this, there is an overview how the process looks
like. The process logic is not mixed with the controllers, models or view. The
order of the steps can be changed by changing the configuration only.</p>
</div>
</div>
<div class="section" id="state-machines">
<h2>State Machines</h2>
<p>A state machine is a subset of a workflow and its purpose is to hold a state of
your model. The most important differences between them are:</p>
<ul class="simple">
<li><p>Workflows can be in more than one place at the same time, whereas state
machines can’t;</p></li>
<li><p>In order to apply a transition, workflows require that the object is in all
the previous places of the transition, whereas state machines only require
that the object is at least in one of those places.</p></li>
</ul>
<div class="section" id="example">
<h3>Example</h3>
<p>A pull request starts in an initial “start” state, then a state “test” for e.g. running
tests on continuous integration stack. When this is finished, the pull request is in the “review”
state, where contributors can require changes, reject or accept the
pull request. At any time, you can also “update” the pull request, which
will result in another continuous integration run.</p>
<img alt="../_images/pull_request.png" src="../_images/pull_request.png" />
<p>Below is the configuration for the pull request state machine.</p>
<div class="configuration-block">
<ul class="simple">
<li><p><em>YAML</em><div class="highlight-yaml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1"># config/packages/workflow.yaml</span>
<span class="l l-Scalar l-Scalar-Plain">framework</span><span class="p p-Indicator">:</span>
    <span class="l l-Scalar l-Scalar-Plain">workflows</span><span class="p p-Indicator">:</span>
        <span class="l l-Scalar l-Scalar-Plain">pull_request</span><span class="p p-Indicator">:</span>
            <span class="l l-Scalar l-Scalar-Plain">type</span><span class="p p-Indicator">:</span> <span class="s">&#39;state_machine&#39;</span>
            <span class="l l-Scalar l-Scalar-Plain">marking_store</span><span class="p p-Indicator">:</span>
                 <span class="l l-Scalar l-Scalar-Plain">type</span><span class="p p-Indicator">:</span> <span class="s">&#39;method&#39;</span>
                 <span class="l l-Scalar l-Scalar-Plain">property</span><span class="p p-Indicator">:</span> <span class="s">&#39;currentPlace&#39;</span>
            <span class="l l-Scalar l-Scalar-Plain">supports</span><span class="p p-Indicator">:</span>
                <span class="p p-Indicator">-</span> <span class="l l-Scalar l-Scalar-Plain">App\Entity\PullRequest</span>
            <span class="l l-Scalar l-Scalar-Plain">initial_marking</span><span class="p p-Indicator">:</span> <span class="l l-Scalar l-Scalar-Plain">start</span>
            <span class="l l-Scalar l-Scalar-Plain">places</span><span class="p p-Indicator">:</span>
                <span class="p p-Indicator">-</span> <span class="l l-Scalar l-Scalar-Plain">start</span>
                <span class="p p-Indicator">-</span> <span class="l l-Scalar l-Scalar-Plain">coding</span>
                <span class="p p-Indicator">-</span> <span class="l l-Scalar l-Scalar-Plain">test</span>
                <span class="p p-Indicator">-</span> <span class="l l-Scalar l-Scalar-Plain">review</span>
                <span class="p p-Indicator">-</span> <span class="l l-Scalar l-Scalar-Plain">merged</span>
                <span class="p p-Indicator">-</span> <span class="l l-Scalar l-Scalar-Plain">closed</span>
            <span class="l l-Scalar l-Scalar-Plain">transitions</span><span class="p p-Indicator">:</span>
                <span class="l l-Scalar l-Scalar-Plain">submit</span><span class="p p-Indicator">:</span>
                    <span class="l l-Scalar l-Scalar-Plain">from</span><span class="p p-Indicator">:</span> <span class="l l-Scalar l-Scalar-Plain">start</span>
                    <span class="l l-Scalar l-Scalar-Plain">to</span><span class="p p-Indicator">:</span> <span class="l l-Scalar l-Scalar-Plain">test</span>
                <span class="l l-Scalar l-Scalar-Plain">update</span><span class="p p-Indicator">:</span>
                    <span class="l l-Scalar l-Scalar-Plain">from</span><span class="p p-Indicator">:</span> <span class="p p-Indicator">[</span><span class="nv">coding</span><span class="p p-Indicator">,</span> <span class="nv">test</span><span class="p p-Indicator">,</span> <span class="nv">review</span><span class="p p-Indicator">]</span>
                    <span class="l l-Scalar l-Scalar-Plain">to</span><span class="p p-Indicator">:</span> <span class="l l-Scalar l-Scalar-Plain">test</span>
                <span class="l l-Scalar l-Scalar-Plain">wait_for_review</span><span class="p p-Indicator">:</span>
                    <span class="l l-Scalar l-Scalar-Plain">from</span><span class="p p-Indicator">:</span> <span class="l l-Scalar l-Scalar-Plain">test</span>
                    <span class="l l-Scalar l-Scalar-Plain">to</span><span class="p p-Indicator">:</span> <span class="l l-Scalar l-Scalar-Plain">review</span>
                <span class="l l-Scalar l-Scalar-Plain">request_change</span><span class="p p-Indicator">:</span>
                    <span class="l l-Scalar l-Scalar-Plain">from</span><span class="p p-Indicator">:</span> <span class="l l-Scalar l-Scalar-Plain">review</span>
                    <span class="l l-Scalar l-Scalar-Plain">to</span><span class="p p-Indicator">:</span> <span class="l l-Scalar l-Scalar-Plain">coding</span>
                <span class="l l-Scalar l-Scalar-Plain">accept</span><span class="p p-Indicator">:</span>
                    <span class="l l-Scalar l-Scalar-Plain">from</span><span class="p p-Indicator">:</span> <span class="l l-Scalar l-Scalar-Plain">review</span>
                    <span class="l l-Scalar l-Scalar-Plain">to</span><span class="p p-Indicator">:</span> <span class="l l-Scalar l-Scalar-Plain">merged</span>
                <span class="l l-Scalar l-Scalar-Plain">reject</span><span class="p p-Indicator">:</span>
                    <span class="l l-Scalar l-Scalar-Plain">from</span><span class="p p-Indicator">:</span> <span class="l l-Scalar l-Scalar-Plain">review</span>
                    <span class="l l-Scalar l-Scalar-Plain">to</span><span class="p p-Indicator">:</span> <span class="l l-Scalar l-Scalar-Plain">closed</span>
                <span class="l l-Scalar l-Scalar-Plain">reopen</span><span class="p p-Indicator">:</span>
                    <span class="l l-Scalar l-Scalar-Plain">from</span><span class="p p-Indicator">:</span> <span class="l l-Scalar l-Scalar-Plain">closed</span>
                    <span class="l l-Scalar l-Scalar-Plain">to</span><span class="p p-Indicator">:</span> <span class="l l-Scalar l-Scalar-Plain">review</span>
</pre></div>
</td></tr></table></div>
</p></li>
<li><p><em>XML</em><div class="highlight-xml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c">&lt;!-- config/packages/workflow.xml --&gt;</span>
<span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span>
<span class="nt">&lt;container</span> <span class="na">xmlns=</span><span class="s">&quot;http://symfony.com/schema/dic/services&quot;</span>
    <span class="na">xmlns:xsi=</span><span class="s">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span>
    <span class="na">xmlns:framework=</span><span class="s">&quot;http://symfony.com/schema/dic/symfony&quot;</span>
    <span class="na">xsi:schemaLocation=</span><span class="s">&quot;http://symfony.com/schema/dic/services https://symfony.com/schema/dic/services/services-1.0.xsd</span>
<span class="s">        http://symfony.com/schema/dic/symfony https://symfony.com/schema/dic/symfony/symfony-1.0.xsd&quot;</span>
<span class="nt">&gt;</span>

    <span class="nt">&lt;framework:config&gt;</span>
        <span class="nt">&lt;framework:workflow</span> <span class="na">name=</span><span class="s">&quot;pull_request&quot;</span> <span class="na">type=</span><span class="s">&quot;state_machine&quot;</span><span class="nt">&gt;</span>
            <span class="nt">&lt;framework:marking-store&gt;</span>
                <span class="nt">&lt;framework:type&gt;</span>method<span class="nt">&lt;/framework:type&gt;</span>
                <span class="nt">&lt;framework:property&gt;</span>currentPlace<span class="nt">&lt;/framework:property&gt;</span>
            <span class="nt">&lt;/framework:marking-store&gt;</span>

            <span class="nt">&lt;framework:support&gt;</span>App\Entity\PullRequest<span class="nt">&lt;/framework:support&gt;</span>

            <span class="nt">&lt;framework:initial_marking&gt;</span>start<span class="nt">&lt;/framework:initial_marking&gt;</span>

            <span class="nt">&lt;framework:place&gt;</span>start<span class="nt">&lt;/framework:place&gt;</span>
            <span class="nt">&lt;framework:place&gt;</span>coding<span class="nt">&lt;/framework:place&gt;</span>
            <span class="nt">&lt;framework:place&gt;</span>test<span class="nt">&lt;/framework:place&gt;</span>
            <span class="nt">&lt;framework:place&gt;</span>review<span class="nt">&lt;/framework:place&gt;</span>
            <span class="nt">&lt;framework:place&gt;</span>merged<span class="nt">&lt;/framework:place&gt;</span>
            <span class="nt">&lt;framework:place&gt;</span>closed<span class="nt">&lt;/framework:place&gt;</span>

            <span class="nt">&lt;framework:transition</span> <span class="na">name=</span><span class="s">&quot;submit&quot;</span><span class="nt">&gt;</span>
                <span class="nt">&lt;framework:from&gt;</span>start<span class="nt">&lt;/framework:from&gt;</span>

                <span class="nt">&lt;framework:to&gt;</span>test<span class="nt">&lt;/framework:to&gt;</span>
            <span class="nt">&lt;/framework:transition&gt;</span>

            <span class="nt">&lt;framework:transition</span> <span class="na">name=</span><span class="s">&quot;update&quot;</span><span class="nt">&gt;</span>
                <span class="nt">&lt;framework:from&gt;</span>coding<span class="nt">&lt;/framework:from&gt;</span>
                <span class="nt">&lt;framework:from&gt;</span>test<span class="nt">&lt;/framework:from&gt;</span>
                <span class="nt">&lt;framework:from&gt;</span>review<span class="nt">&lt;/framework:from&gt;</span>

                <span class="nt">&lt;framework:to&gt;</span>test<span class="nt">&lt;/framework:to&gt;</span>
            <span class="nt">&lt;/framework:transition&gt;</span>

            <span class="nt">&lt;framework:transition</span> <span class="na">name=</span><span class="s">&quot;wait_for_review&quot;</span><span class="nt">&gt;</span>
                <span class="nt">&lt;framework:from&gt;</span>test<span class="nt">&lt;/framework:from&gt;</span>

                <span class="nt">&lt;framework:to&gt;</span>review<span class="nt">&lt;/framework:to&gt;</span>
            <span class="nt">&lt;/framework:transition&gt;</span>

            <span class="nt">&lt;framework:transition</span> <span class="na">name=</span><span class="s">&quot;request_change&quot;</span><span class="nt">&gt;</span>
                <span class="nt">&lt;framework:from&gt;</span>review<span class="nt">&lt;/framework:from&gt;</span>

                <span class="nt">&lt;framework:to&gt;</span>coding<span class="nt">&lt;/framework:to&gt;</span>
            <span class="nt">&lt;/framework:transition&gt;</span>

            <span class="nt">&lt;framework:transition</span> <span class="na">name=</span><span class="s">&quot;accept&quot;</span><span class="nt">&gt;</span>
                <span class="nt">&lt;framework:from&gt;</span>review<span class="nt">&lt;/framework:from&gt;</span>

                <span class="nt">&lt;framework:to&gt;</span>merged<span class="nt">&lt;/framework:to&gt;</span>
            <span class="nt">&lt;/framework:transition&gt;</span>

            <span class="nt">&lt;framework:transition</span> <span class="na">name=</span><span class="s">&quot;reject&quot;</span><span class="nt">&gt;</span>
                <span class="nt">&lt;framework:from&gt;</span>review<span class="nt">&lt;/framework:from&gt;</span>

                <span class="nt">&lt;framework:to&gt;</span>closed<span class="nt">&lt;/framework:to&gt;</span>
            <span class="nt">&lt;/framework:transition&gt;</span>

            <span class="nt">&lt;framework:transition</span> <span class="na">name=</span><span class="s">&quot;reopen&quot;</span><span class="nt">&gt;</span>
                <span class="nt">&lt;framework:from&gt;</span>closed<span class="nt">&lt;/framework:from&gt;</span>

                <span class="nt">&lt;framework:to&gt;</span>review<span class="nt">&lt;/framework:to&gt;</span>
            <span class="nt">&lt;/framework:transition&gt;</span>

        <span class="nt">&lt;/framework:workflow&gt;</span>

    <span class="nt">&lt;/framework:config&gt;</span>
<span class="nt">&lt;/container&gt;</span>
</pre></div>
</td></tr></table></div>
</p></li>
<li><p><em>PHP</em><div class="highlight-php notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1">// config/packages/workflow.php</span>
<span class="nv">$container</span><span class="o">-&gt;</span><span class="na">loadFromExtension</span><span class="p">(</span><span class="s1">&#39;framework&#39;</span><span class="p">,</span> <span class="p">[</span>
    <span class="c1">// ...</span>
    <span class="s1">&#39;workflows&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
        <span class="s1">&#39;pull_request&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
            <span class="s1">&#39;type&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;state_machine&#39;</span><span class="p">,</span>
            <span class="s1">&#39;marking_store&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
                <span class="s1">&#39;type&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;method&#39;</span><span class="p">,</span>
                <span class="s1">&#39;property&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;currentPlace&#39;</span><span class="p">,</span>
            <span class="p">],</span>
            <span class="s1">&#39;supports&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span><span class="s1">&#39;App\Entity\PullRequest&#39;</span><span class="p">],</span>
            <span class="s1">&#39;initial_marking&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;start&#39;</span><span class="p">,</span>
            <span class="s1">&#39;places&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
                <span class="s1">&#39;start&#39;</span><span class="p">,</span>
                <span class="s1">&#39;coding&#39;</span><span class="p">,</span>
                <span class="s1">&#39;test&#39;</span><span class="p">,</span>
                <span class="s1">&#39;review&#39;</span><span class="p">,</span>
                <span class="s1">&#39;merged&#39;</span><span class="p">,</span>
                <span class="s1">&#39;closed&#39;</span><span class="p">,</span>
            <span class="p">],</span>
            <span class="s1">&#39;transitions&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
                <span class="s1">&#39;submit&#39;</span><span class="o">=&gt;</span> <span class="p">[</span>
                    <span class="s1">&#39;from&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;start&#39;</span><span class="p">,</span>
                    <span class="s1">&#39;to&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;test&#39;</span><span class="p">,</span>
                <span class="p">],</span>
                <span class="s1">&#39;update&#39;</span><span class="o">=&gt;</span> <span class="p">[</span>
                    <span class="s1">&#39;from&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span><span class="s1">&#39;coding&#39;</span><span class="p">,</span> <span class="s1">&#39;test&#39;</span><span class="p">,</span> <span class="s1">&#39;review&#39;</span><span class="p">],</span>
                    <span class="s1">&#39;to&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;test&#39;</span><span class="p">,</span>
                <span class="p">],</span>
                <span class="s1">&#39;wait_for_review&#39;</span><span class="o">=&gt;</span> <span class="p">[</span>
                    <span class="s1">&#39;from&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;test&#39;</span><span class="p">,</span>
                    <span class="s1">&#39;to&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;review&#39;</span><span class="p">,</span>
                <span class="p">],</span>
                <span class="s1">&#39;request_change&#39;</span><span class="o">=&gt;</span> <span class="p">[</span>
                    <span class="s1">&#39;from&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;review&#39;</span><span class="p">,</span>
                    <span class="s1">&#39;to&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;coding&#39;</span><span class="p">,</span>
                <span class="p">],</span>
                <span class="s1">&#39;accept&#39;</span><span class="o">=&gt;</span> <span class="p">[</span>
                    <span class="s1">&#39;from&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;review&#39;</span><span class="p">,</span>
                    <span class="s1">&#39;to&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;merged&#39;</span><span class="p">,</span>
                <span class="p">],</span>
                <span class="s1">&#39;reject&#39;</span><span class="o">=&gt;</span> <span class="p">[</span>
                    <span class="s1">&#39;from&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;review&#39;</span><span class="p">,</span>
                    <span class="s1">&#39;to&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;closed&#39;</span><span class="p">,</span>
                <span class="p">],</span>
                <span class="s1">&#39;reopen&#39;</span><span class="o">=&gt;</span> <span class="p">[</span>
                    <span class="s1">&#39;from&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;start&#39;</span><span class="p">,</span>
                    <span class="s1">&#39;to&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;review&#39;</span><span class="p">,</span>
                <span class="p">],</span>
            <span class="p">],</span>
        <span class="p">],</span>
    <span class="p">],</span>
<span class="p">]);</span>
</pre></div>
</td></tr></table></div>
</p></li>
</ul>
</div>
<p>In a Symfony application using the
<a class="reference internal" href="../service_container.xhtml#service-container-services-load-example"><span class="std std-ref">default services.yaml configuration</span></a>,
you can get this state machine by injecting the Workflow registry service:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="c1">// ...</span>
<span class="k">use</span> <span class="nx">App\Entity\PullRequest</span><span class="p">;</span>
<span class="k">use</span> <span class="nx">Symfony\Component\Workflow\Registry</span><span class="p">;</span>

<span class="k">class</span> <span class="nc">SomeService</span>
<span class="p">{</span>
    <span class="k">private</span> <span class="nv">$workflows</span><span class="p">;</span>

    <span class="k">public</span> <span class="k">function</span> <span class="fm">__construct</span><span class="p">(</span><span class="nx">Registry</span> <span class="nv">$workflows</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">workflows</span> <span class="o">=</span> <span class="nv">$workflows</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="k">public</span> <span class="k">function</span> <span class="nf">someMethod</span><span class="p">(</span><span class="nx">PullRequest</span> <span class="nv">$pullRequest</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="nv">$stateMachine</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">workflows</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">(</span><span class="nv">$pullRequest</span><span class="p">,</span> <span class="s1">&#39;pull_request&#39;</span><span class="p">);</span>
        <span class="nv">$stateMachine</span><span class="o">-&gt;</span><span class="na">apply</span><span class="p">(</span><span class="nv">$pullRequest</span><span class="p">,</span> <span class="s1">&#39;wait_for_review&#39;</span><span class="p">);</span>
        <span class="c1">// ...</span>
    <span class="p">}</span>

    <span class="c1">// ...</span>
<span class="p">}</span>
</pre></div>
</div>
<p>Symfony automatically creates a service for each workflow (<code class="docutils literal notranslate"><a class="reference external" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Workflow/Workflow.php" title="Symfony\Component\Workflow\Workflow"><span class="pre">Workflow</span></a><span class="link-target"> <span class="pre">[https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Workflow/Workflow.php]</span></span></code>)
or state machine (<code class="docutils literal notranslate"><a class="reference external" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Workflow/StateMachine.php" title="Symfony\Component\Workflow\StateMachine"><span class="pre">StateMachine</span></a><span class="link-target"> <span class="pre">[https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Workflow/StateMachine.php]</span></span></code>) you
have defined in your configuration. This means that you can use <code class="docutils literal notranslate"><span class="pre">workflow.pull_request</span></code>
or <code class="docutils literal notranslate"><span class="pre">state_machine.pull_request</span></code> respectively in your service definitions
to access the proper service:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="c1">// ...</span>
<span class="k">use</span> <span class="nx">App\Entity\PullRequest</span><span class="p">;</span>
<span class="k">use</span> <span class="nx">Symfony\Component\Workflow\StateMachine</span><span class="p">;</span>

<span class="k">class</span> <span class="nc">SomeService</span>
<span class="p">{</span>
    <span class="k">private</span> <span class="nv">$stateMachine</span><span class="p">;</span>

    <span class="k">public</span> <span class="k">function</span> <span class="fm">__construct</span><span class="p">(</span><span class="nx">StateMachine</span> <span class="nv">$stateMachine</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">stateMachine</span> <span class="o">=</span> <span class="nv">$stateMachine</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="k">public</span> <span class="k">function</span> <span class="nf">someMethod</span><span class="p">(</span><span class="nx">PullRequest</span> <span class="nv">$pullRequest</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">stateMachine</span><span class="o">-&gt;</span><span class="na">apply</span><span class="p">(</span><span class="nv">$pullRequest</span><span class="p">,</span> <span class="s1">&#39;wait_for_review&#39;</span><span class="p">,</span> <span class="p">[</span>
            <span class="s1">&#39;log_comment&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;My logging comment for the wait for review transition.&#39;</span><span class="p">,</span>
        <span class="p">]);</span>
        <span class="c1">// ...</span>
    <span class="p">}</span>

    <span class="c1">// ...</span>
<span class="p">}</span>
</pre></div>
</div>
</div>
</div>
<div class="section" id="automatic-and-manual-validation">
<h2>Automatic and Manual Validation</h2>
<p>During cache warmup, Symfony validates the workflows and state machines that are
defined in configuration files. If your workflows or state machines are defined
programmatically instead of in a configuration file, you can validate them with
the <code class="docutils literal notranslate"><a class="reference external" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Workflow/Validator/WorkflowValidator.php" title="Symfony\Component\Workflow\Validator\WorkflowValidator"><span class="pre">WorkflowValidator</span></a><span class="link-target"> <span class="pre">[https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Workflow/Validator/WorkflowValidator.php]</span></span></code> and
<code class="docutils literal notranslate"><a class="reference external" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Workflow/Validator/StateMachineValidator.php" title="Symfony\Component\Workflow\Validator\StateMachineValidator"><span class="pre">StateMachineValidator</span></a><span class="link-target"> <span class="pre">[https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Workflow/Validator/StateMachineValidator.php]</span></span></code>:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="c1">// ...</span>
<span class="k">use</span> <span class="nx">Symfony\Component\Workflow\Definition</span><span class="p">;</span>
<span class="k">use</span> <span class="nx">Symfony\Component\Workflow\StateMachine</span><span class="p">;</span>
<span class="k">use</span> <span class="nx">Symfony\Component\Workflow\Validator\StateMachineValidator</span><span class="p">;</span>

<span class="nv">$states</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;created&#39;</span><span class="p">,</span> <span class="s1">&#39;activated&#39;</span><span class="p">,</span> <span class="s1">&#39;deleted&#39;</span><span class="p">];</span>
<span class="nv">$stateTransitions</span> <span class="o">=</span> <span class="p">[</span>
    <span class="k">new</span> <span class="nx">Transition</span><span class="p">(</span><span class="s1">&#39;activate&#39;</span><span class="p">,</span> <span class="s1">&#39;created&#39;</span><span class="p">,</span> <span class="s1">&#39;activated&#39;</span><span class="p">),</span>
    <span class="c1">// This duplicate event &quot;from&quot; the &quot;created&quot; state is invalid</span>
    <span class="k">new</span> <span class="nx">Transition</span><span class="p">(</span><span class="s1">&#39;activate&#39;</span><span class="p">,</span> <span class="s1">&#39;created&#39;</span><span class="p">,</span> <span class="s1">&#39;deleted&#39;</span><span class="p">),</span>
    <span class="k">new</span> <span class="nx">Transition</span><span class="p">(</span><span class="s1">&#39;delete&#39;</span><span class="p">,</span> <span class="s1">&#39;activated&#39;</span><span class="p">,</span> <span class="s1">&#39;deleted&#39;</span><span class="p">),</span>
<span class="p">];</span>

<span class="c1">// No validation is done upon initialization</span>
<span class="nv">$definition</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Definition</span><span class="p">(</span><span class="nv">$states</span><span class="p">,</span> <span class="nv">$stateTransitions</span><span class="p">);</span>

<span class="nv">$validator</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">StateMachineValidator</span><span class="p">();</span>
<span class="c1">// Throws InvalidDefinitionException in case of an invalid definition</span>
<span class="nv">$validator</span><span class="o">-&gt;</span><span class="na">validate</span><span class="p">(</span><span class="nv">$definition</span><span class="p">,</span> <span class="s1">&#39;My First StateMachine&#39;</span><span class="p">);</span>
</pre></div>
</div>
</div>
</div>


          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>