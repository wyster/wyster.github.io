<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <title>How to Reduce Code Duplication with “inherit_data”</title>
    <link rel="stylesheet" href="../_static/epub.css" type="text/css" />
    <link rel="stylesheet" href="../_static/pygments.css" type="text/css" />
    <link rel="stylesheet" type="text/css" href="../_static/rtd_custom.css" /> 
  </head><body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <div class="section" id="how-to-reduce-code-duplication-with-inherit-data">
<span id="index-0"></span><h1>How to Reduce Code Duplication with “inherit_data”</h1>
<p>The <code class="docutils literal notranslate"><span class="pre">inherit_data</span></code> form field option can be very useful when you have some
duplicated fields in different entities. For example, imagine you have two
entities, a <code class="docutils literal notranslate"><span class="pre">Company</span></code> and a <code class="docutils literal notranslate"><span class="pre">Customer</span></code>:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="c1">// src/Entity/Company.php</span>
<span class="k">namespace</span> <span class="nx">App\Entity</span><span class="p">;</span>

<span class="k">class</span> <span class="nc">Company</span>
<span class="p">{</span>
    <span class="k">private</span> <span class="nv">$name</span><span class="p">;</span>
    <span class="k">private</span> <span class="nv">$website</span><span class="p">;</span>

    <span class="k">private</span> <span class="nv">$address</span><span class="p">;</span>
    <span class="k">private</span> <span class="nv">$zipcode</span><span class="p">;</span>
    <span class="k">private</span> <span class="nv">$city</span><span class="p">;</span>
    <span class="k">private</span> <span class="nv">$country</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>
</div>
<div class="highlight-php notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1">// src/Entity/Customer.php</span>
<span class="k">namespace</span> <span class="nx">App\Entity</span><span class="p">;</span>

<span class="k">class</span> <span class="nc">Customer</span>
<span class="p">{</span>
    <span class="k">private</span> <span class="nv">$firstName</span><span class="p">;</span>
    <span class="k">private</span> <span class="nv">$lastName</span><span class="p">;</span>

    <span class="k">private</span> <span class="nv">$address</span><span class="p">;</span>
    <span class="k">private</span> <span class="nv">$zipcode</span><span class="p">;</span>
    <span class="k">private</span> <span class="nv">$city</span><span class="p">;</span>
    <span class="k">private</span> <span class="nv">$country</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>
</td></tr></table></div>
<p>As you can see, each entity shares a few of the same fields: <code class="docutils literal notranslate"><span class="pre">address</span></code>,
<code class="docutils literal notranslate"><span class="pre">zipcode</span></code>, <code class="docutils literal notranslate"><span class="pre">city</span></code>, <code class="docutils literal notranslate"><span class="pre">country</span></code>.</p>
<p>Start with building two forms for these entities, <code class="docutils literal notranslate"><span class="pre">CompanyType</span></code> and <code class="docutils literal notranslate"><span class="pre">CustomerType</span></code>:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="c1">// src/Form/Type/CompanyType.php</span>
<span class="k">namespace</span> <span class="nx">App\Form\Type</span><span class="p">;</span>

<span class="k">use</span> <span class="nx">Symfony\Component\Form\AbstractType</span><span class="p">;</span>
<span class="k">use</span> <span class="nx">Symfony\Component\Form\Extension\Core\Type\TextType</span><span class="p">;</span>
<span class="k">use</span> <span class="nx">Symfony\Component\Form\FormBuilderInterface</span><span class="p">;</span>

<span class="k">class</span> <span class="nc">CompanyType</span> <span class="k">extends</span> <span class="nx">AbstractType</span>
<span class="p">{</span>
    <span class="k">public</span> <span class="k">function</span> <span class="nf">buildForm</span><span class="p">(</span><span class="nx">FormBuilderInterface</span> <span class="nv">$builder</span><span class="p">,</span> <span class="k">array</span> <span class="nv">$options</span><span class="p">)</span><span class="o">:</span> <span class="nx">void</span>
    <span class="p">{</span>
        <span class="nv">$builder</span>
            <span class="o">-&gt;</span><span class="na">add</span><span class="p">(</span><span class="s1">&#39;name&#39;</span><span class="p">,</span> <span class="nx">TextType</span><span class="o">::</span><span class="na">class</span><span class="p">)</span>
            <span class="o">-&gt;</span><span class="na">add</span><span class="p">(</span><span class="s1">&#39;website&#39;</span><span class="p">,</span> <span class="nx">TextType</span><span class="o">::</span><span class="na">class</span><span class="p">);</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>
</div>
<div class="highlight-php notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1">// src/Form/Type/CustomerType.php</span>
<span class="k">namespace</span> <span class="nx">App\Form\Type</span><span class="p">;</span>

<span class="k">use</span> <span class="nx">Symfony\Component\Form\AbstractType</span><span class="p">;</span>
<span class="k">use</span> <span class="nx">Symfony\Component\Form\Extension\Core\Type\TextType</span><span class="p">;</span>
<span class="k">use</span> <span class="nx">Symfony\Component\Form\FormBuilderInterface</span><span class="p">;</span>

<span class="k">class</span> <span class="nc">CustomerType</span> <span class="k">extends</span> <span class="nx">AbstractType</span>
<span class="p">{</span>
    <span class="k">public</span> <span class="k">function</span> <span class="nf">buildForm</span><span class="p">(</span><span class="nx">FormBuilderInterface</span> <span class="nv">$builder</span><span class="p">,</span> <span class="k">array</span> <span class="nv">$options</span><span class="p">)</span><span class="o">:</span> <span class="nx">void</span>
    <span class="p">{</span>
        <span class="nv">$builder</span>
            <span class="o">-&gt;</span><span class="na">add</span><span class="p">(</span><span class="s1">&#39;firstName&#39;</span><span class="p">,</span> <span class="nx">TextType</span><span class="o">::</span><span class="na">class</span><span class="p">)</span>
            <span class="o">-&gt;</span><span class="na">add</span><span class="p">(</span><span class="s1">&#39;lastName&#39;</span><span class="p">,</span> <span class="nx">TextType</span><span class="o">::</span><span class="na">class</span><span class="p">);</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>
</td></tr></table></div>
<p>Instead of including the duplicated fields <code class="docutils literal notranslate"><span class="pre">address</span></code>, <code class="docutils literal notranslate"><span class="pre">zipcode</span></code>, <code class="docutils literal notranslate"><span class="pre">city</span></code>
and <code class="docutils literal notranslate"><span class="pre">country</span></code> in both of these forms, create a third form called <code class="docutils literal notranslate"><span class="pre">LocationType</span></code>
for that:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="c1">// src/Form/Type/LocationType.php</span>
<span class="k">namespace</span> <span class="nx">App\Form\Type</span><span class="p">;</span>

<span class="k">use</span> <span class="nx">Symfony\Component\Form\AbstractType</span><span class="p">;</span>
<span class="k">use</span> <span class="nx">Symfony\Component\Form\Extension\Core\Type\TextareaType</span><span class="p">;</span>
<span class="k">use</span> <span class="nx">Symfony\Component\Form\Extension\Core\Type\TextType</span><span class="p">;</span>
<span class="k">use</span> <span class="nx">Symfony\Component\Form\FormBuilderInterface</span><span class="p">;</span>
<span class="k">use</span> <span class="nx">Symfony\Component\OptionsResolver\OptionsResolver</span><span class="p">;</span>

<span class="k">class</span> <span class="nc">LocationType</span> <span class="k">extends</span> <span class="nx">AbstractType</span>
<span class="p">{</span>
    <span class="k">public</span> <span class="k">function</span> <span class="nf">buildForm</span><span class="p">(</span><span class="nx">FormBuilderInterface</span> <span class="nv">$builder</span><span class="p">,</span> <span class="k">array</span> <span class="nv">$options</span><span class="p">)</span><span class="o">:</span> <span class="nx">void</span>
    <span class="p">{</span>
        <span class="nv">$builder</span>
            <span class="o">-&gt;</span><span class="na">add</span><span class="p">(</span><span class="s1">&#39;address&#39;</span><span class="p">,</span> <span class="nx">TextareaType</span><span class="o">::</span><span class="na">class</span><span class="p">)</span>
            <span class="o">-&gt;</span><span class="na">add</span><span class="p">(</span><span class="s1">&#39;zipcode&#39;</span><span class="p">,</span> <span class="nx">TextType</span><span class="o">::</span><span class="na">class</span><span class="p">)</span>
            <span class="o">-&gt;</span><span class="na">add</span><span class="p">(</span><span class="s1">&#39;city&#39;</span><span class="p">,</span> <span class="nx">TextType</span><span class="o">::</span><span class="na">class</span><span class="p">)</span>
            <span class="o">-&gt;</span><span class="na">add</span><span class="p">(</span><span class="s1">&#39;country&#39;</span><span class="p">,</span> <span class="nx">TextType</span><span class="o">::</span><span class="na">class</span><span class="p">);</span>
    <span class="p">}</span>

    <span class="k">public</span> <span class="k">function</span> <span class="nf">configureOptions</span><span class="p">(</span><span class="nx">OptionsResolver</span> <span class="nv">$resolver</span><span class="p">)</span><span class="o">:</span> <span class="nx">void</span>
    <span class="p">{</span>
        <span class="nv">$resolver</span><span class="o">-&gt;</span><span class="na">setDefaults</span><span class="p">([</span>
            <span class="s1">&#39;inherit_data&#39;</span> <span class="o">=&gt;</span> <span class="k">true</span><span class="p">,</span>
        <span class="p">]);</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>
</div>
<p>The location form has an interesting option set, namely <code class="docutils literal notranslate"><span class="pre">inherit_data</span></code>. This
option lets the form inherit its data from its parent form. If embedded in
the company form, the fields of the location form will access the properties of
the <code class="docutils literal notranslate"><span class="pre">Company</span></code> instance. If embedded in the customer form, the fields will
access the properties of the <code class="docutils literal notranslate"><span class="pre">Customer</span></code> instance instead. Convenient, eh?</p>
<div class="admonition note">
<p class="admonition-title">Note</p>
<p>Instead of setting the <code class="docutils literal notranslate"><span class="pre">inherit_data</span></code> option inside <code class="docutils literal notranslate"><span class="pre">LocationType</span></code>, you
can also (just like with any option) pass it in the third argument of
<code class="docutils literal notranslate"><span class="pre">$builder-&gt;add()</span></code>.</p>
</div>
<p>Finally, make this work by adding the location form to your two original forms:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="c1">// src/Form/Type/CompanyType.php</span>
<span class="k">namespace</span> <span class="nx">App\Form\Type</span><span class="p">;</span>

<span class="k">use</span> <span class="nx">App\Entity\Company</span><span class="p">;</span>
<span class="c1">// ...</span>

<span class="k">public</span> <span class="k">function</span> <span class="nf">buildForm</span><span class="p">(</span><span class="nx">FormBuilderInterface</span> <span class="nv">$builder</span><span class="p">,</span> <span class="k">array</span> <span class="nv">$options</span><span class="p">)</span><span class="o">:</span> <span class="nx">void</span>
<span class="p">{</span>
    <span class="c1">// ...</span>

    <span class="nv">$builder</span><span class="o">-&gt;</span><span class="na">add</span><span class="p">(</span><span class="s1">&#39;foo&#39;</span><span class="p">,</span> <span class="nx">LocationType</span><span class="o">::</span><span class="na">class</span><span class="p">,</span> <span class="p">[</span>
        <span class="s1">&#39;data_class&#39;</span> <span class="o">=&gt;</span> <span class="nx">Company</span><span class="o">::</span><span class="na">class</span><span class="p">,</span>
    <span class="p">]);</span>
<span class="p">}</span>
</pre></div>
</div>
<div class="highlight-php notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1">// src/Form/Type/CustomerType.php</span>
<span class="k">namespace</span> <span class="nx">App\Form\Type</span><span class="p">;</span>

<span class="k">use</span> <span class="nx">App\Entity\Customer</span><span class="p">;</span>
<span class="c1">// ...</span>

<span class="k">public</span> <span class="k">function</span> <span class="nf">buildForm</span><span class="p">(</span><span class="nx">FormBuilderInterface</span> <span class="nv">$builder</span><span class="p">,</span> <span class="k">array</span> <span class="nv">$options</span><span class="p">)</span><span class="o">:</span> <span class="nx">void</span>
<span class="p">{</span>
    <span class="c1">// ...</span>

    <span class="nv">$builder</span><span class="o">-&gt;</span><span class="na">add</span><span class="p">(</span><span class="s1">&#39;bar&#39;</span><span class="p">,</span> <span class="nx">LocationType</span><span class="o">::</span><span class="na">class</span><span class="p">,</span> <span class="p">[</span>
        <span class="s1">&#39;data_class&#39;</span> <span class="o">=&gt;</span> <span class="nx">Customer</span><span class="o">::</span><span class="na">class</span><span class="p">,</span>
    <span class="p">]);</span>
<span class="p">}</span>
</pre></div>
</td></tr></table></div>
<p>That’s it! You have extracted duplicated field definitions to a separate
location form that you can reuse wherever you need it.</p>
<div class="admonition caution">
<p class="admonition-title">Caution</p>
<p>Forms with the <code class="docutils literal notranslate"><span class="pre">inherit_data</span></code> option set cannot have <code class="docutils literal notranslate"><span class="pre">*_SET_DATA</span></code> event listeners.</p>
</div>
</div>


          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>