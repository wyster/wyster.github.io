<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <title>How to Dynamically Configure Form Validation Groups</title>
    <link rel="stylesheet" href="../_static/epub.css" type="text/css" />
    <link rel="stylesheet" href="../_static/pygments.css" type="text/css" />
    <link rel="stylesheet" type="text/css" href="../_static/rtd_custom.css" /> 
  </head><body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <div class="section" id="how-to-dynamically-configure-form-validation-groups">
<h1>How to Dynamically Configure Form Validation Groups</h1>
<p>Sometimes you need advanced logic to determine the validation groups. If they
canâ€™t be determined by a callback, you can use a service. Create a service
that implements <code class="docutils literal notranslate"><span class="pre">__invoke()</span></code> which accepts a <code class="docutils literal notranslate"><span class="pre">FormInterface</span></code> as a
parameter:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="c1">// src/Validation/ValidationGroupResolver.php</span>
<span class="k">namespace</span> <span class="nx">App\Validation</span><span class="p">;</span>

<span class="k">use</span> <span class="nx">Symfony\Component\Form\FormInterface</span><span class="p">;</span>

<span class="k">class</span> <span class="nc">ValidationGroupResolver</span>
<span class="p">{</span>
    <span class="k">private</span> <span class="nv">$service1</span><span class="p">;</span>

    <span class="k">private</span> <span class="nv">$service2</span><span class="p">;</span>

    <span class="k">public</span> <span class="k">function</span> <span class="fm">__construct</span><span class="p">(</span><span class="nv">$service1</span><span class="p">,</span> <span class="nv">$service2</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">service1</span> <span class="o">=</span> <span class="nv">$service1</span><span class="p">;</span>
        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">service2</span> <span class="o">=</span> <span class="nv">$service2</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="k">public</span> <span class="k">function</span> <span class="fm">__invoke</span><span class="p">(</span><span class="nx">FormInterface</span> <span class="nv">$form</span><span class="p">)</span><span class="o">:</span> <span class="k">array</span>
    <span class="p">{</span>
        <span class="nv">$groups</span> <span class="o">=</span> <span class="p">[];</span>

        <span class="c1">// ... determine which groups to apply and return an array</span>

        <span class="k">return</span> <span class="nv">$groups</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>
</div>
<p>Then in your form, inject the resolver and set it as the <code class="docutils literal notranslate"><span class="pre">validation_groups</span></code>:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="c1">// src/Form/MyClassType.php;</span>
<span class="k">namespace</span> <span class="nx">App\Form</span><span class="p">;</span>

<span class="k">use</span> <span class="nx">App\Validator\ValidationGroupResolver</span><span class="p">;</span>
<span class="k">use</span> <span class="nx">Symfony\Component\Form\AbstractType</span>
<span class="k">use</span> <span class="nx">Symfony\Component\OptionsResolver\OptionsResolver</span><span class="p">;</span>

<span class="k">class</span> <span class="nc">MyClassType</span> <span class="k">extends</span> <span class="nx">AbstractType</span>
<span class="p">{</span>
    <span class="k">private</span> <span class="nv">$groupResolver</span><span class="p">;</span>

    <span class="k">public</span> <span class="k">function</span> <span class="fm">__construct</span><span class="p">(</span><span class="nx">ValidationGroupResolver</span> <span class="nv">$groupResolver</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">groupResolver</span> <span class="o">=</span> <span class="nv">$groupResolver</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="c1">// ...</span>
    <span class="k">public</span> <span class="k">function</span> <span class="nf">configureOptions</span><span class="p">(</span><span class="nx">OptionsResolver</span> <span class="nv">$resolver</span><span class="p">)</span><span class="o">:</span> <span class="nx">void</span>
    <span class="p">{</span>
        <span class="nv">$resolver</span><span class="o">-&gt;</span><span class="na">setDefaults</span><span class="p">([</span>
            <span class="s1">&#39;validation_groups&#39;</span> <span class="o">=&gt;</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">groupResolver</span><span class="p">,</span>
        <span class="p">]);</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>
</div>
<p>This will result in the form validator invoking your group resolver to set the
validation groups returned when validating.</p>
</div>


          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>