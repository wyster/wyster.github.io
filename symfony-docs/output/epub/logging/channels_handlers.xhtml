<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <title>How to Log Messages to different Files</title>
    <link rel="stylesheet" href="../_static/epub.css" type="text/css" />
    <link rel="stylesheet" href="../_static/pygments.css" type="text/css" />
    <link rel="stylesheet" type="text/css" href="../_static/rtd_custom.css" /> 
  </head><body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <div class="section" id="how-to-log-messages-to-different-files">
<span id="index-0"></span><h1>How to Log Messages to different Files</h1>
<p>The Symfony Framework organizes log messages into channels. By default, there
are several channels, including <code class="docutils literal notranslate"><span class="pre">doctrine</span></code>, <code class="docutils literal notranslate"><span class="pre">event</span></code>, <code class="docutils literal notranslate"><span class="pre">security</span></code>, <code class="docutils literal notranslate"><span class="pre">request</span></code>
and more. The channel is printed in the log message and can also be used
to direct different channels to different places/files.</p>
<p>By default, Symfony logs every message into a single file (regardless of
the channel).</p>
<div class="admonition note">
<p class="admonition-title">Note</p>
<p>Each channel corresponds to a different logger service (<code class="docutils literal notranslate"><span class="pre">monolog.logger.XXX</span></code>)
Use the <code class="docutils literal notranslate"><span class="pre">php</span> <span class="pre">bin/console</span> <span class="pre">debug:container</span> <span class="pre">monolog</span></code> command to see a full
list of services and learn <a class="reference internal" href="#monolog-autowire-channels"><span class="std std-ref">how to autowire monolog channels</span></a>.</p>
</div>
<div class="section" id="switching-a-channel-to-a-different-handler">
<span id="logging-channel-handler"></span><h2>Switching a Channel to a different Handler</h2>
<p>Now, suppose you want to log the <code class="docutils literal notranslate"><span class="pre">security</span></code> channel to a different file.
To do this, create a new handler and configure it to log only messages
from the <code class="docutils literal notranslate"><span class="pre">security</span></code> channel. The following example does that only in the
<code class="docutils literal notranslate"><span class="pre">prod</span></code> <a class="reference internal" href="../configuration.xhtml#configuration-environments"><span class="std std-ref">configuration environment</span></a> but you
can do it in any (or all) environments:</p>
<div class="configuration-block">
<ul class="simple">
<li><p><em>YAML</em><div class="highlight-yaml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1"># config/packages/prod/monolog.yaml</span>
<span class="l l-Scalar l-Scalar-Plain">monolog</span><span class="p p-Indicator">:</span>
    <span class="l l-Scalar l-Scalar-Plain">handlers</span><span class="p p-Indicator">:</span>
        <span class="l l-Scalar l-Scalar-Plain">security</span><span class="p p-Indicator">:</span>
            <span class="c1"># log all messages (since debug is the lowest level)</span>
            <span class="l l-Scalar l-Scalar-Plain">level</span><span class="p p-Indicator">:</span>    <span class="l l-Scalar l-Scalar-Plain">debug</span>
            <span class="l l-Scalar l-Scalar-Plain">type</span><span class="p p-Indicator">:</span>     <span class="l l-Scalar l-Scalar-Plain">stream</span>
            <span class="l l-Scalar l-Scalar-Plain">path</span><span class="p p-Indicator">:</span>     <span class="s">&#39;%kernel.logs_dir%/security.log&#39;</span>
            <span class="l l-Scalar l-Scalar-Plain">channels</span><span class="p p-Indicator">:</span> <span class="p p-Indicator">[</span><span class="nv">security</span><span class="p p-Indicator">]</span>

        <span class="c1"># an example of *not* logging security channel messages for this handler</span>
        <span class="l l-Scalar l-Scalar-Plain">main</span><span class="p p-Indicator">:</span>
            <span class="c1"># ...</span>
            <span class="c1"># channels: [&#39;!security&#39;]</span>
</pre></div>
</td></tr></table></div>
</p></li>
<li><p><em>XML</em><div class="highlight-xml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c">&lt;!-- config/packages/prod/monolog.xml--&gt;</span>
<span class="nt">&lt;container</span> <span class="na">xmlns=</span><span class="s">&quot;http://symfony.com/schema/dic/services&quot;</span>
    <span class="na">xmlns:xsi=</span><span class="s">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span>
    <span class="na">xmlns:monolog=</span><span class="s">&quot;http://symfony.com/schema/dic/monolog&quot;</span>
    <span class="na">xsi:schemaLocation=</span><span class="s">&quot;http://symfony.com/schema/dic/services</span>
<span class="s">        https://symfony.com/schema/dic/services/services-1.0.xsd</span>
<span class="s">        http://symfony.com/schema/dic/monolog</span>
<span class="s">        https://symfony.com/schema/dic/monolog/monolog-1.0.xsd&quot;</span><span class="nt">&gt;</span>

    <span class="nt">&lt;monolog:config&gt;</span>
        <span class="nt">&lt;monolog:handler</span> <span class="na">name=</span><span class="s">&quot;security&quot;</span> <span class="na">type=</span><span class="s">&quot;stream&quot;</span> <span class="na">path=</span><span class="s">&quot;%kernel.logs_dir%/security.log&quot;</span><span class="nt">&gt;</span>
            <span class="nt">&lt;monolog:channels&gt;</span>
                <span class="nt">&lt;monolog:channel&gt;</span>security<span class="nt">&lt;/monolog:channel&gt;</span>
            <span class="nt">&lt;/monolog:channels&gt;</span>
        <span class="nt">&lt;/monolog:handler&gt;</span>

        <span class="nt">&lt;monolog:handler</span> <span class="na">name=</span><span class="s">&quot;main&quot;</span> <span class="na">type=</span><span class="s">&quot;stream&quot;</span> <span class="na">path=</span><span class="s">&quot;%kernel.logs_dir%/main.log&quot;</span><span class="nt">&gt;</span>
            <span class="c">&lt;!-- ... --&gt;</span>
            <span class="nt">&lt;monolog:channels&gt;</span>
                <span class="nt">&lt;monolog:channel&gt;</span>!security<span class="nt">&lt;/monolog:channel&gt;</span>
            <span class="nt">&lt;/monolog:channels&gt;</span>
        <span class="nt">&lt;/monolog:handler&gt;</span>
    <span class="nt">&lt;/monolog:config&gt;</span>
<span class="nt">&lt;/container&gt;</span>
</pre></div>
</td></tr></table></div>
</p></li>
<li><p><em>PHP</em><div class="highlight-php notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1">// config/packages/prod/monolog.php</span>
<span class="nv">$container</span><span class="o">-&gt;</span><span class="na">loadFromExtension</span><span class="p">(</span><span class="s1">&#39;monolog&#39;</span><span class="p">,</span> <span class="p">[</span>
    <span class="s1">&#39;handlers&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
        <span class="s1">&#39;security&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
            <span class="s1">&#39;type&#39;</span>     <span class="o">=&gt;</span> <span class="s1">&#39;stream&#39;</span><span class="p">,</span>
            <span class="s1">&#39;path&#39;</span>     <span class="o">=&gt;</span> <span class="s1">&#39;%kernel.logs_dir%/security.log&#39;</span><span class="p">,</span>
            <span class="s1">&#39;channels&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
                <span class="s1">&#39;security&#39;</span><span class="p">,</span>
            <span class="p">],</span>
        <span class="p">],</span>
        <span class="s1">&#39;main&#39;</span>     <span class="o">=&gt;</span> <span class="p">[</span>
            <span class="c1">// ...</span>
            <span class="s1">&#39;channels&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
                <span class="s1">&#39;!security&#39;</span><span class="p">,</span>
            <span class="p">],</span>
        <span class="p">],</span>
    <span class="p">],</span>
<span class="p">]);</span>
</pre></div>
</td></tr></table></div>
</p></li>
</ul>
</div>
<div class="admonition caution">
<p class="admonition-title">Caution</p>
<p>The <code class="docutils literal notranslate"><span class="pre">channels</span></code> configuration only works for top-level handlers. Handlers
that are nested inside a group, buffer, filter, fingers crossed or other
such handler will ignore this configuration and will process every message
passed to them.</p>
</div>
</div>
<div class="section" id="yaml-specification">
<h2>YAML Specification</h2>
<p>You can specify the configuration by many forms:</p>
<div class="highlight-yaml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6
7</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="l l-Scalar l-Scalar-Plain">channels</span><span class="p p-Indicator">:</span> <span class="l l-Scalar l-Scalar-Plain">~</span>    <span class="c1"># Include all the channels</span>

<span class="l l-Scalar l-Scalar-Plain">channels</span><span class="p p-Indicator">:</span> <span class="l l-Scalar l-Scalar-Plain">foo</span>  <span class="c1"># Include only channel &#39;foo&#39;</span>
<span class="l l-Scalar l-Scalar-Plain">channels</span><span class="p p-Indicator">:</span> <span class="s">&#39;!foo&#39;</span> <span class="c1"># Include all channels, except &#39;foo&#39;</span>

<span class="l l-Scalar l-Scalar-Plain">channels</span><span class="p p-Indicator">:</span> <span class="p p-Indicator">[</span><span class="nv">foo</span><span class="p p-Indicator">,</span> <span class="nv">bar</span><span class="p p-Indicator">]</span>   <span class="c1"># Include only channels &#39;foo&#39; and &#39;bar&#39;</span>
<span class="l l-Scalar l-Scalar-Plain">channels</span><span class="p p-Indicator">:</span> <span class="p p-Indicator">[</span><span class="s">&#39;!foo&#39;</span><span class="p p-Indicator">,</span> <span class="s">&#39;!bar&#39;</span><span class="p p-Indicator">]</span> <span class="c1"># Include all channels, except &#39;foo&#39; and &#39;bar&#39;</span>
</pre></div>
</td></tr></table></div>
</div>
<div class="section" id="creating-your-own-channel">
<h2>Creating your own Channel</h2>
<p>You can change the channel Monolog logs to one service at a time. This is done
either via the <a class="reference internal" href="#monolog-channels-config"><span class="std std-ref">configuration</span></a> below
or by tagging your service with <a class="reference internal" href="../reference/dic_tags.xhtml#dic-tags-monolog"><span class="std std-ref">monolog.logger</span></a> and
specifying which channel the service should log to. With the tag, the logger
that is injected into that service is preconfigured to use the channel you’ve
specified.</p>
<div class="section" id="configure-additional-channels-without-tagged-services">
<span id="monolog-channels-config"></span><h3>Configure Additional Channels without Tagged Services</h3>
<p>You can also configure additional channels without the need to tag your services:</p>
<div class="configuration-block">
<ul class="simple">
<li><p><em>YAML</em><div class="highlight-yaml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1"># config/packages/prod/monolog.yaml</span>
<span class="l l-Scalar l-Scalar-Plain">monolog</span><span class="p p-Indicator">:</span>
    <span class="l l-Scalar l-Scalar-Plain">channels</span><span class="p p-Indicator">:</span> <span class="p p-Indicator">[</span><span class="s">&#39;foo&#39;</span><span class="p p-Indicator">,</span> <span class="s">&#39;bar&#39;</span><span class="p p-Indicator">]</span>
</pre></div>
</td></tr></table></div>
</p></li>
<li><p><em>XML</em><div class="highlight-xml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c">&lt;!-- config/packages/prod/monolog.xml --&gt;</span>
<span class="nt">&lt;container</span> <span class="na">xmlns=</span><span class="s">&quot;http://symfony.com/schema/dic/services&quot;</span>
    <span class="na">xmlns:xsi=</span><span class="s">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span>
    <span class="na">xmlns:monolog=</span><span class="s">&quot;http://symfony.com/schema/dic/monolog&quot;</span>
    <span class="na">xsi:schemaLocation=</span><span class="s">&quot;http://symfony.com/schema/dic/services</span>
<span class="s">        https://symfony.com/schema/dic/services/services-1.0.xsd</span>
<span class="s">        http://symfony.com/schema/dic/monolog</span>
<span class="s">        https://symfony.com/schema/dic/monolog/monolog-1.0.xsd&quot;</span><span class="nt">&gt;</span>

    <span class="nt">&lt;monolog:config&gt;</span>
        <span class="nt">&lt;monolog:channel&gt;</span>foo<span class="nt">&lt;/monolog:channel&gt;</span>
        <span class="nt">&lt;monolog:channel&gt;</span>bar<span class="nt">&lt;/monolog:channel&gt;</span>
    <span class="nt">&lt;/monolog:config&gt;</span>
<span class="nt">&lt;/container&gt;</span>
</pre></div>
</td></tr></table></div>
</p></li>
<li><p><em>PHP</em><div class="highlight-php notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6
7</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1">// config/packages/prod/monolog.php</span>
<span class="nv">$container</span><span class="o">-&gt;</span><span class="na">loadFromExtension</span><span class="p">(</span><span class="s1">&#39;monolog&#39;</span><span class="p">,</span> <span class="p">[</span>
    <span class="s1">&#39;channels&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
        <span class="s1">&#39;foo&#39;</span><span class="p">,</span>
        <span class="s1">&#39;bar&#39;</span><span class="p">,</span>
    <span class="p">],</span>
<span class="p">]);</span>
</pre></div>
</td></tr></table></div>
</p></li>
</ul>
</div>
<p>Symfony automatically registers one service per channel (in this example, the
channel <code class="docutils literal notranslate"><span class="pre">foo</span></code> creates a service called <code class="docutils literal notranslate"><span class="pre">monolog.logger.foo</span></code>). In order to
inject this service into others, you must update the service configuration to
<a class="reference internal" href="../service_container.xhtml#services-wire-specific-service"><span class="std std-ref">choose the specific service to inject</span></a>.</p>
</div>
<div class="section" id="how-to-autowire-logger-channels">
<span id="monolog-autowire-channels"></span><h3>How to Autowire Logger Channels</h3>
<p>Starting from <a class="reference external" href="https://github.com/symfony/monolog-bundle">MonologBundle</a><span class="link-target"> [https://github.com/symfony/monolog-bundle]</span> 3.5 you can autowire different Monolog channels
by type-hinting your service arguments with the following syntax:
<code class="docutils literal notranslate"><span class="pre">Psr\Log\LoggerInterface</span> <span class="pre">$&lt;channel&gt;Logger</span></code>. The <code class="docutils literal notranslate"><span class="pre">&lt;channel&gt;</span></code> must have been
<a class="reference internal" href="#monolog-channels-config"><span class="std std-ref">predefined in your Monolog configuration</span></a>.</p>
<p>For example to inject the service related to the <code class="docutils literal notranslate"><span class="pre">app</span></code> logger channel,
change your constructor like this:</p>
<div class="highlight-diff notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="gd">-     public function __construct(LoggerInterface $logger)</span>
<span class="gi">+     public function __construct(LoggerInterface $appLogger)</span>
    {
        $this-&gt;logger = $appLogger;
    }
</pre></div>
</td></tr></table></div>
</div>
</div>
</div>


          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>