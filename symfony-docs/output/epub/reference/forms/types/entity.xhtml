<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <title>EntityType Field</title>
    <link rel="stylesheet" href="../../../_static/epub.css" type="text/css" />
    <link rel="stylesheet" href="../../../_static/pygments.css" type="text/css" />
    <link rel="stylesheet" type="text/css" href="../../../_static/rtd_custom.css" /> 
  </head><body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <div class="section" id="entitytype-field">
<span id="index-0"></span><h1>EntityType Field</h1>
<p>A special <code class="docutils literal notranslate"><span class="pre">ChoiceType</span></code> field that’s designed to load options from a Doctrine
entity. For example, if you have a <code class="docutils literal notranslate"><span class="pre">Category</span></code> entity, you could use this
field to display a <code class="docutils literal notranslate"><span class="pre">select</span></code> field of all, or some, of the <code class="docutils literal notranslate"><span class="pre">Category</span></code>
objects from the database.</p>
<table class="docutils">
<colgroup>
<col style="width: 16%" />
<col style="width: 84%" />
</colgroup>
<tbody>
<tr class="row-odd"><td><p>Rendered as</p></td>
<td><p>can be various tags (see <a class="reference internal" href="choice.xhtml#forms-reference-choice-tags"><span class="std std-ref">Select Tag, Checkboxes or Radio Buttons</span></a>)</p></td>
</tr>
<tr class="row-even"><td><p>Options</p></td>
<td><ul class="simple">
<li><p><a class="reference internal" href="#choice-label">choice_label</a></p></li>
<li><p><a class="reference internal" href="#class">class</a></p></li>
<li><p><a class="reference internal" href="#em">em</a></p></li>
<li><p><a class="reference internal" href="#query-builder">query_builder</a></p></li>
</ul>
</td>
</tr>
<tr class="row-odd"><td><p>Overridden
options</p></td>
<td><ul class="simple">
<li><p><a class="reference internal" href="#choice-name">choice_name</a></p></li>
<li><p><a class="reference internal" href="#choice-value">choice_value</a></p></li>
<li><p><a class="reference internal" href="#choices">choices</a></p></li>
<li><p><a class="reference internal" href="#data-class">data_class</a></p></li>
</ul>
</td>
</tr>
<tr class="row-even"><td><p>Inherited
options</p></td>
<td><p>from the <a class="reference internal" href="choice.xhtml"><span class="doc">ChoiceType</span></a>:</p>
<ul class="simple">
<li><p><a class="reference internal" href="#choice-attr">choice_attr</a></p></li>
<li><p><a class="reference internal" href="#choice-translation-domain">choice_translation_domain</a></p></li>
<li><p><a class="reference internal" href="#expanded">expanded</a></p></li>
<li><p><a class="reference internal" href="#group-by">group_by</a></p></li>
<li><p><a class="reference internal" href="#multiple">multiple</a></p></li>
<li><p><a class="reference internal" href="#placeholder">placeholder</a></p></li>
<li><p><a class="reference internal" href="#preferred-choices">preferred_choices</a></p></li>
<li><p><a class="reference internal" href="#translation-domain">translation_domain</a></p></li>
<li><p><a class="reference internal" href="#trim">trim</a></p></li>
</ul>
<p>from the <a class="reference internal" href="form.xhtml"><span class="doc">FormType</span></a>:</p>
<ul class="simple">
<li><p><a class="reference internal" href="#attr">attr</a></p></li>
<li><p><a class="reference internal" href="#data">data</a></p></li>
<li><p><a class="reference internal" href="#disabled">disabled</a></p></li>
<li><p><a class="reference internal" href="#empty-data">empty_data</a></p></li>
<li><p><a class="reference internal" href="#error-bubbling">error_bubbling</a></p></li>
<li><p><a class="reference internal" href="#error-mapping">error_mapping</a></p></li>
<li><p><a class="reference internal" href="#help">help</a></p></li>
<li><p><a class="reference internal" href="#help-attr">help_attr</a></p></li>
<li><p><a class="reference internal" href="#help-html">help_html</a></p></li>
<li><p><a class="reference internal" href="#label">label</a></p></li>
<li><p><a class="reference internal" href="#label-attr">label_attr</a></p></li>
<li><p><a class="reference internal" href="#label-format">label_format</a></p></li>
<li><p><a class="reference internal" href="#mapped">mapped</a></p></li>
<li><p><a class="reference internal" href="#required">required</a></p></li>
<li><p><a class="reference internal" href="#row-attr">row_attr</a></p></li>
<li><p><a class="reference internal" href="#label-translation-parameters">label_translation_parameters</a></p></li>
<li><p><a class="reference internal" href="#attr-translation-parameters">attr_translation_parameters</a></p></li>
<li><p><a class="reference internal" href="#help-translation-parameters">help_translation_parameters</a></p></li>
</ul>
</td>
</tr>
<tr class="row-odd"><td><p>Parent type</p></td>
<td><p><a class="reference internal" href="choice.xhtml"><span class="doc">ChoiceType</span></a></p></td>
</tr>
<tr class="row-even"><td><p>Class</p></td>
<td><p><code class="docutils literal notranslate"><a class="reference external" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Bridge/Doctrine/Form/Type/EntityType.php" title="Symfony\Bridge\Doctrine\Form\Type\EntityType"><span class="pre">EntityType</span></a><span class="link-target"> <span class="pre">[https://github.com/symfony/symfony/blob/master/src/Symfony/Bridge/Doctrine/Form/Type/EntityType.php]</span></span></code></p></td>
</tr>
</tbody>
</table>
<div class="admonition tip">
<p class="admonition-title">Tip</p>
<p>The full list of options defined and inherited by this form type is
available running this command in your app:</p>
<div class="highlight-terminal notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre>1
2</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1"># replace &#39;FooType&#39; by the class name of your form type</span>
<span class="gp">$</span> php bin/console debug:form FooType
</pre></div>
</td></tr></table></div>
</div>
<div class="section" id="basic-usage">
<h2>Basic Usage</h2>
<p>The <code class="docutils literal notranslate"><span class="pre">entity</span></code> type has just one required option: the entity which should
be listed inside the choice field:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="k">use</span> <span class="nx">App\Entity\User</span><span class="p">;</span>
<span class="k">use</span> <span class="nx">Symfony\Bridge\Doctrine\Form\Type\EntityType</span><span class="p">;</span>
<span class="c1">// ...</span>

<span class="nv">$builder</span><span class="o">-&gt;</span><span class="na">add</span><span class="p">(</span><span class="s1">&#39;users&#39;</span><span class="p">,</span> <span class="nx">EntityType</span><span class="o">::</span><span class="na">class</span><span class="p">,</span> <span class="p">[</span>
    <span class="c1">// looks for choices from this entity</span>
    <span class="s1">&#39;class&#39;</span> <span class="o">=&gt;</span> <span class="nx">User</span><span class="o">::</span><span class="na">class</span><span class="p">,</span>

    <span class="c1">// uses the User.username property as the visible option string</span>
    <span class="s1">&#39;choice_label&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;username&#39;</span><span class="p">,</span>

    <span class="c1">// used to render a select box, check boxes or radios</span>
    <span class="c1">// &#39;multiple&#39; =&gt; true,</span>
    <span class="c1">// &#39;expanded&#39; =&gt; true,</span>
<span class="p">]);</span>
</pre></div>
</div>
<p>This will build a <code class="docutils literal notranslate"><span class="pre">select</span></code> drop-down containing <em>all</em> of the <code class="docutils literal notranslate"><span class="pre">User</span></code> objects
in the database. To render radio buttons or checkboxes instead, change the
<a class="reference internal" href="#multiple">multiple</a> and <a class="reference internal" href="#expanded">expanded</a> options.</p>
<div class="section" id="using-a-custom-query-for-the-entities">
<span id="ref-form-entity-query-builder"></span><h3>Using a Custom Query for the Entities</h3>
<p>If you want to create a custom query to use when fetching the entities
(e.g. you only want to return some entities, or need to order them), use
the <a class="reference internal" href="#query-builder">query_builder</a> option:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="k">use</span> <span class="nx">App\Entity\User</span><span class="p">;</span>
<span class="k">use</span> <span class="nx">Doctrine\ORM\EntityRepository</span><span class="p">;</span>
<span class="k">use</span> <span class="nx">Symfony\Bridge\Doctrine\Form\Type\EntityType</span><span class="p">;</span>
<span class="c1">// ...</span>

<span class="nv">$builder</span><span class="o">-&gt;</span><span class="na">add</span><span class="p">(</span><span class="s1">&#39;users&#39;</span><span class="p">,</span> <span class="nx">EntityType</span><span class="o">::</span><span class="na">class</span><span class="p">,</span> <span class="p">[</span>
    <span class="s1">&#39;class&#39;</span> <span class="o">=&gt;</span> <span class="nx">User</span><span class="o">::</span><span class="na">class</span><span class="p">,</span>
    <span class="s1">&#39;query_builder&#39;</span> <span class="o">=&gt;</span> <span class="k">function</span> <span class="p">(</span><span class="nx">EntityRepository</span> <span class="nv">$er</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">return</span> <span class="nv">$er</span><span class="o">-&gt;</span><span class="na">createQueryBuilder</span><span class="p">(</span><span class="s1">&#39;u&#39;</span><span class="p">)</span>
            <span class="o">-&gt;</span><span class="na">orderBy</span><span class="p">(</span><span class="s1">&#39;u.username&#39;</span><span class="p">,</span> <span class="s1">&#39;ASC&#39;</span><span class="p">);</span>
    <span class="p">},</span>
    <span class="s1">&#39;choice_label&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;username&#39;</span><span class="p">,</span>
<span class="p">]);</span>
</pre></div>
</div>
<div class="admonition note">
<p class="admonition-title">Note</p>
<p>Using form collections may result in making too many database requests to
fetch related entities. This is known as the <em>“N + 1 query problem”</em> and it
can be solved by <a class="reference internal" href="../../../doctrine/associations.xhtml#doctrine-associations-join-query"><span class="std std-ref">joining related records</span></a>
when querying for Doctrine associations.</p>
</div>
</div>
<div class="section" id="using-choices">
<span id="reference-forms-entity-choices"></span><h3>Using Choices</h3>
<p>If you already have the exact collection of entities that you want to include
in the choice element, just pass them via the <code class="docutils literal notranslate"><span class="pre">choices</span></code> key.</p>
<p>For example, if you have a <code class="docutils literal notranslate"><span class="pre">$group</span></code> variable (passed into your form perhaps
as a form option) and <code class="docutils literal notranslate"><span class="pre">getUsers()</span></code> returns a collection of <code class="docutils literal notranslate"><span class="pre">User</span></code> entities,
then you can supply the <code class="docutils literal notranslate"><span class="pre">choices</span></code> option directly:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="k">use</span> <span class="nx">App\Entity\User</span><span class="p">;</span>
<span class="k">use</span> <span class="nx">Symfony\Bridge\Doctrine\Form\Type\EntityType</span><span class="p">;</span>
<span class="c1">// ...</span>

<span class="nv">$builder</span><span class="o">-&gt;</span><span class="na">add</span><span class="p">(</span><span class="s1">&#39;users&#39;</span><span class="p">,</span> <span class="nx">EntityType</span><span class="o">::</span><span class="na">class</span><span class="p">,</span> <span class="p">[</span>
    <span class="s1">&#39;class&#39;</span> <span class="o">=&gt;</span> <span class="nx">User</span><span class="o">::</span><span class="na">class</span><span class="p">,</span>
    <span class="s1">&#39;choices&#39;</span> <span class="o">=&gt;</span> <span class="nv">$group</span><span class="o">-&gt;</span><span class="na">getUsers</span><span class="p">(),</span>
<span class="p">]);</span>
</pre></div>
</div>
</div>
</div>
<div class="section" id="select-tag-checkboxes-or-radio-buttons">
<h2>Select Tag, Checkboxes or Radio Buttons</h2>
<p>This field may be rendered as one of several HTML fields, depending
on the <code class="docutils literal notranslate"><span class="pre">expanded</span></code> and <code class="docutils literal notranslate"><span class="pre">multiple</span></code> options:</p>
<table class="docutils">
<colgroup>
<col style="width: 69%" />
<col style="width: 16%" />
<col style="width: 16%" />
</colgroup>
<thead>
<tr class="row-odd"><th class="head"><p>Element Type</p></th>
<th class="head"><p>Expanded</p></th>
<th class="head"><p>Multiple</p></th>
</tr>
</thead>
<tbody>
<tr class="row-even"><td><p>select tag</p></td>
<td><p><code class="docutils literal notranslate"><span class="pre">false</span></code></p></td>
<td><p><code class="docutils literal notranslate"><span class="pre">false</span></code></p></td>
</tr>
<tr class="row-odd"><td><p>select tag (with <code class="docutils literal notranslate"><span class="pre">multiple</span></code> attribute)</p></td>
<td><p><code class="docutils literal notranslate"><span class="pre">false</span></code></p></td>
<td><p><code class="docutils literal notranslate"><span class="pre">true</span></code></p></td>
</tr>
<tr class="row-even"><td><p>radio buttons</p></td>
<td><p><code class="docutils literal notranslate"><span class="pre">true</span></code></p></td>
<td><p><code class="docutils literal notranslate"><span class="pre">false</span></code></p></td>
</tr>
<tr class="row-odd"><td><p>checkboxes</p></td>
<td><p><code class="docutils literal notranslate"><span class="pre">true</span></code></p></td>
<td><p><code class="docutils literal notranslate"><span class="pre">true</span></code></p></td>
</tr>
</tbody>
</table>
</div>
<div class="section" id="field-options">
<h2>Field Options</h2>
<div class="section" id="choice-label">
<h3><code class="docutils literal notranslate"><span class="pre">choice_label</span></code></h3>
<p><strong>type</strong>: <code class="docutils literal notranslate"><span class="pre">string</span></code>, <code class="docutils literal notranslate"><span class="pre">callable</span></code> or <code class="docutils literal notranslate"><a class="reference external" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Component/PropertyAccess/PropertyPath.php" title="Symfony\Component\PropertyAccess\PropertyPath"><span class="pre">PropertyPath</span></a><span class="link-target"> <span class="pre">[https://github.com/symfony/symfony/blob/master/src/Symfony/Component/PropertyAccess/PropertyPath.php]</span></span></code></p>
<p>This is the property that should be used for displaying the entities as text in
the HTML element:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="k">use</span> <span class="nx">App\Entity\Category</span><span class="p">;</span>
<span class="k">use</span> <span class="nx">Symfony\Bridge\Doctrine\Form\Type\EntityType</span><span class="p">;</span>
<span class="c1">// ...</span>

<span class="nv">$builder</span><span class="o">-&gt;</span><span class="na">add</span><span class="p">(</span><span class="s1">&#39;category&#39;</span><span class="p">,</span> <span class="nx">EntityType</span><span class="o">::</span><span class="na">class</span><span class="p">,</span> <span class="p">[</span>
    <span class="s1">&#39;class&#39;</span> <span class="o">=&gt;</span> <span class="nx">Category</span><span class="o">::</span><span class="na">class</span><span class="p">,</span>
    <span class="s1">&#39;choice_label&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;displayName&#39;</span><span class="p">,</span>
<span class="p">]);</span>
</pre></div>
</div>
<p>If left blank, the entity object will be cast to a string and so must have a <code class="docutils literal notranslate"><span class="pre">__toString()</span></code>
method. You can also pass a callback function for more control:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="k">use</span> <span class="nx">App\Entity\Category</span><span class="p">;</span>
<span class="k">use</span> <span class="nx">Symfony\Bridge\Doctrine\Form\Type\EntityType</span><span class="p">;</span>
<span class="c1">// ...</span>

<span class="nv">$builder</span><span class="o">-&gt;</span><span class="na">add</span><span class="p">(</span><span class="s1">&#39;category&#39;</span><span class="p">,</span> <span class="nx">EntityType</span><span class="o">::</span><span class="na">class</span><span class="p">,</span> <span class="p">[</span>
    <span class="s1">&#39;class&#39;</span> <span class="o">=&gt;</span> <span class="nx">Category</span><span class="o">::</span><span class="na">class</span><span class="p">,</span>
    <span class="s1">&#39;choice_label&#39;</span> <span class="o">=&gt;</span> <span class="k">function</span> <span class="p">(</span><span class="nv">$category</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">return</span> <span class="nv">$category</span><span class="o">-&gt;</span><span class="na">getDisplayName</span><span class="p">();</span>
    <span class="p">}</span>
<span class="p">]);</span>
</pre></div>
</div>
<p>The method is called for each entity in the list and passed to the function. For
more details, see the main <a class="reference internal" href="choice.xhtml#reference-form-choice-label"><span class="std std-ref">choice_label</span></a> documentation.</p>
<div class="admonition note">
<p class="admonition-title">Note</p>
<p>When passing a string, the <code class="docutils literal notranslate"><span class="pre">choice_label</span></code> option is a property path. So you
can use anything supported by the
<a class="reference internal" href="../../../components/property_access.xhtml"><span class="doc">PropertyAccessor component</span></a></p>
<p>For example, if the translations property is actually an associative
array of objects, each with a <code class="docutils literal notranslate"><span class="pre">name</span></code> property, then you could do this:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="k">use</span> <span class="nx">App\Entity\Genre</span><span class="p">;</span>
<span class="k">use</span> <span class="nx">Symfony\Bridge\Doctrine\Form\Type\EntityType</span><span class="p">;</span>
<span class="c1">// ...</span>

<span class="nv">$builder</span><span class="o">-&gt;</span><span class="na">add</span><span class="p">(</span><span class="s1">&#39;genre&#39;</span><span class="p">,</span> <span class="nx">EntityType</span><span class="o">::</span><span class="na">class</span><span class="p">,</span> <span class="p">[</span>
    <span class="s1">&#39;class&#39;</span> <span class="o">=&gt;</span> <span class="nx">Genre</span><span class="o">::</span><span class="na">class</span><span class="p">,</span>
    <span class="s1">&#39;choice_label&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;translations[en].name&#39;</span><span class="p">,</span>
<span class="p">]);</span>
</pre></div>
</div>
</div>
</div>
<div class="section" id="class">
<h3><code class="docutils literal notranslate"><span class="pre">class</span></code></h3>
<p><strong>type</strong>: <code class="docutils literal notranslate"><span class="pre">string</span></code> <strong>required</strong></p>
<p>The class of your entity (e.g. <code class="docutils literal notranslate"><span class="pre">App:Category</span></code>). This can be
a fully-qualified class name (e.g. <code class="docutils literal notranslate"><span class="pre">App\Entity\Category</span></code>)
or the short alias name (as shown prior).</p>
</div>
<div class="section" id="em">
<h3><code class="docutils literal notranslate"><span class="pre">em</span></code></h3>
<p><strong>type</strong>: <code class="docutils literal notranslate"><span class="pre">string</span></code> | <code class="docutils literal notranslate"><span class="pre">Doctrine\Persistence\ObjectManager</span></code> <strong>default</strong>: the default entity manager</p>
<p>If specified, this entity manager will be used to load the choices
instead of the <code class="docutils literal notranslate"><span class="pre">default</span></code> entity manager.</p>
</div>
<div class="section" id="query-builder">
<h3><code class="docutils literal notranslate"><span class="pre">query_builder</span></code></h3>
<p><strong>type</strong>: <code class="docutils literal notranslate"><span class="pre">Doctrine\ORM\QueryBuilder</span></code> or a <code class="docutils literal notranslate"><span class="pre">callable</span></code> <strong>default</strong>: <code class="docutils literal notranslate"><span class="pre">null</span></code></p>
<p>Allows you to create a custom query for your choices. See
<a class="reference internal" href="#ref-form-entity-query-builder"><span class="std std-ref">Using a Custom Query for the Entities</span></a> for an example.</p>
<p>The value of this option can either be a <code class="docutils literal notranslate"><span class="pre">QueryBuilder</span></code> object, a callable or
<code class="docutils literal notranslate"><span class="pre">null</span></code> (which will load all entities). When using a callable, you will be
passed the <code class="docutils literal notranslate"><span class="pre">EntityRepository</span></code> of the entity as the only argument and should
return a <code class="docutils literal notranslate"><span class="pre">QueryBuilder</span></code>. Returning <code class="docutils literal notranslate"><span class="pre">null</span></code> in the Closure will result in
loading all entities.</p>
<div class="admonition caution">
<p class="admonition-title">Caution</p>
<p>The entity used in the <code class="docutils literal notranslate"><span class="pre">FROM</span></code> clause of the <code class="docutils literal notranslate"><span class="pre">query_builder</span></code> option
will always be validated against the class which you have specified at the
<a class="reference internal" href="#class">class</a> option. If you return another entity instead of the
one used in your <code class="docutils literal notranslate"><span class="pre">FROM</span></code> clause (for instance if you return an entity
from a joined table), it will break validation.</p>
</div>
</div>
</div>
<div class="section" id="overridden-options">
<h2>Overridden Options</h2>
<div class="section" id="choice-name">
<h3><code class="docutils literal notranslate"><span class="pre">choice_name</span></code></h3>
<p><strong>type</strong>: <code class="docutils literal notranslate"><span class="pre">callable</span></code>, <code class="docutils literal notranslate"><span class="pre">string</span></code> or <code class="docutils literal notranslate"><a class="reference external" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Component/PropertyAccess/PropertyPath.php" title="Symfony\Component\PropertyAccess\PropertyPath"><span class="pre">PropertyPath</span></a><span class="link-target"> <span class="pre">[https://github.com/symfony/symfony/blob/master/src/Symfony/Component/PropertyAccess/PropertyPath.php]</span></span></code> <strong>default</strong>: <code class="docutils literal notranslate"><span class="pre">null</span></code></p>
<p>Controls the internal field name of the choice. You normally don’t care about this,
but in some advanced cases, you might. For example, this “name” becomes the index
of the choice views in the template and is used as part of the field name
attribute.</p>
<p>This can be a callable or a property path. See <a class="reference internal" href="#choice-label">choice_label</a> for similar usage.
By default, the choice key or an incrementing integer may be used (starting at <code class="docutils literal notranslate"><span class="pre">0</span></code>).</p>
<div class="admonition caution">
<p class="admonition-title">Caution</p>
<p>The configured value must be a valid form name. Make sure to only return
valid names when using a callable. Valid form names must be composed of
letters, digits, underscores, dashes and colons and must not start with
a dash or a colon.</p>
</div>
<p>In the <code class="docutils literal notranslate"><span class="pre">EntityType</span></code>, this defaults to the <code class="docutils literal notranslate"><span class="pre">id</span></code> of the entity, if it can
be read. Otherwise, it falls back to using auto-incrementing integers.</p>
</div>
<div class="section" id="choice-value">
<h3><code class="docutils literal notranslate"><span class="pre">choice_value</span></code></h3>
<p><strong>type</strong>: <code class="docutils literal notranslate"><span class="pre">callable</span></code>, <code class="docutils literal notranslate"><span class="pre">string</span></code> or <code class="docutils literal notranslate"><a class="reference external" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Component/PropertyAccess/PropertyPath.php" title="Symfony\Component\PropertyAccess\PropertyPath"><span class="pre">PropertyPath</span></a><span class="link-target"> <span class="pre">[https://github.com/symfony/symfony/blob/master/src/Symfony/Component/PropertyAccess/PropertyPath.php]</span></span></code> <strong>default</strong>: <code class="docutils literal notranslate"><span class="pre">null</span></code></p>
<p>Returns the string “value” for each choice, which must be unique across all choices.
This is used in the <code class="docutils literal notranslate"><span class="pre">value</span></code> attribute in HTML and submitted in the POST/PUT requests.
You don’t normally need to worry about this, but it might be handy when processing
an API request (since you can configure the value that will be sent in the API request).</p>
<p>This can be a callable or a property path. By default, the choices are used if they
can be casted to strings. Otherwise an incrementing integer is used (starting at <code class="docutils literal notranslate"><span class="pre">0</span></code>).</p>
<p>If you pass a callable, it will receive one argument: the choice itself. When using
the <a class="reference internal" href="#"><span class="doc">EntityType Field</span></a>, the argument will be the entity object
for each choice or <code class="docutils literal notranslate"><span class="pre">null</span></code> in a placeholder is used, which you need to handle:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="s1">&#39;choice_value&#39;</span> <span class="o">=&gt;</span> <span class="k">function</span> <span class="p">(</span><span class="o">?</span><span class="nx">MyOptionEntity</span> <span class="nv">$entity</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">return</span> <span class="nv">$entity</span> <span class="o">?</span> <span class="nv">$entity</span><span class="o">-&gt;</span><span class="na">getId</span><span class="p">()</span> <span class="o">:</span> <span class="s1">&#39;&#39;</span><span class="p">;</span>
<span class="p">},</span>
</pre></div>
</div>
<p>In the <code class="docutils literal notranslate"><span class="pre">EntityType</span></code>, this is overridden to use the <code class="docutils literal notranslate"><span class="pre">id</span></code> by default. When the
<code class="docutils literal notranslate"><span class="pre">id</span></code> is used, Doctrine only queries for the objects for the ids that were actually
submitted.</p>
</div>
<div class="section" id="choices">
<h3><code class="docutils literal notranslate"><span class="pre">choices</span></code></h3>
<p><strong>type</strong>:  <code class="docutils literal notranslate"><span class="pre">array</span></code> | <code class="docutils literal notranslate"><span class="pre">\Traversable</span></code> <strong>default</strong>: <code class="docutils literal notranslate"><span class="pre">null</span></code></p>
<p>Instead of allowing the <a class="reference internal" href="#class">class</a> and <a class="reference internal" href="#query-builder">query_builder</a> options to fetch the
entities to include for you, you can pass the <code class="docutils literal notranslate"><span class="pre">choices</span></code> option directly.
See <a class="reference internal" href="#reference-forms-entity-choices"><span class="std std-ref">Using Choices</span></a>.</p>
</div>
<div class="section" id="data-class">
<h3><code class="docutils literal notranslate"><span class="pre">data_class</span></code></h3>
<p><strong>type</strong>: <code class="docutils literal notranslate"><span class="pre">string</span></code> <strong>default</strong>: <code class="docutils literal notranslate"><span class="pre">null</span></code></p>
<p>This option is not used in favor of the <code class="docutils literal notranslate"><span class="pre">class</span></code> option which is required
to query the entities.</p>
</div>
</div>
<div class="section" id="inherited-options">
<h2>Inherited Options</h2>
<p>These options inherit from the <a class="reference internal" href="choice.xhtml"><span class="doc">ChoiceType</span></a>:</p>
<div class="section" id="choice-attr">
<h3><code class="docutils literal notranslate"><span class="pre">choice_attr</span></code></h3>
<p><strong>type</strong>: <code class="docutils literal notranslate"><span class="pre">array</span></code>, <code class="docutils literal notranslate"><span class="pre">callable</span></code>, <code class="docutils literal notranslate"><span class="pre">string</span></code> or <code class="docutils literal notranslate"><a class="reference external" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Component/PropertyAccess/PropertyPath.php" title="Symfony\Component\PropertyAccess\PropertyPath"><span class="pre">PropertyPath</span></a><span class="link-target"> <span class="pre">[https://github.com/symfony/symfony/blob/master/src/Symfony/Component/PropertyAccess/PropertyPath.php]</span></span></code> <strong>default</strong>: <code class="docutils literal notranslate"><span class="pre">[]</span></code></p>
<p>Use this to add additional HTML attributes to each choice. This can be
an associative array where the keys match the choice keys and the values
are the attributes for each choice, a callable or a property path
(just like <a class="reference internal" href="#choice-label">choice_label</a>).</p>
<p>If an array, the keys of the <code class="docutils literal notranslate"><span class="pre">choices</span></code> array must be used as keys:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="k">use</span> <span class="nx">Symfony\Component\Form\Extension\Core\Type\ChoiceType</span><span class="p">;</span>
<span class="c1">// ...</span>

<span class="nv">$builder</span><span class="o">-&gt;</span><span class="na">add</span><span class="p">(</span><span class="s1">&#39;fruits&#39;</span><span class="p">,</span> <span class="nx">ChoiceType</span><span class="o">::</span><span class="na">class</span><span class="p">,</span> <span class="p">[</span>
    <span class="s1">&#39;choices&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
        <span class="s1">&#39;Apple&#39;</span> <span class="o">=&gt;</span> <span class="mi">1</span><span class="p">,</span>
        <span class="s1">&#39;Banana&#39;</span> <span class="o">=&gt;</span> <span class="mi">2</span><span class="p">,</span>
        <span class="s1">&#39;Durian&#39;</span> <span class="o">=&gt;</span> <span class="mi">3</span><span class="p">,</span>
    <span class="p">],</span>
    <span class="s1">&#39;choice_attr&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
        <span class="s1">&#39;Apple&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span><span class="s1">&#39;data-color&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;Red&#39;</span><span class="p">],</span>
        <span class="s1">&#39;Banana&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span><span class="s1">&#39;data-color&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;Yellow&#39;</span><span class="p">],</span>
        <span class="s1">&#39;Durian&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span><span class="s1">&#39;data-color&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;Green&#39;</span><span class="p">],</span>
    <span class="p">],</span>
<span class="p">]);</span>

<span class="c1">// or use a callable</span>
<span class="nv">$builder</span><span class="o">-&gt;</span><span class="na">add</span><span class="p">(</span><span class="s1">&#39;attending&#39;</span><span class="p">,</span> <span class="nx">ChoiceType</span><span class="o">::</span><span class="na">class</span><span class="p">,</span> <span class="p">[</span>
    <span class="s1">&#39;choices&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
        <span class="s1">&#39;Yes&#39;</span> <span class="o">=&gt;</span> <span class="k">true</span><span class="p">,</span>
        <span class="s1">&#39;No&#39;</span> <span class="o">=&gt;</span> <span class="k">false</span><span class="p">,</span>
        <span class="s1">&#39;Maybe&#39;</span> <span class="o">=&gt;</span> <span class="k">null</span><span class="p">,</span>
    <span class="p">],</span>
    <span class="s1">&#39;choice_attr&#39;</span> <span class="o">=&gt;</span> <span class="k">function</span><span class="p">(</span><span class="nv">$choice</span><span class="p">,</span> <span class="nv">$key</span><span class="p">,</span> <span class="nv">$value</span><span class="p">)</span> <span class="p">{</span>
        <span class="c1">// adds a class like attending_yes, attending_no, etc</span>
        <span class="k">return</span> <span class="p">[</span><span class="s1">&#39;class&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;attending_&#39;</span><span class="o">.</span><span class="nb">strtolower</span><span class="p">(</span><span class="nv">$key</span><span class="p">)];</span>
    <span class="p">},</span>
<span class="p">]);</span>
</pre></div>
</div>
</div>
<div class="section" id="choice-translation-domain">
<h3><code class="docutils literal notranslate"><span class="pre">choice_translation_domain</span></code></h3>
<p><strong>type</strong>: <code class="docutils literal notranslate"><span class="pre">string</span></code>, <code class="docutils literal notranslate"><span class="pre">boolean</span></code> or <code class="docutils literal notranslate"><span class="pre">null</span></code> <strong>default</strong>: <code class="docutils literal notranslate"><span class="pre">false</span></code></p>
<p>This option determines if the choice values should be translated and in which
translation domain.</p>
<p>The values of the <code class="docutils literal notranslate"><span class="pre">choice_translation_domain</span></code> option can be <code class="docutils literal notranslate"><span class="pre">true</span></code> (reuse the current
translation domain), <code class="docutils literal notranslate"><span class="pre">false</span></code> (disable translation), <code class="docutils literal notranslate"><span class="pre">null</span></code> (uses the parent translation
domain or the default domain) or a string which represents the exact translation
domain to use.</p>
</div>
<div class="section" id="expanded">
<h3><code class="docutils literal notranslate"><span class="pre">expanded</span></code></h3>
<p><strong>type</strong>: <code class="docutils literal notranslate"><span class="pre">boolean</span></code> <strong>default</strong>: <code class="docutils literal notranslate"><span class="pre">false</span></code></p>
<p>If set to true, radio buttons or checkboxes will be rendered (depending
on the <code class="docutils literal notranslate"><span class="pre">multiple</span></code> value). If false, a select element will be rendered.</p>
</div>
<div class="section" id="group-by">
<h3><code class="docutils literal notranslate"><span class="pre">group_by</span></code></h3>
<p><strong>type</strong>: <code class="docutils literal notranslate"><span class="pre">string</span></code>, <code class="docutils literal notranslate"><span class="pre">callable</span></code> or <code class="docutils literal notranslate"><a class="reference external" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Component/PropertyAccess/PropertyPath.php" title="Symfony\Component\PropertyAccess\PropertyPath"><span class="pre">PropertyPath</span></a><span class="link-target"> <span class="pre">[https://github.com/symfony/symfony/blob/master/src/Symfony/Component/PropertyAccess/PropertyPath.php]</span></span></code> <strong>default</strong>: <code class="docutils literal notranslate"><span class="pre">null</span></code></p>
<p>You can group the <code class="docutils literal notranslate"><span class="pre">&lt;option&gt;</span></code> elements of a <code class="docutils literal notranslate"><span class="pre">&lt;select&gt;</span></code> into <code class="docutils literal notranslate"><span class="pre">&lt;optgroup&gt;</span></code>
by passing a multi-dimensional array to <code class="docutils literal notranslate"><span class="pre">choices</span></code>. See the
<a class="reference internal" href="choice.xhtml#form-choices-simple-grouping"><span class="std std-ref">Grouping Options</span></a> section about that.</p>
<p>The <code class="docutils literal notranslate"><span class="pre">group_by</span></code> option is an alternative way to group choices, which gives you
a bit more flexibility.</p>
<p>Take the following example:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="k">use</span> <span class="nx">Symfony\Component\Form\Extension\Core\Type\ChoiceType</span><span class="p">;</span>
<span class="c1">// ...</span>

<span class="nv">$builder</span><span class="o">-&gt;</span><span class="na">add</span><span class="p">(</span><span class="s1">&#39;publishAt&#39;</span><span class="p">,</span> <span class="nx">ChoiceType</span><span class="o">::</span><span class="na">class</span><span class="p">,</span> <span class="p">[</span>
    <span class="s1">&#39;choices&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
        <span class="s1">&#39;now&#39;</span> <span class="o">=&gt;</span> <span class="k">new</span> <span class="nx">\DateTime</span><span class="p">(</span><span class="s1">&#39;now&#39;</span><span class="p">),</span>
        <span class="s1">&#39;tomorrow&#39;</span> <span class="o">=&gt;</span> <span class="k">new</span> <span class="nx">\DateTime</span><span class="p">(</span><span class="s1">&#39;+1 day&#39;</span><span class="p">),</span>
        <span class="s1">&#39;1 week&#39;</span> <span class="o">=&gt;</span> <span class="k">new</span> <span class="nx">\DateTime</span><span class="p">(</span><span class="s1">&#39;+1 week&#39;</span><span class="p">),</span>
        <span class="s1">&#39;1 month&#39;</span> <span class="o">=&gt;</span> <span class="k">new</span> <span class="nx">\DateTime</span><span class="p">(</span><span class="s1">&#39;+1 month&#39;</span><span class="p">),</span>
    <span class="p">],</span>
    <span class="s1">&#39;group_by&#39;</span> <span class="o">=&gt;</span> <span class="k">function</span><span class="p">(</span><span class="nv">$choice</span><span class="p">,</span> <span class="nv">$key</span><span class="p">,</span> <span class="nv">$value</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">if</span> <span class="p">(</span><span class="nv">$choice</span> <span class="o">&lt;=</span> <span class="k">new</span> <span class="nx">\DateTime</span><span class="p">(</span><span class="s1">&#39;+3 days&#39;</span><span class="p">))</span> <span class="p">{</span>
            <span class="k">return</span> <span class="s1">&#39;Soon&#39;</span><span class="p">;</span>
        <span class="p">}</span>

        <span class="k">return</span> <span class="s1">&#39;Later&#39;</span><span class="p">;</span>
    <span class="p">},</span>
<span class="p">]);</span>
</pre></div>
</div>
<p>This groups the dates that are within 3 days into “Soon” and everything else into
a “Later” <code class="docutils literal notranslate"><span class="pre">&lt;optgroup&gt;</span></code>:</p>
<img alt="../../../_images/choice-example5.png" class="align-center" src="../../../_images/choice-example5.png" />
<p>If you return <code class="docutils literal notranslate"><span class="pre">null</span></code>, the option won’t be grouped. You can also pass a string
“property path” that will be called to get the group. See the <a class="reference internal" href="#choice-label">choice_label</a> for
details about using a property path.</p>
</div>
<div class="section" id="multiple">
<h3><code class="docutils literal notranslate"><span class="pre">multiple</span></code></h3>
<p><strong>type</strong>: <code class="docutils literal notranslate"><span class="pre">boolean</span></code> <strong>default</strong>: <code class="docutils literal notranslate"><span class="pre">false</span></code></p>
<p>If true, the user will be able to select multiple options (as opposed
to choosing just one option). Depending on the value of the <code class="docutils literal notranslate"><span class="pre">expanded</span></code>
option, this will render either a select tag or checkboxes if true and
a select tag or radio buttons if false. The returned value will be an array.</p>
<div class="admonition note">
<p class="admonition-title">Note</p>
<p>If you are working with a collection of Doctrine entities, it will be
helpful to read the documentation for the
<a class="reference internal" href="collection.xhtml"><span class="doc">CollectionType Field</span></a> as well. In addition, there
is a complete example in the <a class="reference internal" href="../../../form/form_collections.xhtml"><span class="doc">How to Embed a Collection of Forms</span></a> article.</p>
</div>
</div>
<div class="section" id="placeholder">
<h3><code class="docutils literal notranslate"><span class="pre">placeholder</span></code></h3>
<p><strong>type</strong>: <code class="docutils literal notranslate"><span class="pre">string</span></code> or <code class="docutils literal notranslate"><span class="pre">boolean</span></code></p>
<p>This option determines whether or not a special “empty” option (e.g. “Choose
an option”) will appear at the top of a select widget. This option only
applies if the <code class="docutils literal notranslate"><span class="pre">multiple</span></code> option is set to false.</p>
<ul>
<li><p>Add an empty value with “Choose an option” as the text:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="k">use</span> <span class="nx">Symfony\Component\Form\Extension\Core\Type\ChoiceType</span><span class="p">;</span>
<span class="c1">// ...</span>

<span class="nv">$builder</span><span class="o">-&gt;</span><span class="na">add</span><span class="p">(</span><span class="s1">&#39;states&#39;</span><span class="p">,</span> <span class="nx">ChoiceType</span><span class="o">::</span><span class="na">class</span><span class="p">,</span> <span class="p">[</span>
    <span class="s1">&#39;placeholder&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;Choose an option&#39;</span><span class="p">,</span>
<span class="p">]);</span>
</pre></div>
</div>
</li>
<li><p>Guarantee that no “empty” value option is displayed:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="k">use</span> <span class="nx">Symfony\Component\Form\Extension\Core\Type\ChoiceType</span><span class="p">;</span>
<span class="c1">// ...</span>

<span class="nv">$builder</span><span class="o">-&gt;</span><span class="na">add</span><span class="p">(</span><span class="s1">&#39;states&#39;</span><span class="p">,</span> <span class="nx">ChoiceType</span><span class="o">::</span><span class="na">class</span><span class="p">,</span> <span class="p">[</span>
    <span class="s1">&#39;placeholder&#39;</span> <span class="o">=&gt;</span> <span class="k">false</span><span class="p">,</span>
<span class="p">]);</span>
</pre></div>
</div>
</li>
</ul>
<p>If you leave the <code class="docutils literal notranslate"><span class="pre">placeholder</span></code> option unset, then a blank (with no text)
option will automatically be added if and only if the <code class="docutils literal notranslate"><span class="pre">required</span></code> option
is false:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="k">use</span> <span class="nx">Symfony\Component\Form\Extension\Core\Type\ChoiceType</span><span class="p">;</span>
<span class="c1">// ...</span>

<span class="c1">// a blank (with no text) option will be added</span>
<span class="nv">$builder</span><span class="o">-&gt;</span><span class="na">add</span><span class="p">(</span><span class="s1">&#39;states&#39;</span><span class="p">,</span> <span class="nx">ChoiceType</span><span class="o">::</span><span class="na">class</span><span class="p">,</span> <span class="p">[</span>
    <span class="s1">&#39;required&#39;</span> <span class="o">=&gt;</span> <span class="k">false</span><span class="p">,</span>
<span class="p">]);</span>
</pre></div>
</div>
</div>
<div class="section" id="preferred-choices">
<h3><code class="docutils literal notranslate"><span class="pre">preferred_choices</span></code></h3>
<p><strong>type</strong>: <code class="docutils literal notranslate"><span class="pre">array</span></code> or <code class="docutils literal notranslate"><span class="pre">callable</span></code> <strong>default</strong>: <code class="docutils literal notranslate"><span class="pre">[]</span></code></p>
<p>This option allows you to move certain choices to the top of your list with a visual
separator between them and the rest of the options. This option expects an array
of entity objects:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="k">use</span> <span class="nx">App\Entity\User</span><span class="p">;</span>
<span class="k">use</span> <span class="nx">Symfony\Bridge\Doctrine\Form\Type\EntityType</span><span class="p">;</span>
<span class="c1">// ...</span>

<span class="nv">$builder</span><span class="o">-&gt;</span><span class="na">add</span><span class="p">(</span><span class="s1">&#39;users&#39;</span><span class="p">,</span> <span class="nx">EntityType</span><span class="o">::</span><span class="na">class</span><span class="p">,</span> <span class="p">[</span>
    <span class="s1">&#39;class&#39;</span> <span class="o">=&gt;</span> <span class="nx">User</span><span class="o">::</span><span class="na">class</span><span class="p">,</span>
    <span class="c1">// this method must return an array of User entities</span>
    <span class="s1">&#39;preferred_choices&#39;</span> <span class="o">=&gt;</span> <span class="nv">$group</span><span class="o">-&gt;</span><span class="na">getPreferredUsers</span><span class="p">(),</span>
<span class="p">]);</span>
</pre></div>
</div>
<p>The preferred choices are only meaningful when rendering a <code class="docutils literal notranslate"><span class="pre">select</span></code> element
(i.e. <code class="docutils literal notranslate"><span class="pre">expanded</span></code> false). The preferred choices and normal choices are separated
visually by a set of dotted lines (i.e. <code class="docutils literal notranslate"><span class="pre">-------------------</span></code>). This can be customized
when rendering the field:</p>
<div class="highlight-twig notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre>1</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="cp">{{</span> <span class="nv">form_widget</span><span class="o">(</span><span class="nv">form.publishAt</span><span class="o">,</span> <span class="o">{</span> <span class="s1">&#39;separator&#39;</span><span class="o">:</span> <span class="s1">&#39;=====&#39;</span> <span class="o">})</span> <span class="cp">}}</span><span class="x"></span>
</pre></div>
</td></tr></table></div>
</div>
<div class="section" id="translation-domain">
<h3>translation_domain</h3>
<p><strong>type</strong>: <code class="docutils literal notranslate"><span class="pre">string</span></code> <strong>default</strong>: <code class="docutils literal notranslate"><span class="pre">messages</span></code></p>
<p>In case <a class="reference internal" href="#choice-translation-domain">choice_translation_domain</a> is set to <code class="docutils literal notranslate"><span class="pre">true</span></code> or <code class="docutils literal notranslate"><span class="pre">null</span></code>, this
configures the exact translation domain that will be used for any labels or
options that are rendered for this field.</p>
</div>
<div class="section" id="trim">
<h3><code class="docutils literal notranslate"><span class="pre">trim</span></code></h3>
<p><strong>type</strong>: <code class="docutils literal notranslate"><span class="pre">boolean</span></code> <strong>default</strong>: <code class="docutils literal notranslate"><span class="pre">false</span></code></p>
<p>Trimming is disabled by default because the selected value or values must match
the given choice values exactly (and they could contain whitespaces).</p>
<p>These options inherit from the <a class="reference internal" href="form.xhtml"><span class="doc">form</span></a>
type:</p>
</div>
<div class="section" id="attr">
<h3><code class="docutils literal notranslate"><span class="pre">attr</span></code></h3>
<p><strong>type</strong>: <code class="docutils literal notranslate"><span class="pre">array</span></code> <strong>default</strong>: <code class="docutils literal notranslate"><span class="pre">[]</span></code></p>
<p>If you want to add extra attributes to an HTML field representation
you can use the <code class="docutils literal notranslate"><span class="pre">attr</span></code> option. It’s an associative array with HTML attributes
as keys. This can be useful when you need to set a custom class for some widget:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="nv">$builder</span><span class="o">-&gt;</span><span class="na">add</span><span class="p">(</span><span class="s1">&#39;body&#39;</span><span class="p">,</span> <span class="nx">TextareaType</span><span class="o">::</span><span class="na">class</span><span class="p">,</span> <span class="p">[</span>
    <span class="s1">&#39;attr&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span><span class="s1">&#39;class&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;tinymce&#39;</span><span class="p">],</span>
<span class="p">]);</span>
</pre></div>
</div>
<div class="admonition seealso">
<p class="admonition-title">See also</p>
<p>Use the <code class="docutils literal notranslate"><span class="pre">row_attr</span></code> option if you want to add these attributes to the
the <a class="reference internal" href="../../../form/form_customization.xhtml#form-rendering-basics"><span class="std std-ref">form type row</span></a> element.</p>
</div>
</div>
<div class="section" id="data">
<h3><code class="docutils literal notranslate"><span class="pre">data</span></code></h3>
<p><strong>type</strong>: <code class="docutils literal notranslate"><span class="pre">mixed</span></code> <strong>default</strong>: Defaults to field of the underlying structure.</p>
<p>When you create a form, each field initially displays the value of the
corresponding property of the form’s domain data (e.g. if you bind an object to
the form). If you want to override this initial value for the form or
an individual field, you can set it in the data option:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="k">use</span> <span class="nx">Symfony\Component\Form\Extension\Core\Type\HiddenType</span><span class="p">;</span>
<span class="c1">// ...</span>

<span class="nv">$builder</span><span class="o">-&gt;</span><span class="na">add</span><span class="p">(</span><span class="s1">&#39;token&#39;</span><span class="p">,</span> <span class="nx">HiddenType</span><span class="o">::</span><span class="na">class</span><span class="p">,</span> <span class="p">[</span>
    <span class="s1">&#39;data&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;abcdef&#39;</span><span class="p">,</span>
<span class="p">]);</span>
</pre></div>
</div>
<div class="admonition caution">
<p class="admonition-title">Caution</p>
<p>The <code class="docutils literal notranslate"><span class="pre">data</span></code> option <em>always</em> overrides the value taken from the domain data
(object) when rendering. This means the object value is also overridden when
the form edits an already persisted object, causing it to lose its
persisted value when the form is submitted.</p>
</div>
</div>
<div class="section" id="disabled">
<h3><code class="docutils literal notranslate"><span class="pre">disabled</span></code></h3>
<p><strong>type</strong>: <code class="docutils literal notranslate"><span class="pre">boolean</span></code>  <strong>default</strong>: <code class="docutils literal notranslate"><span class="pre">false</span></code></p>
<p>If you don’t want a user to modify the value of a field, you can set the
disabled option to true. Any submitted value will be ignored.</p>
</div>
<div class="section" id="empty-data">
<h3><code class="docutils literal notranslate"><span class="pre">empty_data</span></code></h3>
<p><strong>type</strong>: <code class="docutils literal notranslate"><span class="pre">mixed</span></code></p>
<p>The actual default value of this option depends on other field options:</p>
<ul class="simple">
<li><p>If <code class="docutils literal notranslate"><span class="pre">multiple</span></code> is <code class="docutils literal notranslate"><span class="pre">false</span></code> and <code class="docutils literal notranslate"><span class="pre">expanded</span></code> is <code class="docutils literal notranslate"><span class="pre">false</span></code>, then <code class="docutils literal notranslate"><span class="pre">''</span></code>
(empty string);</p></li>
<li><p>Otherwise <code class="docutils literal notranslate"><span class="pre">[]</span></code> (empty array).</p></li>
</ul>
<p>This option determines what value the field will <em>return</em> when the submitted
value is empty (or missing). It does not set an initial value if none is
provided when the form is rendered in a view.</p>
<p>This means it helps you handling form submission with blank fields. For
example, if you want the <code class="docutils literal notranslate"><span class="pre">name</span></code> field to be explicitly set to <code class="docutils literal notranslate"><span class="pre">John</span> <span class="pre">Doe</span></code>
when no value is selected, you can do it like this:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="nv">$builder</span><span class="o">-&gt;</span><span class="na">add</span><span class="p">(</span><span class="s1">&#39;name&#39;</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="p">[</span>
    <span class="s1">&#39;required&#39;</span>   <span class="o">=&gt;</span> <span class="k">false</span><span class="p">,</span>
    <span class="s1">&#39;empty_data&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;John Doe&#39;</span><span class="p">,</span>
<span class="p">]);</span>
</pre></div>
</div>
<p>This will still render an empty text box, but upon submission the <code class="docutils literal notranslate"><span class="pre">John</span> <span class="pre">Doe</span></code>
value will be set. Use the <code class="docutils literal notranslate"><span class="pre">data</span></code> or <code class="docutils literal notranslate"><span class="pre">placeholder</span></code> options to show this
initial value in the rendered form.</p>
<p>If a form is compound, you can set <code class="docutils literal notranslate"><span class="pre">empty_data</span></code> as an array, object or
closure. See the <a class="reference internal" href="../../../form/use_empty_data.xhtml"><span class="doc">How to Configure empty Data for a Form Class</span></a> article for more details about
these options.</p>
<div class="admonition note">
<p class="admonition-title">Note</p>
<p>If you want to set the <code class="docutils literal notranslate"><span class="pre">empty_data</span></code> option for your entire form class,
see the <a class="reference internal" href="../../../form/use_empty_data.xhtml"><span class="doc">How to Configure empty Data for a Form Class</span></a> article.</p>
</div>
<div class="admonition caution">
<p class="admonition-title">Caution</p>
<p><a class="reference internal" href="../../../form/data_transformers.xhtml"><span class="doc">Form data transformers</span></a> will still be
applied to the <code class="docutils literal notranslate"><span class="pre">empty_data</span></code> value. This means that an empty string will
be cast to <code class="docutils literal notranslate"><span class="pre">null</span></code>. Use a custom data transformer if you explicitly want
to return the empty string.</p>
</div>
</div>
<div class="section" id="error-bubbling">
<h3><code class="docutils literal notranslate"><span class="pre">error_bubbling</span></code></h3>
<p><strong>type</strong>: <code class="docutils literal notranslate"><span class="pre">boolean</span></code> <strong>default</strong>: <code class="docutils literal notranslate"><span class="pre">false</span></code> unless the form is <code class="docutils literal notranslate"><span class="pre">compound</span></code></p>
<p>If <code class="docutils literal notranslate"><span class="pre">true</span></code>, any errors for this field will be passed to the parent field
or form. For example, if set to <code class="docutils literal notranslate"><span class="pre">true</span></code> on a normal field, any errors for
that field will be attached to the main form, not to the specific field.</p>
</div>
<div class="section" id="error-mapping">
<h3><code class="docutils literal notranslate"><span class="pre">error_mapping</span></code></h3>
<p><strong>type</strong>: <code class="docutils literal notranslate"><span class="pre">array</span></code> <strong>default</strong>: <code class="docutils literal notranslate"><span class="pre">[]</span></code></p>
<p>This option allows you to modify the target of a validation error.</p>
<p>Imagine you have a custom method named <code class="docutils literal notranslate"><span class="pre">matchingCityAndZipCode()</span></code> that validates
whether the city and zip code match. Unfortunately, there is no <code class="docutils literal notranslate"><span class="pre">matchingCityAndZipCode</span></code>
field in your form, so all that Symfony can do is display the error on top
of the form.</p>
<p>With customized error mapping, you can do better: map the error to the city
field so that it displays above it:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="k">public</span> <span class="k">function</span> <span class="nf">configureOptions</span><span class="p">(</span><span class="nx">OptionsResolver</span> <span class="nv">$resolver</span><span class="p">)</span>
<span class="p">{</span>
    <span class="nv">$resolver</span><span class="o">-&gt;</span><span class="na">setDefaults</span><span class="p">([</span>
        <span class="s1">&#39;error_mapping&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
            <span class="s1">&#39;matchingCityAndZipCode&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;city&#39;</span><span class="p">,</span>
        <span class="p">],</span>
    <span class="p">]);</span>
<span class="p">}</span>
</pre></div>
</div>
<p>Here are the rules for the left and the right side of the mapping:</p>
<ul class="simple">
<li><p>The left side contains property paths;</p></li>
<li><p>If the violation is generated on a property or method of a class, its
path is the <code class="docutils literal notranslate"><span class="pre">propertyName</span></code>;</p></li>
<li><p>If the violation is generated on an entry of an <code class="docutils literal notranslate"><span class="pre">array</span></code> or <code class="docutils literal notranslate"><span class="pre">ArrayAccess</span></code>
object, the property path is <code class="docutils literal notranslate"><span class="pre">[indexName]</span></code>;</p></li>
<li><p>You can construct nested property paths by concatenating them, separating
properties by dots. For example: <code class="docutils literal notranslate"><span class="pre">addresses[work].matchingCityAndZipCode</span></code>;</p></li>
<li><p>The right side contains the names of fields in the form.</p></li>
</ul>
<p>By default, errors for any property that is not mapped will bubble up to the
parent form. You can use the dot (<code class="docutils literal notranslate"><span class="pre">.</span></code>) on the left side to map errors of all
unmapped properties to a particular field. For instance, to map all these
errors to the <code class="docutils literal notranslate"><span class="pre">city</span></code> field, use:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="nv">$resolver</span><span class="o">-&gt;</span><span class="na">setDefaults</span><span class="p">([</span>
    <span class="s1">&#39;error_mapping&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
        <span class="s1">&#39;.&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;city&#39;</span><span class="p">,</span>
    <span class="p">],</span>
<span class="p">]);</span>
</pre></div>
</div>
</div>
<div class="section" id="help">
<h3>help</h3>
<p><strong>type</strong>: <code class="docutils literal notranslate"><span class="pre">string</span></code> <strong>default</strong>: null</p>
<p>Allows you to define a help message for the form field, which by default is
rendered below the field:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="nv">$builder</span><span class="o">-&gt;</span><span class="na">add</span><span class="p">(</span><span class="s1">&#39;zipCode&#39;</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="p">[</span>
    <span class="s1">&#39;help&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;The ZIP/Postal code for your credit card\&#39;s billing address.&#39;</span><span class="p">,</span>
<span class="p">]);</span>
</pre></div>
</div>
</div>
<div class="section" id="help-attr">
<h3>help_attr</h3>
<p><strong>type</strong>: <code class="docutils literal notranslate"><span class="pre">array</span></code> <strong>default</strong>: <code class="docutils literal notranslate"><span class="pre">[]</span></code></p>
<p>Sets the HTML attributes for the element used to display the help message of the
form field. Its value is an associative array with HTML attribute names as keys.
These attributes can also be set in the template:</p>
<div class="highlight-twig notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="cp">{{</span> <span class="nv">form_help</span><span class="o">(</span><span class="nv">form.name</span><span class="o">,</span> <span class="s1">&#39;Your name&#39;</span><span class="o">,</span> <span class="o">{</span>
    <span class="s1">&#39;help_attr&#39;</span><span class="o">:</span> <span class="o">{</span><span class="s1">&#39;class&#39;</span><span class="o">:</span> <span class="s1">&#39;CUSTOM_LABEL_CLASS&#39;</span><span class="o">}</span>
<span class="o">})</span> <span class="cp">}}</span><span class="x"></span>
</pre></div>
</td></tr></table></div>
</div>
<div class="section" id="help-html">
<h3>help_html</h3>
<p><strong>type</strong>: <code class="docutils literal notranslate"><span class="pre">boolean</span></code> <strong>default</strong>: <code class="docutils literal notranslate"><span class="pre">false</span></code></p>
<p>By default, the contents of the <code class="docutils literal notranslate"><span class="pre">help</span></code> option are escaped before rendering
them in the template. Set this option to <code class="docutils literal notranslate"><span class="pre">true</span></code> to not escape them, which is
useful when the help contains HTML elements.</p>
</div>
<div class="section" id="label">
<h3><code class="docutils literal notranslate"><span class="pre">label</span></code></h3>
<p><strong>type</strong>: <code class="docutils literal notranslate"><span class="pre">string</span></code> <strong>default</strong>: The label is “guessed” from the field name</p>
<p>Sets the label that will be used when rendering the field. Setting to false
will suppress the label. The label can also be directly set inside the template:</p>
<div class="configuration-block">
<ul class="simple">
<li><p><em>Twig</em><div class="highlight-twig notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre>1</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="cp">{{</span> <span class="nv">form_label</span><span class="o">(</span><span class="nv">form.name</span><span class="o">,</span> <span class="s1">&#39;Your name&#39;</span><span class="o">)</span> <span class="cp">}}</span><span class="x"></span>
</pre></div>
</td></tr></table></div>
</p></li>
<li><p><em>PHP</em><div class="highlight-php notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="k">echo</span> <span class="nv">$view</span><span class="p">[</span><span class="s1">&#39;form&#39;</span><span class="p">]</span><span class="o">-&gt;</span><span class="na">label</span><span class="p">(</span>
    <span class="nv">$form</span><span class="p">[</span><span class="s1">&#39;name&#39;</span><span class="p">],</span>
    <span class="s1">&#39;Your name&#39;</span>
<span class="p">);</span>
</pre></div>
</td></tr></table></div>
</p></li>
</ul>
</div>
</div>
<div class="section" id="label-attr">
<h3><code class="docutils literal notranslate"><span class="pre">label_attr</span></code></h3>
<p><strong>type</strong>: <code class="docutils literal notranslate"><span class="pre">array</span></code> <strong>default</strong>: <code class="docutils literal notranslate"><span class="pre">[]</span></code></p>
<p>Sets the HTML attributes for the <code class="docutils literal notranslate"><span class="pre">&lt;label&gt;</span></code> element, which will be used
when rendering the label for the field. It’s an associative array with HTML
attribute as a key. This attributes can also be directly set inside the
template:</p>
<div class="configuration-block">
<ul class="simple">
<li><p><em>Twig</em><div class="highlight-twig notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="cp">{{</span> <span class="nv">form_label</span><span class="o">(</span><span class="nv">form.name</span><span class="o">,</span> <span class="s1">&#39;Your name&#39;</span><span class="o">,</span> <span class="o">{</span>
    <span class="s1">&#39;label_attr&#39;</span><span class="o">:</span> <span class="o">{</span><span class="s1">&#39;class&#39;</span><span class="o">:</span> <span class="s1">&#39;CUSTOM_LABEL_CLASS&#39;</span><span class="o">}</span>
<span class="o">})</span> <span class="cp">}}</span><span class="x"></span>
</pre></div>
</td></tr></table></div>
</p></li>
<li><p><em>PHP</em><div class="highlight-php notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="k">echo</span> <span class="nv">$view</span><span class="p">[</span><span class="s1">&#39;form&#39;</span><span class="p">]</span><span class="o">-&gt;</span><span class="na">label</span><span class="p">(</span>
    <span class="nv">$form</span><span class="p">[</span><span class="s1">&#39;name&#39;</span><span class="p">],</span>
    <span class="s1">&#39;Your name&#39;</span><span class="p">,</span>
    <span class="p">[</span><span class="s1">&#39;label_attr&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span><span class="s1">&#39;class&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;CUSTOM_LABEL_CLASS&#39;</span><span class="p">]]</span>
<span class="p">);</span>
</pre></div>
</td></tr></table></div>
</p></li>
</ul>
</div>
</div>
<div class="section" id="label-format">
<h3><code class="docutils literal notranslate"><span class="pre">label_format</span></code></h3>
<p><strong>type</strong>: <code class="docutils literal notranslate"><span class="pre">string</span></code> <strong>default</strong>: <code class="docutils literal notranslate"><span class="pre">null</span></code></p>
<p>Configures the string used as the label of the field, in case the <code class="docutils literal notranslate"><span class="pre">label</span></code>
option was not set. This is useful when using
<a class="reference internal" href="../../../translation.xhtml#translation-real-vs-keyword-messages"><span class="std std-ref">keyword translation messages</span></a>.</p>
<p>If you’re using keyword translation messages as labels, you often end up having
multiple keyword messages for the same label (e.g. <code class="docutils literal notranslate"><span class="pre">profile_address_street</span></code>,
<code class="docutils literal notranslate"><span class="pre">invoice_address_street</span></code>). This is because the label is built for each “path”
to a field. To avoid duplicated keyword messages, you can configure the label
format to a static value, like:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="c1">// ...</span>
<span class="nv">$profileFormBuilder</span><span class="o">-&gt;</span><span class="na">add</span><span class="p">(</span><span class="s1">&#39;address&#39;</span><span class="p">,</span> <span class="nx">AddressType</span><span class="o">::</span><span class="na">class</span><span class="p">,</span> <span class="p">[</span>
    <span class="s1">&#39;label_format&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;form.address.%name%&#39;</span><span class="p">,</span>
<span class="p">]);</span>

<span class="nv">$invoiceFormBuilder</span><span class="o">-&gt;</span><span class="na">add</span><span class="p">(</span><span class="s1">&#39;invoice&#39;</span><span class="p">,</span> <span class="nx">AddressType</span><span class="o">::</span><span class="na">class</span><span class="p">,</span> <span class="p">[</span>
    <span class="s1">&#39;label_format&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;form.address.%name%&#39;</span><span class="p">,</span>
<span class="p">]);</span>
</pre></div>
</div>
<p>This option is inherited by the child types. With the code above, the label of
the <code class="docutils literal notranslate"><span class="pre">street</span></code> field of both forms will use the <code class="docutils literal notranslate"><span class="pre">form.address.street</span></code> keyword
message.</p>
<p>Two variables are available in the label format:</p>
<dl class="simple">
<dt><code class="docutils literal notranslate"><span class="pre">%id%</span></code></dt>
<dd><p>A unique identifier for the field, consisting of the complete path to the
field and the field name (e.g. <code class="docutils literal notranslate"><span class="pre">profile_address_street</span></code>);</p>
</dd>
<dt><code class="docutils literal notranslate"><span class="pre">%name%</span></code></dt>
<dd><p>The field name (e.g. <code class="docutils literal notranslate"><span class="pre">street</span></code>).</p>
</dd>
</dl>
<p>The default value (<code class="docutils literal notranslate"><span class="pre">null</span></code>) results in a
<a class="reference internal" href="../../twig_reference.xhtml#reference-twig-humanize-filter"><span class="std std-ref">“humanized” version</span></a> of the field name.</p>
<div class="admonition note">
<p class="admonition-title">Note</p>
<p>The <code class="docutils literal notranslate"><span class="pre">label_format</span></code> option is evaluated in the form theme. Make sure to
update your templates in case you
<a class="reference internal" href="../../../form/form_customization.xhtml"><span class="doc">customized form theming</span></a>.</p>
</div>
</div>
<div class="section" id="mapped">
<h3><code class="docutils literal notranslate"><span class="pre">mapped</span></code></h3>
<p><strong>type</strong>: <code class="docutils literal notranslate"><span class="pre">boolean</span></code>  <strong>default</strong>: <code class="docutils literal notranslate"><span class="pre">true</span></code></p>
<p>If you wish the field to be ignored when reading or writing to the object,
you can set the <code class="docutils literal notranslate"><span class="pre">mapped</span></code> option to <code class="docutils literal notranslate"><span class="pre">false</span></code>.</p>
</div>
<div class="section" id="required">
<h3><code class="docutils literal notranslate"><span class="pre">required</span></code></h3>
<p><strong>type</strong>: <code class="docutils literal notranslate"><span class="pre">boolean</span></code> <strong>default</strong>: <code class="docutils literal notranslate"><span class="pre">true</span></code></p>
<p>If true, an <a class="reference external" href="http://diveintohtml5.info/forms.html">HTML5 required attribute</a><span class="link-target"> [http://diveintohtml5.info/forms.html]</span> will be rendered. The corresponding
<code class="docutils literal notranslate"><span class="pre">label</span></code> will also render with a <code class="docutils literal notranslate"><span class="pre">required</span></code> class.</p>
<p>This is superficial and independent of validation. At best, if you let
Symfony guess your field type, then the value of this option will be guessed
from your validation information.</p>
<div class="admonition note">
<p class="admonition-title">Note</p>
<p>The required option also affects how empty data for each field is
handled. For more details, see the <a class="reference internal" href="#empty-data">empty_data</a> option.</p>
</div>
</div>
<div class="section" id="row-attr">
<h3>row_attr</h3>
<p><strong>type</strong>: <code class="docutils literal notranslate"><span class="pre">array</span></code> <strong>default</strong>: <code class="docutils literal notranslate"><span class="pre">[]</span></code></p>
<p>An associative array of the HTML attributes added to the element which is used
to render the <a class="reference internal" href="../../../form/form_customization.xhtml#form-rendering-basics"><span class="std std-ref">form type row</span></a>:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="nv">$builder</span><span class="o">-&gt;</span><span class="na">add</span><span class="p">(</span><span class="s1">&#39;body&#39;</span><span class="p">,</span> <span class="nx">TextareaType</span><span class="o">::</span><span class="na">class</span><span class="p">,</span> <span class="p">[</span>
    <span class="s1">&#39;row_attr&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span><span class="s1">&#39;class&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;text-editor&#39;</span><span class="p">,</span> <span class="s1">&#39;id&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;...&#39;</span><span class="p">],</span>
<span class="p">]);</span>
</pre></div>
</div>
<div class="admonition seealso">
<p class="admonition-title">See also</p>
<p>Use the <code class="docutils literal notranslate"><span class="pre">attr</span></code> option if you want to add these attributes to the
the <a class="reference internal" href="../../../form/form_customization.xhtml#form-rendering-basics"><span class="std std-ref">form type widget</span></a> element.</p>
</div>
<div class="versionadded">
<p><span class="versionmodified">New in version 4.3: </span>The <code class="docutils literal notranslate"><span class="pre">row_attr</span></code> option was introduced in Symfony 4.3.</p>
</div>
</div>
<div class="section" id="label-translation-parameters">
<h3>label_translation_parameters</h3>
<p><strong>type</strong>: <code class="docutils literal notranslate"><span class="pre">array</span></code> <strong>default</strong>: <code class="docutils literal notranslate"><span class="pre">[]</span></code></p>
<div class="versionadded">
<p><span class="versionmodified">New in version 4.3: </span>The <code class="docutils literal notranslate"><span class="pre">label_translation_parameters</span></code> option was introduced in Symfony 4.3.</p>
</div>
<p>The content of the <a class="reference internal" href="#label">label</a> option is translated before displaying it, so it
can contain <a class="reference internal" href="../../../translation/message_format.xhtml#component-translation-placeholders"><span class="std std-ref">translation placeholders</span></a>.
This option defines the values used to replace those placeholders.</p>
<p>Given this translation message:</p>
<div class="highlight-yaml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre>1
2</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1"># translations/messages.en.yaml</span>
<span class="l l-Scalar l-Scalar-Plain">form.order.id</span><span class="p p-Indicator">:</span> <span class="s">&#39;Identifier</span><span class="nv"> </span><span class="s">of</span><span class="nv"> </span><span class="s">the</span><span class="nv"> </span><span class="s">order</span><span class="nv"> </span><span class="s">to</span><span class="nv"> </span><span class="s">%company%&#39;</span>
</pre></div>
</td></tr></table></div>
<p>You can specify the placeholder values as follows:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="nv">$builder</span><span class="o">-&gt;</span><span class="na">add</span><span class="p">(</span><span class="s1">&#39;id&#39;</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="p">[</span>
    <span class="s1">&#39;label&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;form.order.id&#39;</span><span class="p">,</span>
    <span class="s1">&#39;label_translation_parameters&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
        <span class="s1">&#39;%company%&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;ACME Inc.&#39;</span><span class="p">,</span>
    <span class="p">],</span>
<span class="p">]);</span>
</pre></div>
</div>
<p>The <code class="docutils literal notranslate"><span class="pre">label_translation_parameters</span></code> option of children fields is merged with
the same option of their parents, so children can reuse and/or override any of
the parent placeholders.</p>
</div>
<div class="section" id="attr-translation-parameters">
<h3>attr_translation_parameters</h3>
<p><strong>type</strong>: <code class="docutils literal notranslate"><span class="pre">array</span></code> <strong>default</strong>: <code class="docutils literal notranslate"><span class="pre">[]</span></code></p>
<div class="versionadded">
<p><span class="versionmodified">New in version 4.3: </span>The <code class="docutils literal notranslate"><span class="pre">attr_translation_parameters</span></code> option was introduced in Symfony 4.3.</p>
</div>
<p>The content of the <code class="docutils literal notranslate"><span class="pre">title</span></code> and <code class="docutils literal notranslate"><span class="pre">placeholder</span></code> values defined in the <a class="reference internal" href="#attr">attr</a>
option is translated before displaying it, so it can contain
<a class="reference internal" href="../../../translation/message_format.xhtml#component-translation-placeholders"><span class="std std-ref">translation placeholders</span></a>. This
option defines the values used to replace those placeholders.</p>
<p>Given this translation message:</p>
<div class="highlight-yaml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1"># translations/messages.en.yaml</span>
<span class="l l-Scalar l-Scalar-Plain">form.order.id.placeholder</span><span class="p p-Indicator">:</span> <span class="s">&#39;Enter</span><span class="nv"> </span><span class="s">unique</span><span class="nv"> </span><span class="s">identifier</span><span class="nv"> </span><span class="s">of</span><span class="nv"> </span><span class="s">the</span><span class="nv"> </span><span class="s">order</span><span class="nv"> </span><span class="s">to</span><span class="nv"> </span><span class="s">%company%&#39;</span>
<span class="l l-Scalar l-Scalar-Plain">form.order.id.title</span><span class="p p-Indicator">:</span> <span class="s">&#39;This</span><span class="nv"> </span><span class="s">will</span><span class="nv"> </span><span class="s">be</span><span class="nv"> </span><span class="s">the</span><span class="nv"> </span><span class="s">reference</span><span class="nv"> </span><span class="s">in</span><span class="nv"> </span><span class="s">communications</span><span class="nv"> </span><span class="s">with</span><span class="nv"> </span><span class="s">%company%&#39;</span>
</pre></div>
</td></tr></table></div>
<p>You can specify the placeholder values as follows:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="nv">$builder</span><span class="o">-&gt;</span><span class="na">add</span><span class="p">(</span><span class="s1">&#39;id&#39;</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="p">[</span>
    <span class="s1">&#39;attr&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
        <span class="s1">&#39;placeholder&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;form.order.id.placeholder&#39;</span><span class="p">,</span>
        <span class="s1">&#39;title&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;form.order.id.title&#39;</span><span class="p">,</span>
    <span class="p">],</span>
    <span class="s1">&#39;attr_translation_parameters&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
        <span class="s1">&#39;%company%&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;ACME Inc.&#39;</span><span class="p">,</span>
    <span class="p">],</span>
<span class="p">]);</span>
</pre></div>
</div>
<p>The <code class="docutils literal notranslate"><span class="pre">attr_translation_parameters</span></code> option of children fields is merged with the
same option of their parents, so children can reuse and/or override any of the
parent placeholders.</p>
</div>
<div class="section" id="help-translation-parameters">
<h3>help_translation_parameters</h3>
<p><strong>type</strong>: <code class="docutils literal notranslate"><span class="pre">array</span></code> <strong>default</strong>: <code class="docutils literal notranslate"><span class="pre">[]</span></code></p>
<div class="versionadded">
<p><span class="versionmodified">New in version 4.3: </span>The <code class="docutils literal notranslate"><span class="pre">help_translation_parameters</span></code> option was introduced in Symfony 4.3.</p>
</div>
<p>The content of the <a class="reference internal" href="#help">help</a> option is translated before displaying it, so it
can contain <a class="reference internal" href="../../../translation/message_format.xhtml#component-translation-placeholders"><span class="std std-ref">translation placeholders</span></a>.
This option defines the values used to replace those placeholders.</p>
<p>Given this translation message:</p>
<div class="highlight-yaml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre>1
2</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1"># translations/messages.en.yaml</span>
<span class="l l-Scalar l-Scalar-Plain">form.order.id.help</span><span class="p p-Indicator">:</span> <span class="s">&#39;This</span><span class="nv"> </span><span class="s">will</span><span class="nv"> </span><span class="s">be</span><span class="nv"> </span><span class="s">the</span><span class="nv"> </span><span class="s">reference</span><span class="nv"> </span><span class="s">in</span><span class="nv"> </span><span class="s">communications</span><span class="nv"> </span><span class="s">with</span><span class="nv"> </span><span class="s">%company%&#39;</span>
</pre></div>
</td></tr></table></div>
<p>You can specify the placeholder values as follows:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="nv">$builder</span><span class="o">-&gt;</span><span class="na">add</span><span class="p">(</span><span class="s1">&#39;id&#39;</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="p">[</span>
    <span class="s1">&#39;help&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;form.order.id.help&#39;</span><span class="p">,</span>
    <span class="s1">&#39;help_translation_parameters&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
        <span class="s1">&#39;%company%&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;ACME Inc.&#39;</span><span class="p">,</span>
    <span class="p">],</span>
<span class="p">]);</span>
</pre></div>
</div>
<p>The <code class="docutils literal notranslate"><span class="pre">help_translation_parameters</span></code> option of children fields is merged with the
same option of their parents, so children can reuse and/or override any of the
parent placeholders.</p>
</div>
</div>
</div>


          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>