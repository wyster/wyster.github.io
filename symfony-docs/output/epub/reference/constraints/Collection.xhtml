<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <title>Collection</title>
    <link rel="stylesheet" href="../../_static/epub.css" type="text/css" />
    <link rel="stylesheet" href="../../_static/pygments.css" type="text/css" />
    <link rel="stylesheet" type="text/css" href="../../_static/rtd_custom.css" /> 
  </head><body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <div class="section" id="collection">
<h1>Collection</h1>
<p>This constraint is used when the underlying data is a collection (i.e. an
array or an object that implements <code class="docutils literal notranslate"><span class="pre">Traversable</span></code> and <code class="docutils literal notranslate"><span class="pre">ArrayAccess</span></code>),
but you’d like to validate different keys of that collection in different
ways. For example, you might validate the <code class="docutils literal notranslate"><span class="pre">email</span></code> key using the <code class="docutils literal notranslate"><span class="pre">Email</span></code>
constraint and the <code class="docutils literal notranslate"><span class="pre">inventory</span></code> key of the collection with the <code class="docutils literal notranslate"><span class="pre">Range</span></code>
constraint.</p>
<p>This constraint can also make sure that certain collection keys are present
and that extra keys are not present.</p>
<div class="admonition seealso">
<p class="admonition-title">See also</p>
<p>If you want to validate that all the elements of the collection are unique
use the <a class="reference internal" href="Unique.xhtml"><span class="doc">Unique constraint</span></a>.</p>
</div>
<table class="docutils">
<colgroup>
<col style="width: 12%" />
<col style="width: 88%" />
</colgroup>
<tbody>
<tr class="row-odd"><td><p>Applies to</p></td>
<td><p><a class="reference internal" href="../../validation.xhtml#validation-property-target"><span class="std std-ref">property or method</span></a></p></td>
</tr>
<tr class="row-even"><td><p>Options</p></td>
<td><ul class="simple">
<li><p><a class="reference internal" href="#allowextrafields">allowExtraFields</a></p></li>
<li><p><a class="reference internal" href="#allowmissingfields">allowMissingFields</a></p></li>
<li><p><a class="reference internal" href="#extrafieldsmessage">extraFieldsMessage</a></p></li>
<li><p><a class="reference internal" href="#fields">fields</a></p></li>
<li><p><a class="reference internal" href="#groups">groups</a></p></li>
<li><p><a class="reference internal" href="#missingfieldsmessage">missingFieldsMessage</a></p></li>
<li><p><a class="reference internal" href="#payload">payload</a></p></li>
</ul>
</td>
</tr>
<tr class="row-odd"><td><p>Class</p></td>
<td><p><code class="docutils literal notranslate"><a class="reference external" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Validator/Constraints/Collection.php" title="Symfony\Component\Validator\Constraints\Collection"><span class="pre">Collection</span></a><span class="link-target"> <span class="pre">[https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Validator/Constraints/Collection.php]</span></span></code></p></td>
</tr>
<tr class="row-even"><td><p>Validator</p></td>
<td><p><code class="docutils literal notranslate"><a class="reference external" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Validator/Constraints/CollectionValidator.php" title="Symfony\Component\Validator\Constraints\CollectionValidator"><span class="pre">CollectionValidator</span></a><span class="link-target"> <span class="pre">[https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Validator/Constraints/CollectionValidator.php]</span></span></code></p></td>
</tr>
</tbody>
</table>
<div class="section" id="basic-usage">
<h2>Basic Usage</h2>
<p>The <code class="docutils literal notranslate"><span class="pre">Collection</span></code> constraint allows you to validate the different keys
of a collection individually. Take the following example:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="c1">// src/Entity/Author.php</span>
<span class="k">namespace</span> <span class="nx">App\Entity</span><span class="p">;</span>

<span class="k">class</span> <span class="nc">Author</span>
<span class="p">{</span>
    <span class="k">protected</span> <span class="nv">$profileData</span> <span class="o">=</span> <span class="p">[</span>
        <span class="s1">&#39;personal_email&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;...&#39;</span><span class="p">,</span>
        <span class="s1">&#39;short_bio&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;...&#39;</span><span class="p">,</span>
    <span class="p">];</span>

    <span class="k">public</span> <span class="k">function</span> <span class="nf">setProfileData</span><span class="p">(</span><span class="nv">$key</span><span class="p">,</span> <span class="nv">$value</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">profileData</span><span class="p">[</span><span class="nv">$key</span><span class="p">]</span> <span class="o">=</span> <span class="nv">$value</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>
</div>
<p>To validate that the <code class="docutils literal notranslate"><span class="pre">personal_email</span></code> element of the <code class="docutils literal notranslate"><span class="pre">profileData</span></code> array
property is a valid email address and that the <code class="docutils literal notranslate"><span class="pre">short_bio</span></code> element is
not blank but is no longer than 100 characters in length, you would do the
following:</p>
<div class="configuration-block">
<ul class="simple">
<li><p><em>Annotations</em><div class="highlight-php-annotations notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1">// src/Entity/Author.php</span>
<span class="k">namespace</span> <span class="nx">App\Entity</span><span class="p">;</span>

<span class="k">use</span> <span class="nx">Symfony\Component\Validator\Constraints</span> <span class="k">as</span> <span class="nx">Assert</span><span class="p">;</span>

<span class="k">class</span> <span class="nc">Author</span>
<span class="p">{</span>
    <span class="sd">/**</span>
<span class="sd">     * @Assert\Collection(</span>
<span class="sd">     *     fields = {</span>
<span class="sd">     *         &quot;personal_email&quot; = @Assert\Email,</span>
<span class="sd">     *         &quot;short_bio&quot; = {</span>
<span class="sd">     *             @Assert\NotBlank,</span>
<span class="sd">     *             @Assert\Length(</span>
<span class="sd">     *                 max = 100,</span>
<span class="sd">     *                 maxMessage = &quot;Your short bio is too long!&quot;</span>
<span class="sd">     *             )</span>
<span class="sd">     *         }</span>
<span class="sd">     *     },</span>
<span class="sd">     *     allowMissingFields = true</span>
<span class="sd">     * )</span>
<span class="sd">     */</span>
    <span class="k">protected</span> <span class="nv">$profileData</span> <span class="o">=</span> <span class="p">[</span>
        <span class="s1">&#39;personal_email&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;...&#39;</span><span class="p">,</span>
        <span class="s1">&#39;short_bio&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;...&#39;</span><span class="p">,</span>
    <span class="p">];</span>
<span class="p">}</span>
</pre></div>
</td></tr></table></div>
</p></li>
<li><p><em>YAML</em><div class="highlight-yaml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1"># config/validator/validation.yaml</span>
<span class="l l-Scalar l-Scalar-Plain">App\Entity\Author</span><span class="p p-Indicator">:</span>
    <span class="l l-Scalar l-Scalar-Plain">properties</span><span class="p p-Indicator">:</span>
        <span class="l l-Scalar l-Scalar-Plain">profileData</span><span class="p p-Indicator">:</span>
            <span class="p p-Indicator">-</span> <span class="l l-Scalar l-Scalar-Plain">Collection</span><span class="p p-Indicator">:</span>
                <span class="l l-Scalar l-Scalar-Plain">fields</span><span class="p p-Indicator">:</span>
                    <span class="l l-Scalar l-Scalar-Plain">personal_email</span><span class="p p-Indicator">:</span>
                        <span class="p p-Indicator">-</span> <span class="l l-Scalar l-Scalar-Plain">Email</span><span class="p p-Indicator">:</span> <span class="l l-Scalar l-Scalar-Plain">~</span>
                    <span class="l l-Scalar l-Scalar-Plain">short_bio</span><span class="p p-Indicator">:</span>
                        <span class="p p-Indicator">-</span> <span class="l l-Scalar l-Scalar-Plain">NotBlank</span><span class="p p-Indicator">:</span> <span class="l l-Scalar l-Scalar-Plain">~</span>
                        <span class="p p-Indicator">-</span> <span class="l l-Scalar l-Scalar-Plain">Length</span><span class="p p-Indicator">:</span>
                            <span class="l l-Scalar l-Scalar-Plain">max</span><span class="p p-Indicator">:</span>   <span class="l l-Scalar l-Scalar-Plain">100</span>
                            <span class="l l-Scalar l-Scalar-Plain">maxMessage</span><span class="p p-Indicator">:</span> <span class="l l-Scalar l-Scalar-Plain">Your short bio is too long!</span>
                <span class="l l-Scalar l-Scalar-Plain">allowMissingFields</span><span class="p p-Indicator">:</span> <span class="l l-Scalar l-Scalar-Plain">true</span>
</pre></div>
</td></tr></table></div>
</p></li>
<li><p><em>XML</em><div class="highlight-xml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c">&lt;!-- config/validator/validation.xml --&gt;</span>
<span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span>
<span class="nt">&lt;constraint-mapping</span> <span class="na">xmlns=</span><span class="s">&quot;http://symfony.com/schema/dic/constraint-mapping&quot;</span>
    <span class="na">xmlns:xsi=</span><span class="s">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span>
    <span class="na">xsi:schemaLocation=</span><span class="s">&quot;http://symfony.com/schema/dic/constraint-mapping https://symfony.com/schema/dic/constraint-mapping/constraint-mapping-1.0.xsd&quot;</span><span class="nt">&gt;</span>

    <span class="nt">&lt;class</span> <span class="na">name=</span><span class="s">&quot;App\Entity\Author&quot;</span><span class="nt">&gt;</span>
        <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;profileData&quot;</span><span class="nt">&gt;</span>
            <span class="nt">&lt;constraint</span> <span class="na">name=</span><span class="s">&quot;Collection&quot;</span><span class="nt">&gt;</span>
                <span class="nt">&lt;option</span> <span class="na">name=</span><span class="s">&quot;fields&quot;</span><span class="nt">&gt;</span>
                    <span class="nt">&lt;value</span> <span class="na">key=</span><span class="s">&quot;personal_email&quot;</span><span class="nt">&gt;</span>
                        <span class="nt">&lt;constraint</span> <span class="na">name=</span><span class="s">&quot;Email&quot;</span><span class="nt">/&gt;</span>
                    <span class="nt">&lt;/value&gt;</span>
                    <span class="nt">&lt;value</span> <span class="na">key=</span><span class="s">&quot;short_bio&quot;</span><span class="nt">&gt;</span>
                        <span class="nt">&lt;constraint</span> <span class="na">name=</span><span class="s">&quot;NotBlank&quot;</span><span class="nt">/&gt;</span>
                        <span class="nt">&lt;constraint</span> <span class="na">name=</span><span class="s">&quot;Length&quot;</span><span class="nt">&gt;</span>
                            <span class="nt">&lt;option</span> <span class="na">name=</span><span class="s">&quot;max&quot;</span><span class="nt">&gt;</span>100<span class="nt">&lt;/option&gt;</span>
                            <span class="nt">&lt;option</span> <span class="na">name=</span><span class="s">&quot;maxMessage&quot;</span><span class="nt">&gt;</span>Your short bio is too long!<span class="nt">&lt;/option&gt;</span>
                        <span class="nt">&lt;/constraint&gt;</span>
                    <span class="nt">&lt;/value&gt;</span>
                <span class="nt">&lt;/option&gt;</span>
                <span class="nt">&lt;option</span> <span class="na">name=</span><span class="s">&quot;allowMissingFields&quot;</span><span class="nt">&gt;</span>true<span class="nt">&lt;/option&gt;</span>
            <span class="nt">&lt;/constraint&gt;</span>
        <span class="nt">&lt;/property&gt;</span>
    <span class="nt">&lt;/class&gt;</span>
<span class="nt">&lt;/constraint-mapping&gt;</span>
</pre></div>
</td></tr></table></div>
</p></li>
<li><p><em>PHP</em><div class="highlight-php notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1">// src/Entity/Author.php</span>
<span class="k">namespace</span> <span class="nx">App\Entity</span><span class="p">;</span>

<span class="k">use</span> <span class="nx">Symfony\Component\Validator\Constraints</span> <span class="k">as</span> <span class="nx">Assert</span><span class="p">;</span>
<span class="k">use</span> <span class="nx">Symfony\Component\Validator\Mapping\ClassMetadata</span><span class="p">;</span>

<span class="k">class</span> <span class="nc">Author</span>
<span class="p">{</span>
    <span class="k">public</span> <span class="k">static</span> <span class="k">function</span> <span class="nf">loadValidatorMetadata</span><span class="p">(</span><span class="nx">ClassMetadata</span> <span class="nv">$metadata</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="nv">$metadata</span><span class="o">-&gt;</span><span class="na">addPropertyConstraint</span><span class="p">(</span><span class="s1">&#39;profileData&#39;</span><span class="p">,</span> <span class="k">new</span> <span class="nx">Assert\Collection</span><span class="p">([</span>
            <span class="s1">&#39;fields&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
                <span class="s1">&#39;personal_email&#39;</span> <span class="o">=&gt;</span> <span class="k">new</span> <span class="nx">Assert\Email</span><span class="p">(),</span>
                <span class="s1">&#39;short_bio&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
                    <span class="k">new</span> <span class="nx">Assert\NotBlank</span><span class="p">(),</span>
                    <span class="k">new</span> <span class="nx">Assert\Length</span><span class="p">([</span>
                        <span class="s1">&#39;max&#39;</span> <span class="o">=&gt;</span> <span class="mi">100</span><span class="p">,</span>
                        <span class="s1">&#39;maxMessage&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;Your short bio is too long!&#39;</span><span class="p">,</span>
                    <span class="p">]),</span>
                <span class="p">],</span>
            <span class="p">],</span>
            <span class="s1">&#39;allowMissingFields&#39;</span> <span class="o">=&gt;</span> <span class="k">true</span><span class="p">,</span>
        <span class="p">]));</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>
</td></tr></table></div>
</p></li>
</ul>
</div>
<div class="section" id="presence-and-absence-of-fields">
<h3>Presence and Absence of Fields</h3>
<p>By default, this constraint validates more than whether or not the
individual fields in the collection pass their assigned constraints. In
fact, if any keys of a collection are missing or if there are any unrecognized
keys in the collection, validation errors will be thrown.</p>
<p>If you would like to allow for keys to be absent from the collection or
if you would like “extra” keys to be allowed in the collection, you can
modify the <a class="reference internal" href="#allowmissingfields">allowMissingFields</a> and <a class="reference internal" href="#allowextrafields">allowExtraFields</a> options respectively.
In the above example, the <code class="docutils literal notranslate"><span class="pre">allowMissingFields</span></code> option was set to true,
meaning that if either of the <code class="docutils literal notranslate"><span class="pre">personal_email</span></code> or <code class="docutils literal notranslate"><span class="pre">short_bio</span></code> elements
were missing from the <code class="docutils literal notranslate"><span class="pre">$personalData</span></code> property, no validation error would
occur.</p>
</div>
<div class="section" id="required-and-optional-field-constraints">
<h3>Required and Optional Field Constraints</h3>
<p>Constraints for fields within a collection can be wrapped in the <code class="docutils literal notranslate"><span class="pre">Required</span></code>
or <code class="docutils literal notranslate"><span class="pre">Optional</span></code> constraint to control whether they should always be applied
(<code class="docutils literal notranslate"><span class="pre">Required</span></code>) or only applied when the field is present (<code class="docutils literal notranslate"><span class="pre">Optional</span></code>).</p>
<p>For instance, if you want to require that the <code class="docutils literal notranslate"><span class="pre">personal_email</span></code> field of
the <code class="docutils literal notranslate"><span class="pre">profileData</span></code> array is not blank and is a valid email but the
<code class="docutils literal notranslate"><span class="pre">alternate_email</span></code> field is optional but must be a valid email if supplied,
you can do the following:</p>
<div class="configuration-block">
<ul class="simple">
<li><p><em>Annotations</em><div class="highlight-php-annotations notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1">// src/Entity/Author.php</span>
<span class="k">namespace</span> <span class="nx">App\Entity</span><span class="p">;</span>

<span class="k">use</span> <span class="nx">Symfony\Component\Validator\Constraints</span> <span class="k">as</span> <span class="nx">Assert</span><span class="p">;</span>

<span class="k">class</span> <span class="nc">Author</span>
<span class="p">{</span>
    <span class="sd">/**</span>
<span class="sd">     * @Assert\Collection(</span>
<span class="sd">     *     fields={</span>
<span class="sd">     *         &quot;personal_email&quot;  = @Assert\Required({@Assert\NotBlank, @Assert\Email}),</span>
<span class="sd">     *         &quot;alternate_email&quot; = @Assert\Optional(@Assert\Email)</span>
<span class="sd">     *     }</span>
<span class="sd">     * )</span>
<span class="sd">     */</span>
    <span class="k">protected</span> <span class="nv">$profileData</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;personal_email&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;email@example.com&#39;</span><span class="p">];</span>
<span class="p">}</span>
</pre></div>
</td></tr></table></div>
</p></li>
<li><p><em>YAML</em><div class="highlight-yaml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1"># config/validator/validation.yaml</span>
<span class="l l-Scalar l-Scalar-Plain">App\Entity\Author</span><span class="p p-Indicator">:</span>
    <span class="l l-Scalar l-Scalar-Plain">properties</span><span class="p p-Indicator">:</span>
        <span class="l l-Scalar l-Scalar-Plain">profile_data</span><span class="p p-Indicator">:</span>
            <span class="p p-Indicator">-</span> <span class="l l-Scalar l-Scalar-Plain">Collection</span><span class="p p-Indicator">:</span>
                <span class="l l-Scalar l-Scalar-Plain">fields</span><span class="p p-Indicator">:</span>
                    <span class="l l-Scalar l-Scalar-Plain">personal_email</span><span class="p p-Indicator">:</span>
                        <span class="p p-Indicator">-</span> <span class="l l-Scalar l-Scalar-Plain">Required</span><span class="p p-Indicator">:</span>
                            <span class="p p-Indicator">-</span> <span class="l l-Scalar l-Scalar-Plain">NotBlank</span><span class="p p-Indicator">:</span> <span class="l l-Scalar l-Scalar-Plain">~</span>
                            <span class="p p-Indicator">-</span> <span class="l l-Scalar l-Scalar-Plain">Email</span><span class="p p-Indicator">:</span> <span class="l l-Scalar l-Scalar-Plain">~</span>
                    <span class="l l-Scalar l-Scalar-Plain">alternate_email</span><span class="p p-Indicator">:</span>
                        <span class="p p-Indicator">-</span> <span class="l l-Scalar l-Scalar-Plain">Optional</span><span class="p p-Indicator">:</span>
                            <span class="p p-Indicator">-</span> <span class="l l-Scalar l-Scalar-Plain">Email</span><span class="p p-Indicator">:</span> <span class="l l-Scalar l-Scalar-Plain">~</span>
</pre></div>
</td></tr></table></div>
</p></li>
<li><p><em>XML</em><div class="highlight-xml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c">&lt;!-- config/validator/validation.xml --&gt;</span>
<span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span>
<span class="nt">&lt;constraint-mapping</span> <span class="na">xmlns=</span><span class="s">&quot;http://symfony.com/schema/dic/constraint-mapping&quot;</span>
    <span class="na">xmlns:xsi=</span><span class="s">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span>
    <span class="na">xsi:schemaLocation=</span><span class="s">&quot;http://symfony.com/schema/dic/constraint-mapping https://symfony.com/schema/dic/constraint-mapping/constraint-mapping-1.0.xsd&quot;</span><span class="nt">&gt;</span>

    <span class="nt">&lt;class</span> <span class="na">name=</span><span class="s">&quot;App\Entity\Author&quot;</span><span class="nt">&gt;</span>
        <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;profile_data&quot;</span><span class="nt">&gt;</span>
            <span class="nt">&lt;constraint</span> <span class="na">name=</span><span class="s">&quot;Collection&quot;</span><span class="nt">&gt;</span>
                <span class="nt">&lt;option</span> <span class="na">name=</span><span class="s">&quot;fields&quot;</span><span class="nt">&gt;</span>
                    <span class="nt">&lt;value</span> <span class="na">key=</span><span class="s">&quot;personal_email&quot;</span><span class="nt">&gt;</span>
                        <span class="nt">&lt;constraint</span> <span class="na">name=</span><span class="s">&quot;Required&quot;</span><span class="nt">&gt;</span>
                            <span class="nt">&lt;constraint</span> <span class="na">name=</span><span class="s">&quot;NotBlank&quot;</span><span class="nt">/&gt;</span>
                            <span class="nt">&lt;constraint</span> <span class="na">name=</span><span class="s">&quot;Email&quot;</span><span class="nt">/&gt;</span>
                        <span class="nt">&lt;/constraint&gt;</span>
                    <span class="nt">&lt;/value&gt;</span>
                    <span class="nt">&lt;value</span> <span class="na">key=</span><span class="s">&quot;alternate_email&quot;</span><span class="nt">&gt;</span>
                        <span class="nt">&lt;constraint</span> <span class="na">name=</span><span class="s">&quot;Optional&quot;</span><span class="nt">&gt;</span>
                            <span class="nt">&lt;constraint</span> <span class="na">name=</span><span class="s">&quot;Email&quot;</span><span class="nt">/&gt;</span>
                        <span class="nt">&lt;/constraint&gt;</span>
                    <span class="nt">&lt;/value&gt;</span>
                <span class="nt">&lt;/option&gt;</span>
            <span class="nt">&lt;/constraint&gt;</span>
        <span class="nt">&lt;/property&gt;</span>
    <span class="nt">&lt;/class&gt;</span>
<span class="nt">&lt;/constraint-mapping&gt;</span>
</pre></div>
</td></tr></table></div>
</p></li>
<li><p><em>PHP</em><div class="highlight-php notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1">// src/Entity/Author.php</span>
<span class="k">namespace</span> <span class="nx">App\Entity</span><span class="p">;</span>

<span class="k">use</span> <span class="nx">Symfony\Component\Validator\Constraints</span> <span class="k">as</span> <span class="nx">Assert</span><span class="p">;</span>
<span class="k">use</span> <span class="nx">Symfony\Component\Validator\Mapping\ClassMetadata</span><span class="p">;</span>

<span class="k">class</span> <span class="nc">Author</span>
<span class="p">{</span>
    <span class="k">protected</span> <span class="nv">$profileData</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;personal_email&#39;</span><span class="p">];</span>

    <span class="k">public</span> <span class="k">static</span> <span class="k">function</span> <span class="nf">loadValidatorMetadata</span><span class="p">(</span><span class="nx">ClassMetadata</span> <span class="nv">$metadata</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="nv">$metadata</span><span class="o">-&gt;</span><span class="na">addPropertyConstraint</span><span class="p">(</span><span class="s1">&#39;profileData&#39;</span><span class="p">,</span> <span class="k">new</span> <span class="nx">Assert\Collection</span><span class="p">([</span>
            <span class="s1">&#39;fields&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
                <span class="s1">&#39;personal_email&#39;</span>  <span class="o">=&gt;</span> <span class="k">new</span> <span class="nx">Assert\Required</span><span class="p">([</span>
                    <span class="k">new</span> <span class="nx">Assert\NotBlank</span><span class="p">(),</span>
                    <span class="k">new</span> <span class="nx">Assert\Email</span><span class="p">(),</span>
                <span class="p">]),</span>
                <span class="s1">&#39;alternate_email&#39;</span> <span class="o">=&gt;</span> <span class="k">new</span> <span class="nx">Assert\Optional</span><span class="p">(</span><span class="k">new</span> <span class="nx">Assert\Email</span><span class="p">()),</span>
            <span class="p">],</span>
        <span class="p">]));</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>
</td></tr></table></div>
</p></li>
</ul>
</div>
<p>Even without <code class="docutils literal notranslate"><span class="pre">allowMissingFields</span></code> set to true, you can now omit the <code class="docutils literal notranslate"><span class="pre">alternate_email</span></code>
property completely from the <code class="docutils literal notranslate"><span class="pre">profileData</span></code> array, since it is <code class="docutils literal notranslate"><span class="pre">Optional</span></code>.
However, if the <code class="docutils literal notranslate"><span class="pre">personal_email</span></code> field does not exist in the array,
the <code class="docutils literal notranslate"><span class="pre">NotBlank</span></code> constraint will still be applied (since it is wrapped in
<code class="docutils literal notranslate"><span class="pre">Required</span></code>) and you will receive a constraint violation.</p>
</div>
</div>
<div class="section" id="options">
<h2>Options</h2>
<div class="section" id="allowextrafields">
<h3><code class="docutils literal notranslate"><span class="pre">allowExtraFields</span></code></h3>
<p><strong>type</strong>: <code class="docutils literal notranslate"><span class="pre">boolean</span></code> <strong>default</strong>: false</p>
<p>If this option is set to <code class="docutils literal notranslate"><span class="pre">false</span></code> and the underlying collection contains
one or more elements that are not included in the <a class="reference internal" href="#fields">fields</a> option, a validation
error will be returned. If set to <code class="docutils literal notranslate"><span class="pre">true</span></code>, extra fields are OK.</p>
</div>
<div class="section" id="allowmissingfields">
<h3><code class="docutils literal notranslate"><span class="pre">allowMissingFields</span></code></h3>
<p><strong>type</strong>: <code class="docutils literal notranslate"><span class="pre">boolean</span></code> <strong>default</strong>: false</p>
<p>If this option is set to <code class="docutils literal notranslate"><span class="pre">false</span></code> and one or more fields from the <a class="reference internal" href="#fields">fields</a>
option are not present in the underlying collection, a validation error
will be returned. If set to <code class="docutils literal notranslate"><span class="pre">true</span></code>, it’s OK if some fields in the <a class="reference internal" href="#fields">fields</a>
option are not present in the underlying collection.</p>
</div>
<div class="section" id="extrafieldsmessage">
<h3><code class="docutils literal notranslate"><span class="pre">extraFieldsMessage</span></code></h3>
<p><strong>type</strong>: <code class="docutils literal notranslate"><span class="pre">string</span></code> <strong>default</strong>: <code class="docutils literal notranslate"><span class="pre">This</span> <span class="pre">field</span> <span class="pre">was</span> <span class="pre">not</span> <span class="pre">expected.</span></code></p>
<p>The message shown if <a class="reference internal" href="#allowextrafields">allowExtraFields</a> is false and an extra field is
detected.</p>
<p>You can use the following parameters in this message:</p>
<table class="docutils">
<colgroup>
<col style="width: 19%" />
<col style="width: 81%" />
</colgroup>
<thead>
<tr class="row-odd"><th class="head"><p>Parameter</p></th>
<th class="head"><p>Description</p></th>
</tr>
</thead>
<tbody>
<tr class="row-even"><td><p><code class="docutils literal notranslate"><span class="pre">{{</span> <span class="pre">field</span> <span class="pre">}}</span></code></p></td>
<td><p>The key of the extra field detected</p></td>
</tr>
</tbody>
</table>
</div>
<div class="section" id="fields">
<h3><code class="docutils literal notranslate"><span class="pre">fields</span></code></h3>
<p><strong>type</strong>: <code class="docutils literal notranslate"><span class="pre">array</span></code> [<a class="reference internal" href="../../validation.xhtml#validation-default-option"><span class="std std-ref">default option</span></a>]</p>
<p>This option is required and is an associative array defining all of the
keys in the collection and, for each key, exactly which validator(s) should
be executed against that element of the collection.</p>
</div>
<div class="section" id="groups">
<h3><code class="docutils literal notranslate"><span class="pre">groups</span></code></h3>
<p><strong>type</strong>: <code class="docutils literal notranslate"><span class="pre">array</span></code> | <code class="docutils literal notranslate"><span class="pre">string</span></code></p>
<p>It defines the validation group or groups this constraint belongs to. Read more
about <a class="reference internal" href="../../validation/groups.xhtml"><span class="doc">validation groups</span></a>.</p>
</div>
<div class="section" id="missingfieldsmessage">
<h3><code class="docutils literal notranslate"><span class="pre">missingFieldsMessage</span></code></h3>
<p><strong>type</strong>: <code class="docutils literal notranslate"><span class="pre">string</span></code> <strong>default</strong>: <code class="docutils literal notranslate"><span class="pre">This</span> <span class="pre">field</span> <span class="pre">is</span> <span class="pre">missing.</span></code></p>
<p>The message shown if <a class="reference internal" href="#allowmissingfields">allowMissingFields</a> is false and one or more fields
are missing from the underlying collection.</p>
<p>You can use the following parameters in this message:</p>
<table class="docutils">
<colgroup>
<col style="width: 19%" />
<col style="width: 81%" />
</colgroup>
<thead>
<tr class="row-odd"><th class="head"><p>Parameter</p></th>
<th class="head"><p>Description</p></th>
</tr>
</thead>
<tbody>
<tr class="row-even"><td><p><code class="docutils literal notranslate"><span class="pre">{{</span> <span class="pre">field</span> <span class="pre">}}</span></code></p></td>
<td><p>The key of the missing field defined in <code class="docutils literal notranslate"><span class="pre">fields</span></code></p></td>
</tr>
</tbody>
</table>
</div>
<div class="section" id="payload">
<h3><code class="docutils literal notranslate"><span class="pre">payload</span></code></h3>
<p><strong>type</strong>: <code class="docutils literal notranslate"><span class="pre">mixed</span></code> <strong>default</strong>: <code class="docutils literal notranslate"><span class="pre">null</span></code></p>
<p>This option can be used to attach arbitrary domain-specific data to a constraint.
The configured payload is not used by the Validator component, but its processing
is completely up to you.</p>
<p>For example, you may want to use
<a class="reference internal" href="../../validation/severity.xhtml"><span class="doc">several error levels</span></a> to present failed
constraints differently in the front-end depending on the severity of the
error.</p>
</div>
</div>
</div>


          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>