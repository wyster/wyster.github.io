<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <title>Regex</title>
    <link rel="stylesheet" href="../../_static/epub.css" type="text/css" />
    <link rel="stylesheet" href="../../_static/pygments.css" type="text/css" />
    <link rel="stylesheet" type="text/css" href="../../_static/rtd_custom.css" /> 
  </head><body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <div class="section" id="regex">
<h1>Regex</h1>
<p>Validates that a value matches a regular expression.</p>
<table class="docutils">
<colgroup>
<col style="width: 13%" />
<col style="width: 87%" />
</colgroup>
<tbody>
<tr class="row-odd"><td><p>Applies to</p></td>
<td><p><a class="reference internal" href="../../validation.xhtml#validation-property-target"><span class="std std-ref">property or method</span></a></p></td>
</tr>
<tr class="row-even"><td><p>Options</p></td>
<td><ul class="simple">
<li><p><a class="reference internal" href="#groups">groups</a></p></li>
<li><p><a class="reference internal" href="#htmlpattern">htmlPattern</a></p></li>
<li><p><a class="reference internal" href="#match">match</a></p></li>
<li><p><a class="reference internal" href="#message">message</a></p></li>
<li><p><a class="reference internal" href="#pattern">pattern</a></p></li>
<li><p><a class="reference internal" href="#normalizer">normalizer</a></p></li>
<li><p><a class="reference internal" href="#payload">payload</a></p></li>
</ul>
</td>
</tr>
<tr class="row-odd"><td><p>Class</p></td>
<td><p><code class="docutils literal notranslate"><a class="reference external" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Validator/Constraints/Regex.php" title="Symfony\Component\Validator\Constraints\Regex"><span class="pre">Regex</span></a><span class="link-target"> <span class="pre">[https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Validator/Constraints/Regex.php]</span></span></code></p></td>
</tr>
<tr class="row-even"><td><p>Validator</p></td>
<td><p><code class="docutils literal notranslate"><a class="reference external" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Validator/Constraints/RegexValidator.php" title="Symfony\Component\Validator\Constraints\RegexValidator"><span class="pre">RegexValidator</span></a><span class="link-target"> <span class="pre">[https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Validator/Constraints/RegexValidator.php]</span></span></code></p></td>
</tr>
</tbody>
</table>
<div class="section" id="basic-usage">
<h2>Basic Usage</h2>
<p>Suppose you have a <code class="docutils literal notranslate"><span class="pre">description</span></code> field and you want to verify that it
begins with a valid word character. The regular expression to test for this
would be <code class="docutils literal notranslate"><span class="pre">/^\w+/</span></code>, indicating that you’re looking for at least one or
more word characters at the beginning of your string:</p>
<div class="configuration-block">
<ul class="simple">
<li><p><em>Annotations</em><div class="highlight-php-annotations notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1">// src/Entity/Author.php</span>
<span class="k">namespace</span> <span class="nx">App\Entity</span><span class="p">;</span>

<span class="k">use</span> <span class="nx">Symfony\Component\Validator\Constraints</span> <span class="k">as</span> <span class="nx">Assert</span><span class="p">;</span>

<span class="k">class</span> <span class="nc">Author</span>
<span class="p">{</span>
    <span class="sd">/**</span>
<span class="sd">     * @Assert\Regex(&quot;/^\w+/&quot;)</span>
<span class="sd">     */</span>
    <span class="k">protected</span> <span class="nv">$description</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>
</td></tr></table></div>
</p></li>
<li><p><em>YAML</em><div class="highlight-yaml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1"># config/validator/validation.yaml</span>
<span class="l l-Scalar l-Scalar-Plain">App\Entity\Author</span><span class="p p-Indicator">:</span>
    <span class="l l-Scalar l-Scalar-Plain">properties</span><span class="p p-Indicator">:</span>
        <span class="l l-Scalar l-Scalar-Plain">description</span><span class="p p-Indicator">:</span>
            <span class="p p-Indicator">-</span> <span class="l l-Scalar l-Scalar-Plain">Regex</span><span class="p p-Indicator">:</span> <span class="s">&#39;/^\w+/&#39;</span>
</pre></div>
</td></tr></table></div>
</p></li>
<li><p><em>XML</em><div class="highlight-xml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c">&lt;!-- config/validator/validation.xml --&gt;</span>
<span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span>
<span class="nt">&lt;constraint-mapping</span> <span class="na">xmlns=</span><span class="s">&quot;http://symfony.com/schema/dic/constraint-mapping&quot;</span>
    <span class="na">xmlns:xsi=</span><span class="s">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span>
    <span class="na">xsi:schemaLocation=</span><span class="s">&quot;http://symfony.com/schema/dic/constraint-mapping https://symfony.com/schema/dic/constraint-mapping/constraint-mapping-1.0.xsd&quot;</span><span class="nt">&gt;</span>

    <span class="nt">&lt;class</span> <span class="na">name=</span><span class="s">&quot;App\Entity\Author&quot;</span><span class="nt">&gt;</span>
        <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;description&quot;</span><span class="nt">&gt;</span>
            <span class="nt">&lt;constraint</span> <span class="na">name=</span><span class="s">&quot;Regex&quot;</span><span class="nt">&gt;</span>
                <span class="nt">&lt;option</span> <span class="na">name=</span><span class="s">&quot;pattern&quot;</span><span class="nt">&gt;</span>/^\w+/<span class="nt">&lt;/option&gt;</span>
            <span class="nt">&lt;/constraint&gt;</span>
        <span class="nt">&lt;/property&gt;</span>
    <span class="nt">&lt;/class&gt;</span>
<span class="nt">&lt;/constraint-mapping&gt;</span>
</pre></div>
</td></tr></table></div>
</p></li>
<li><p><em>PHP</em><div class="highlight-php notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1">// src/Entity/Author.php</span>
<span class="k">namespace</span> <span class="nx">App\Entity</span><span class="p">;</span>

<span class="k">use</span> <span class="nx">Symfony\Component\Validator\Constraints</span> <span class="k">as</span> <span class="nx">Assert</span><span class="p">;</span>
<span class="k">use</span> <span class="nx">Symfony\Component\Validator\Mapping\ClassMetadata</span><span class="p">;</span>

<span class="k">class</span> <span class="nc">Author</span>
<span class="p">{</span>
    <span class="k">public</span> <span class="k">static</span> <span class="k">function</span> <span class="nf">loadValidatorMetadata</span><span class="p">(</span><span class="nx">ClassMetadata</span> <span class="nv">$metadata</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="nv">$metadata</span><span class="o">-&gt;</span><span class="na">addPropertyConstraint</span><span class="p">(</span><span class="s1">&#39;description&#39;</span><span class="p">,</span> <span class="k">new</span> <span class="nx">Assert\Regex</span><span class="p">([</span>
            <span class="s1">&#39;pattern&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;/^\w+/&#39;</span><span class="p">,</span>
        <span class="p">]));</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>
</td></tr></table></div>
</p></li>
</ul>
</div>
<p>Alternatively, you can set the <a class="reference internal" href="#match">match</a> option to <code class="docutils literal notranslate"><span class="pre">false</span></code> in order to
assert that a given string does <em>not</em> match. In the following example, you’ll
assert that the <code class="docutils literal notranslate"><span class="pre">firstName</span></code> field does not contain any numbers and give
it a custom message:</p>
<div class="configuration-block">
<ul class="simple">
<li><p><em>Annotations</em><div class="highlight-php-annotations notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1">// src/Entity/Author.php</span>
<span class="k">namespace</span> <span class="nx">App\Entity</span><span class="p">;</span>

<span class="k">use</span> <span class="nx">Symfony\Component\Validator\Constraints</span> <span class="k">as</span> <span class="nx">Assert</span><span class="p">;</span>

<span class="k">class</span> <span class="nc">Author</span>
<span class="p">{</span>
    <span class="sd">/**</span>
<span class="sd">     * @Assert\Regex(</span>
<span class="sd">     *     pattern=&quot;/\d/&quot;,</span>
<span class="sd">     *     match=false,</span>
<span class="sd">     *     message=&quot;Your name cannot contain a number&quot;</span>
<span class="sd">     * )</span>
<span class="sd">     */</span>
    <span class="k">protected</span> <span class="nv">$firstName</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>
</td></tr></table></div>
</p></li>
<li><p><em>YAML</em><div class="highlight-yaml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6
7
8</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1"># config/validator/validation.yaml</span>
<span class="l l-Scalar l-Scalar-Plain">App\Entity\Author</span><span class="p p-Indicator">:</span>
    <span class="l l-Scalar l-Scalar-Plain">properties</span><span class="p p-Indicator">:</span>
        <span class="l l-Scalar l-Scalar-Plain">firstName</span><span class="p p-Indicator">:</span>
            <span class="p p-Indicator">-</span> <span class="l l-Scalar l-Scalar-Plain">Regex</span><span class="p p-Indicator">:</span>
                <span class="l l-Scalar l-Scalar-Plain">pattern</span><span class="p p-Indicator">:</span> <span class="s">&#39;/\d/&#39;</span>
                <span class="l l-Scalar l-Scalar-Plain">match</span><span class="p p-Indicator">:</span>   <span class="l l-Scalar l-Scalar-Plain">false</span>
                <span class="l l-Scalar l-Scalar-Plain">message</span><span class="p p-Indicator">:</span> <span class="l l-Scalar l-Scalar-Plain">Your name cannot contain a number</span>
</pre></div>
</td></tr></table></div>
</p></li>
<li><p><em>XML</em><div class="highlight-xml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c">&lt;!-- config/validator/validation.xml --&gt;</span>
<span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span>
<span class="nt">&lt;constraint-mapping</span> <span class="na">xmlns=</span><span class="s">&quot;http://symfony.com/schema/dic/constraint-mapping&quot;</span>
    <span class="na">xmlns:xsi=</span><span class="s">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span>
    <span class="na">xsi:schemaLocation=</span><span class="s">&quot;http://symfony.com/schema/dic/constraint-mapping https://symfony.com/schema/dic/constraint-mapping/constraint-mapping-1.0.xsd&quot;</span><span class="nt">&gt;</span>

    <span class="nt">&lt;class</span> <span class="na">name=</span><span class="s">&quot;App\Entity\Author&quot;</span><span class="nt">&gt;</span>
        <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;firstName&quot;</span><span class="nt">&gt;</span>
            <span class="nt">&lt;constraint</span> <span class="na">name=</span><span class="s">&quot;Regex&quot;</span><span class="nt">&gt;</span>
                <span class="nt">&lt;option</span> <span class="na">name=</span><span class="s">&quot;pattern&quot;</span><span class="nt">&gt;</span>/\d/<span class="nt">&lt;/option&gt;</span>
                <span class="nt">&lt;option</span> <span class="na">name=</span><span class="s">&quot;match&quot;</span><span class="nt">&gt;</span>false<span class="nt">&lt;/option&gt;</span>
                <span class="nt">&lt;option</span> <span class="na">name=</span><span class="s">&quot;message&quot;</span><span class="nt">&gt;</span>Your name cannot contain a number<span class="nt">&lt;/option&gt;</span>
            <span class="nt">&lt;/constraint&gt;</span>
        <span class="nt">&lt;/property&gt;</span>
    <span class="nt">&lt;/class&gt;</span>
<span class="nt">&lt;/constraint-mapping&gt;</span>
</pre></div>
</td></tr></table></div>
</p></li>
<li><p><em>PHP</em><div class="highlight-php notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1">// src/Entity/Author.php</span>
<span class="k">namespace</span> <span class="nx">App\Entity</span><span class="p">;</span>

<span class="k">use</span> <span class="nx">Symfony\Component\Validator\Constraints</span> <span class="k">as</span> <span class="nx">Assert</span><span class="p">;</span>
<span class="k">use</span> <span class="nx">Symfony\Component\Validator\Mapping\ClassMetadata</span><span class="p">;</span>

<span class="k">class</span> <span class="nc">Author</span>
<span class="p">{</span>
    <span class="k">public</span> <span class="k">static</span> <span class="k">function</span> <span class="nf">loadValidatorMetadata</span><span class="p">(</span><span class="nx">ClassMetadata</span> <span class="nv">$metadata</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="nv">$metadata</span><span class="o">-&gt;</span><span class="na">addPropertyConstraint</span><span class="p">(</span><span class="s1">&#39;firstName&#39;</span><span class="p">,</span> <span class="k">new</span> <span class="nx">Assert\Regex</span><span class="p">([</span>
            <span class="s1">&#39;pattern&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;/\d/&#39;</span><span class="p">,</span>
            <span class="s1">&#39;match&#39;</span> <span class="o">=&gt;</span> <span class="k">false</span><span class="p">,</span>
            <span class="s1">&#39;message&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;Your name cannot contain a number&#39;</span><span class="p">,</span>
        <span class="p">]));</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>
</td></tr></table></div>
</p></li>
</ul>
</div>
<div class="admonition note">
<p class="admonition-title">Note</p>
<p>As with most of the other constraints, <code class="docutils literal notranslate"><span class="pre">null</span></code> and empty strings are
considered valid values. This is to allow them to be optional values.
If the value is mandatory, a common solution is to combine this constraint
with <a class="reference internal" href="NotBlank.xhtml"><span class="doc">NotBlank</span></a>.</p>
</div>
</div>
<div class="section" id="options">
<h2>Options</h2>
<div class="section" id="groups">
<h3><code class="docutils literal notranslate"><span class="pre">groups</span></code></h3>
<p><strong>type</strong>: <code class="docutils literal notranslate"><span class="pre">array</span></code> | <code class="docutils literal notranslate"><span class="pre">string</span></code></p>
<p>It defines the validation group or groups this constraint belongs to. Read more
about <a class="reference internal" href="../../validation/groups.xhtml"><span class="doc">validation groups</span></a>.</p>
</div>
<div class="section" id="htmlpattern">
<h3>htmlPattern</h3>
<p><strong>type</strong>: <code class="docutils literal notranslate"><span class="pre">string|boolean</span></code> <strong>default</strong>: null</p>
<p>This option specifies the pattern to use in the HTML5 <code class="docutils literal notranslate"><span class="pre">pattern</span></code> attribute.
You usually don’t need to specify this option because by default, the constraint
will convert the pattern given in the <a class="reference internal" href="#pattern">pattern</a> option into an HTML5 compatible
pattern. This means that the delimiters are removed (e.g. <code class="docutils literal notranslate"><span class="pre">/[a-z]+/</span></code> becomes
<code class="docutils literal notranslate"><span class="pre">[a-z]+</span></code>).</p>
<p>However, there are some other incompatibilities between both patterns which
cannot be fixed by the constraint. For instance, the HTML5 <code class="docutils literal notranslate"><span class="pre">pattern</span></code> attribute
does not support flags. If you have a pattern like <code class="docutils literal notranslate"><span class="pre">/[a-z]+/i</span></code>, you
need to specify the HTML5 compatible pattern in the <code class="docutils literal notranslate"><span class="pre">htmlPattern</span></code> option:</p>
<div class="configuration-block">
<ul class="simple">
<li><p><em>Annotations</em><div class="highlight-php-annotations notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1">// src/Entity/Author.php</span>
<span class="k">namespace</span> <span class="nx">App\Entity</span><span class="p">;</span>

<span class="k">use</span> <span class="nx">Symfony\Component\Validator\Constraints</span> <span class="k">as</span> <span class="nx">Assert</span><span class="p">;</span>

<span class="k">class</span> <span class="nc">Author</span>
<span class="p">{</span>
    <span class="sd">/**</span>
<span class="sd">     * @Assert\Regex(</span>
<span class="sd">     *     pattern     = &quot;/^[a-z]+$/i&quot;,</span>
<span class="sd">     *     htmlPattern = &quot;^[a-zA-Z]+$&quot;</span>
<span class="sd">     * )</span>
<span class="sd">     */</span>
    <span class="k">protected</span> <span class="nv">$name</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>
</td></tr></table></div>
</p></li>
<li><p><em>YAML</em><div class="highlight-yaml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6
7</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1"># config/validator/validation.yaml</span>
<span class="l l-Scalar l-Scalar-Plain">App\Entity\Author</span><span class="p p-Indicator">:</span>
    <span class="l l-Scalar l-Scalar-Plain">properties</span><span class="p p-Indicator">:</span>
        <span class="l l-Scalar l-Scalar-Plain">name</span><span class="p p-Indicator">:</span>
            <span class="p p-Indicator">-</span> <span class="l l-Scalar l-Scalar-Plain">Regex</span><span class="p p-Indicator">:</span>
                <span class="l l-Scalar l-Scalar-Plain">pattern</span><span class="p p-Indicator">:</span> <span class="s">&#39;/^[a-z]+$/i&#39;</span>
                <span class="l l-Scalar l-Scalar-Plain">htmlPattern</span><span class="p p-Indicator">:</span> <span class="s">&#39;^[a-zA-Z]+$&#39;</span>
</pre></div>
</td></tr></table></div>
</p></li>
<li><p><em>XML</em><div class="highlight-xml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c">&lt;!-- config/validator/validation.xml --&gt;</span>
<span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span>
<span class="nt">&lt;constraint-mapping</span> <span class="na">xmlns=</span><span class="s">&quot;http://symfony.com/schema/dic/constraint-mapping&quot;</span>
    <span class="na">xmlns:xsi=</span><span class="s">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span>
    <span class="na">xsi:schemaLocation=</span><span class="s">&quot;http://symfony.com/schema/dic/constraint-mapping https://symfony.com/schema/dic/constraint-mapping/constraint-mapping-1.0.xsd&quot;</span><span class="nt">&gt;</span>

    <span class="nt">&lt;class</span> <span class="na">name=</span><span class="s">&quot;App\Entity\Author&quot;</span><span class="nt">&gt;</span>
        <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;name&quot;</span><span class="nt">&gt;</span>
            <span class="nt">&lt;constraint</span> <span class="na">name=</span><span class="s">&quot;Regex&quot;</span><span class="nt">&gt;</span>
                <span class="nt">&lt;option</span> <span class="na">name=</span><span class="s">&quot;pattern&quot;</span><span class="nt">&gt;</span>/^[a-z]+$/i<span class="nt">&lt;/option&gt;</span>
                <span class="nt">&lt;option</span> <span class="na">name=</span><span class="s">&quot;htmlPattern&quot;</span><span class="nt">&gt;</span>^[a-zA-Z]+$<span class="nt">&lt;/option&gt;</span>
            <span class="nt">&lt;/constraint&gt;</span>
        <span class="nt">&lt;/property&gt;</span>
    <span class="nt">&lt;/class&gt;</span>
<span class="nt">&lt;/constraint-mapping&gt;</span>
</pre></div>
</td></tr></table></div>
</p></li>
<li><p><em>PHP</em><div class="highlight-php notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1">// src/Entity/Author.php</span>
<span class="k">namespace</span> <span class="nx">App\Entity</span><span class="p">;</span>

<span class="k">use</span> <span class="nx">Symfony\Component\Validator\Constraints</span> <span class="k">as</span> <span class="nx">Assert</span><span class="p">;</span>
<span class="k">use</span> <span class="nx">Symfony\Component\Validator\Mapping\ClassMetadata</span><span class="p">;</span>

<span class="k">class</span> <span class="nc">Author</span>
<span class="p">{</span>
    <span class="k">public</span> <span class="k">static</span> <span class="k">function</span> <span class="nf">loadValidatorMetadata</span><span class="p">(</span><span class="nx">ClassMetadata</span> <span class="nv">$metadata</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="nv">$metadata</span><span class="o">-&gt;</span><span class="na">addPropertyConstraint</span><span class="p">(</span><span class="s1">&#39;name&#39;</span><span class="p">,</span> <span class="k">new</span> <span class="nx">Assert\Regex</span><span class="p">([</span>
            <span class="s1">&#39;pattern&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;/^[a-z]+$/i&#39;</span><span class="p">,</span>
            <span class="s1">&#39;htmlPattern&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;^[a-zA-Z]+$&#39;</span><span class="p">,</span>
        <span class="p">]));</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>
</td></tr></table></div>
</p></li>
</ul>
</div>
<p>Setting <code class="docutils literal notranslate"><span class="pre">htmlPattern</span></code> to false will disable client side validation.</p>
</div>
<div class="section" id="match">
<h3>match</h3>
<p><strong>type</strong>: <code class="docutils literal notranslate"><span class="pre">boolean</span></code> default: <code class="docutils literal notranslate"><span class="pre">true</span></code></p>
<p>If <code class="docutils literal notranslate"><span class="pre">true</span></code> (or not set), this validator will pass if the given string matches
the given <a class="reference internal" href="#pattern">pattern</a> regular expression. However, when this option is set
to <code class="docutils literal notranslate"><span class="pre">false</span></code>, the opposite will occur: validation will pass only if the
given string does <strong>not</strong> match the <a class="reference internal" href="#pattern">pattern</a> regular expression.</p>
</div>
<div class="section" id="message">
<h3>message</h3>
<p><strong>type</strong>: <code class="docutils literal notranslate"><span class="pre">string</span></code> <strong>default</strong>: <code class="docutils literal notranslate"><span class="pre">This</span> <span class="pre">value</span> <span class="pre">is</span> <span class="pre">not</span> <span class="pre">valid.</span></code></p>
<p>This is the message that will be shown if this validator fails.</p>
<p>You can use the following parameters in this message:</p>
<table class="docutils">
<colgroup>
<col style="width: 19%" />
<col style="width: 81%" />
</colgroup>
<thead>
<tr class="row-odd"><th class="head"><p>Parameter</p></th>
<th class="head"><p>Description</p></th>
</tr>
</thead>
<tbody>
<tr class="row-even"><td><p><code class="docutils literal notranslate"><span class="pre">{{</span> <span class="pre">value</span> <span class="pre">}}</span></code></p></td>
<td><p>The current (invalid) value</p></td>
</tr>
<tr class="row-odd"><td><p><code class="docutils literal notranslate"><span class="pre">{{</span> <span class="pre">label</span> <span class="pre">}}</span></code></p></td>
<td><p>Corresponding form field label</p></td>
</tr>
</tbody>
</table>
<div class="versionadded">
<p><span class="versionmodified">New in version 5.2: </span>The <code class="docutils literal notranslate"><span class="pre">{{</span> <span class="pre">label</span> <span class="pre">}}</span></code> parameter was introduced in Symfony 5.2.</p>
</div>
</div>
<div class="section" id="pattern">
<h3>pattern</h3>
<p><strong>type</strong>: <code class="docutils literal notranslate"><span class="pre">string</span></code> [<a class="reference internal" href="../../validation.xhtml#validation-default-option"><span class="std std-ref">default option</span></a>]</p>
<p>This required option is the regular expression pattern that the input will
be matched against. By default, this validator will fail if the input string
does <em>not</em> match this regular expression (via the <code class="docutils literal notranslate"><a class="reference external" href="https://www.php.net/manual/en/function.preg-match.php" title="preg_match"><span class="pre">preg_match</span></a><span class="link-target"> <span class="pre">[https://www.php.net/manual/en/function.preg-match.php]</span></span></code>
PHP function). However, if <a class="reference internal" href="#match">match</a> is set to false, then validation will
fail if the input string <em>does</em> match this pattern.</p>
</div>
<div class="section" id="normalizer">
<h3>normalizer</h3>
<p><strong>type</strong>: a <a class="reference external" href="https://www.php.net/callable">PHP callable</a><span class="link-target"> [https://www.php.net/callable]</span> <strong>default</strong>: <code class="docutils literal notranslate"><span class="pre">null</span></code></p>
<p>This option allows to define the PHP callable applied to the given value before
checking if it is valid.</p>
<p>For example, you may want to pass the <code class="docutils literal notranslate"><span class="pre">'trim'</span></code> string to apply the
<code class="docutils literal notranslate"><a class="reference external" href="https://www.php.net/manual/en/function.trim.php" title="trim"><span class="pre">trim</span></a><span class="link-target"> <span class="pre">[https://www.php.net/manual/en/function.trim.php]</span></span></code> PHP function in order to ignore leading and trailing
whitespace during validation.</p>
</div>
<div class="section" id="payload">
<h3><code class="docutils literal notranslate"><span class="pre">payload</span></code></h3>
<p><strong>type</strong>: <code class="docutils literal notranslate"><span class="pre">mixed</span></code> <strong>default</strong>: <code class="docutils literal notranslate"><span class="pre">null</span></code></p>
<p>This option can be used to attach arbitrary domain-specific data to a constraint.
The configured payload is not used by the Validator component, but its processing
is completely up to you.</p>
<p>For example, you may want to use
<a class="reference internal" href="../../validation/severity.xhtml"><span class="doc">several error levels</span></a> to present failed
constraints differently in the front-end depending on the severity of the
error.</p>
</div>
</div>
</div>


          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>