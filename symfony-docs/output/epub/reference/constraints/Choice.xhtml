<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <title>Choice</title>
    <link rel="stylesheet" href="../../_static/epub.css" type="text/css" />
    <link rel="stylesheet" href="../../_static/pygments.css" type="text/css" />
    <link rel="stylesheet" type="text/css" href="../../_static/rtd_custom.css" /> 
  </head><body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <div class="section" id="choice">
<h1>Choice</h1>
<p>This constraint is used to ensure that the given value is one of a given
set of <em>valid</em> choices. It can also be used to validate that each item in
an array of items is one of those valid choices.</p>
<table class="docutils">
<colgroup>
<col style="width: 13%" />
<col style="width: 87%" />
</colgroup>
<tbody>
<tr class="row-odd"><td><p>Applies to</p></td>
<td><p><a class="reference internal" href="../../validation.xhtml#validation-property-target"><span class="std std-ref">property or method</span></a></p></td>
</tr>
<tr class="row-even"><td><p>Options</p></td>
<td><ul class="simple">
<li><p><a class="reference internal" href="#callback">callback</a></p></li>
<li><p><a class="reference internal" href="#choices">choices</a></p></li>
<li><p><a class="reference internal" href="#groups">groups</a></p></li>
<li><p><a class="reference internal" href="#max">max</a></p></li>
<li><p><a class="reference internal" href="#maxmessage">maxMessage</a></p></li>
<li><p><a class="reference internal" href="#message">message</a></p></li>
<li><p><a class="reference internal" href="#min">min</a></p></li>
<li><p><a class="reference internal" href="#minmessage">minMessage</a></p></li>
<li><p><a class="reference internal" href="#multiple">multiple</a></p></li>
<li><p><a class="reference internal" href="#multiplemessage">multipleMessage</a></p></li>
<li><p><a class="reference internal" href="#payload">payload</a></p></li>
</ul>
</td>
</tr>
<tr class="row-odd"><td><p>Class</p></td>
<td><p><code class="docutils literal notranslate"><a class="reference external" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Validator/Constraints/Choice.php" title="Symfony\Component\Validator\Constraints\Choice"><span class="pre">Choice</span></a><span class="link-target"> <span class="pre">[https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Validator/Constraints/Choice.php]</span></span></code></p></td>
</tr>
<tr class="row-even"><td><p>Validator</p></td>
<td><p><code class="docutils literal notranslate"><a class="reference external" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Validator/Constraints/ChoiceValidator.php" title="Symfony\Component\Validator\Constraints\ChoiceValidator"><span class="pre">ChoiceValidator</span></a><span class="link-target"> <span class="pre">[https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Validator/Constraints/ChoiceValidator.php]</span></span></code></p></td>
</tr>
</tbody>
</table>
<div class="section" id="basic-usage">
<h2>Basic Usage</h2>
<p>The basic idea of this constraint is that you supply it with an array of
valid values (this can be done in several ways) and it validates that the
value of the given property exists in that array.</p>
<p>If your valid choice list is simple, you can pass them in directly via the
<a class="reference internal" href="#choices">choices</a> option:</p>
<div class="configuration-block">
<ul class="simple">
<li><p><em>Annotations</em><div class="highlight-php-annotations notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1">// src/Entity/Author.php</span>
<span class="k">namespace</span> <span class="nx">App\Entity</span><span class="p">;</span>

<span class="k">use</span> <span class="nx">Symfony\Component\Validator\Constraints</span> <span class="k">as</span> <span class="nx">Assert</span><span class="p">;</span>

<span class="k">class</span> <span class="nc">Author</span>
<span class="p">{</span>
    <span class="k">const</span> <span class="no">GENRES</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;fiction&#39;</span><span class="p">,</span> <span class="s1">&#39;non-fiction&#39;</span><span class="p">];</span>

    <span class="sd">/**</span>
<span class="sd">     * @Assert\Choice({&quot;New York&quot;, &quot;Berlin&quot;, &quot;Tokyo&quot;})</span>
<span class="sd">     */</span>
    <span class="k">protected</span> <span class="nv">$city</span><span class="p">;</span>

    <span class="sd">/**</span>
<span class="sd">     * You can also directly provide an array constant to the &quot;choices&quot; option in the annotation</span>
<span class="sd">     *</span>
<span class="sd">     * @Assert\Choice(choices=Author::GENRES, message=&quot;Choose a valid genre.&quot;)</span>
<span class="sd">     */</span>
    <span class="k">protected</span> <span class="nv">$genre</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>
</td></tr></table></div>
</p></li>
<li><p><em>YAML</em><div class="highlight-yaml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6
7
8
9</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1"># config/validator/validation.yaml</span>
<span class="l l-Scalar l-Scalar-Plain">App\Entity\Author</span><span class="p p-Indicator">:</span>
    <span class="l l-Scalar l-Scalar-Plain">properties</span><span class="p p-Indicator">:</span>
        <span class="l l-Scalar l-Scalar-Plain">city</span><span class="p p-Indicator">:</span>
            <span class="p p-Indicator">-</span> <span class="l l-Scalar l-Scalar-Plain">Choice</span><span class="p p-Indicator">:</span> <span class="p p-Indicator">[</span><span class="nv">New York</span><span class="p p-Indicator">,</span> <span class="nv">Berlin</span><span class="p p-Indicator">,</span> <span class="nv">Tokyo</span><span class="p p-Indicator">]</span>
        <span class="l l-Scalar l-Scalar-Plain">genre</span><span class="p p-Indicator">:</span>
            <span class="p p-Indicator">-</span> <span class="l l-Scalar l-Scalar-Plain">Choice</span><span class="p p-Indicator">:</span>
                <span class="l l-Scalar l-Scalar-Plain">choices</span><span class="p p-Indicator">:</span>  <span class="p p-Indicator">[</span><span class="nv">fiction</span><span class="p p-Indicator">,</span> <span class="nv">non-fiction</span><span class="p p-Indicator">]</span>
                <span class="l l-Scalar l-Scalar-Plain">message</span><span class="p p-Indicator">:</span>  <span class="l l-Scalar l-Scalar-Plain">Choose a valid genre.</span>
</pre></div>
</td></tr></table></div>
</p></li>
<li><p><em>XML</em><div class="highlight-xml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c">&lt;!-- config/validator/validation.xml --&gt;</span>
<span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span>
<span class="nt">&lt;constraint-mapping</span> <span class="na">xmlns=</span><span class="s">&quot;http://symfony.com/schema/dic/constraint-mapping&quot;</span>
    <span class="na">xmlns:xsi=</span><span class="s">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span>
    <span class="na">xsi:schemaLocation=</span><span class="s">&quot;http://symfony.com/schema/dic/constraint-mapping https://symfony.com/schema/dic/constraint-mapping/constraint-mapping-1.0.xsd&quot;</span><span class="nt">&gt;</span>

    <span class="nt">&lt;class</span> <span class="na">name=</span><span class="s">&quot;App\Entity\Author&quot;</span><span class="nt">&gt;</span>
        <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;city&quot;</span><span class="nt">&gt;</span>
            <span class="nt">&lt;constraint</span> <span class="na">name=</span><span class="s">&quot;Choice&quot;</span><span class="nt">&gt;</span>
                <span class="nt">&lt;value&gt;</span>New York<span class="nt">&lt;/value&gt;</span>
                <span class="nt">&lt;value&gt;</span>Berlin<span class="nt">&lt;/value&gt;</span>
                <span class="nt">&lt;value&gt;</span>Tokyo<span class="nt">&lt;/value&gt;</span>
            <span class="nt">&lt;/constraint&gt;</span>
        <span class="nt">&lt;/property&gt;</span>
        <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;genre&quot;</span><span class="nt">&gt;</span>
            <span class="nt">&lt;constraint</span> <span class="na">name=</span><span class="s">&quot;Choice&quot;</span><span class="nt">&gt;</span>
                <span class="nt">&lt;option</span> <span class="na">name=</span><span class="s">&quot;choices&quot;</span><span class="nt">&gt;</span>
                    <span class="nt">&lt;value&gt;</span>fiction<span class="nt">&lt;/value&gt;</span>
                    <span class="nt">&lt;value&gt;</span>non-fiction<span class="nt">&lt;/value&gt;</span>
                <span class="nt">&lt;/option&gt;</span>
                <span class="nt">&lt;option</span> <span class="na">name=</span><span class="s">&quot;message&quot;</span><span class="nt">&gt;</span>Choose a valid genre.<span class="nt">&lt;/option&gt;</span>
            <span class="nt">&lt;/constraint&gt;</span>
        <span class="nt">&lt;/property&gt;</span>
    <span class="nt">&lt;/class&gt;</span>
<span class="nt">&lt;/constraint-mapping&gt;</span>
</pre></div>
</td></tr></table></div>
</p></li>
<li><p><em>PHP</em><div class="highlight-php notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1">// src/EntityAuthor.php</span>
<span class="k">namespace</span> <span class="nx">App\Entity</span><span class="p">;</span>

<span class="k">use</span> <span class="nx">Symfony\Component\Validator\Constraints</span> <span class="k">as</span> <span class="nx">Assert</span><span class="p">;</span>
<span class="k">use</span> <span class="nx">Symfony\Component\Validator\Mapping\ClassMetadata</span><span class="p">;</span>

<span class="k">class</span> <span class="nc">Author</span>
<span class="p">{</span>
    <span class="k">public</span> <span class="k">static</span> <span class="k">function</span> <span class="nf">loadValidatorMetadata</span><span class="p">(</span><span class="nx">ClassMetadata</span> <span class="nv">$metadata</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="nv">$metadata</span><span class="o">-&gt;</span><span class="na">addPropertyConstraint</span><span class="p">(</span>
            <span class="s1">&#39;city&#39;</span><span class="p">,</span>
            <span class="k">new</span> <span class="nx">Assert\Choice</span><span class="p">([</span><span class="s1">&#39;New York&#39;</span><span class="p">,</span> <span class="s1">&#39;Berlin&#39;</span><span class="p">,</span> <span class="s1">&#39;Tokyo&#39;</span><span class="p">])</span>
        <span class="p">);</span>

        <span class="nv">$metadata</span><span class="o">-&gt;</span><span class="na">addPropertyConstraint</span><span class="p">(</span><span class="s1">&#39;genre&#39;</span><span class="p">,</span> <span class="k">new</span> <span class="nx">Assert\Choice</span><span class="p">([</span>
            <span class="s1">&#39;choices&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span><span class="s1">&#39;fiction&#39;</span><span class="p">,</span> <span class="s1">&#39;non-fiction&#39;</span><span class="p">],</span>
            <span class="s1">&#39;message&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;Choose a valid genre.&#39;</span><span class="p">,</span>
        <span class="p">]));</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>
</td></tr></table></div>
</p></li>
</ul>
</div>
</div>
<div class="section" id="supplying-the-choices-with-a-callback-function">
<h2>Supplying the Choices with a Callback Function</h2>
<p>You can also use a callback function to specify your options. This is useful
if you want to keep your choices in some central location so that, for example,
you can access those choices for validation or for building a select form element:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="c1">// src/Entity/Author.php</span>
<span class="k">namespace</span> <span class="nx">App\Entity</span><span class="p">;</span>

<span class="k">class</span> <span class="nc">Author</span>
<span class="p">{</span>
    <span class="k">public</span> <span class="k">static</span> <span class="k">function</span> <span class="nf">getGenres</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="k">return</span> <span class="p">[</span><span class="s1">&#39;fiction&#39;</span><span class="p">,</span> <span class="s1">&#39;non-fiction&#39;</span><span class="p">];</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>
</div>
<p>You can pass the name of this method to the <a class="reference internal" href="#callback">callback</a> option of the <code class="docutils literal notranslate"><span class="pre">Choice</span></code>
constraint.</p>
<div class="configuration-block">
<ul class="simple">
<li><p><em>Annotations</em><div class="highlight-php-annotations notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1">// src/Entity/Author.php</span>
<span class="k">namespace</span> <span class="nx">App\Entity</span><span class="p">;</span>

<span class="k">use</span> <span class="nx">Symfony\Component\Validator\Constraints</span> <span class="k">as</span> <span class="nx">Assert</span><span class="p">;</span>

<span class="k">class</span> <span class="nc">Author</span>
<span class="p">{</span>
    <span class="sd">/**</span>
<span class="sd">     * @Assert\Choice(callback=&quot;getGenres&quot;)</span>
<span class="sd">     */</span>
    <span class="k">protected</span> <span class="nv">$genre</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>
</td></tr></table></div>
</p></li>
<li><p><em>YAML</em><div class="highlight-yaml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1"># config/validator/validation.yaml</span>
<span class="l l-Scalar l-Scalar-Plain">App\Entity\Author</span><span class="p p-Indicator">:</span>
    <span class="l l-Scalar l-Scalar-Plain">properties</span><span class="p p-Indicator">:</span>
        <span class="l l-Scalar l-Scalar-Plain">genre</span><span class="p p-Indicator">:</span>
            <span class="p p-Indicator">-</span> <span class="l l-Scalar l-Scalar-Plain">Choice</span><span class="p p-Indicator">:</span> <span class="p p-Indicator">{</span> <span class="nv">callback</span><span class="p p-Indicator">:</span> <span class="nv">getGenres</span> <span class="p p-Indicator">}</span>
</pre></div>
</td></tr></table></div>
</p></li>
<li><p><em>XML</em><div class="highlight-xml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c">&lt;!-- config/validator/validation.xml --&gt;</span>
<span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span>
<span class="nt">&lt;constraint-mapping</span> <span class="na">xmlns=</span><span class="s">&quot;http://symfony.com/schema/dic/constraint-mapping&quot;</span>
    <span class="na">xmlns:xsi=</span><span class="s">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span>
    <span class="na">xsi:schemaLocation=</span><span class="s">&quot;http://symfony.com/schema/dic/constraint-mapping https://symfony.com/schema/dic/constraint-mapping/constraint-mapping-1.0.xsd&quot;</span><span class="nt">&gt;</span>

    <span class="nt">&lt;class</span> <span class="na">name=</span><span class="s">&quot;App\Entity\Author&quot;</span><span class="nt">&gt;</span>
        <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;genre&quot;</span><span class="nt">&gt;</span>
            <span class="nt">&lt;constraint</span> <span class="na">name=</span><span class="s">&quot;Choice&quot;</span><span class="nt">&gt;</span>
                <span class="nt">&lt;option</span> <span class="na">name=</span><span class="s">&quot;callback&quot;</span><span class="nt">&gt;</span>getGenres<span class="nt">&lt;/option&gt;</span>
            <span class="nt">&lt;/constraint&gt;</span>
        <span class="nt">&lt;/property&gt;</span>
    <span class="nt">&lt;/class&gt;</span>
<span class="nt">&lt;/constraint-mapping&gt;</span>
</pre></div>
</td></tr></table></div>
</p></li>
<li><p><em>PHP</em><div class="highlight-php notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1">// src/EntityAuthor.php</span>
<span class="k">namespace</span> <span class="nx">App\Entity</span><span class="p">;</span>

<span class="k">use</span> <span class="nx">Symfony\Component\Validator\Constraints</span> <span class="k">as</span> <span class="nx">Assert</span><span class="p">;</span>
<span class="k">use</span> <span class="nx">Symfony\Component\Validator\Mapping\ClassMetadata</span><span class="p">;</span>

<span class="k">class</span> <span class="nc">Author</span>
<span class="p">{</span>
    <span class="k">protected</span> <span class="nv">$genre</span><span class="p">;</span>

    <span class="k">public</span> <span class="k">static</span> <span class="k">function</span> <span class="nf">loadValidatorMetadata</span><span class="p">(</span><span class="nx">ClassMetadata</span> <span class="nv">$metadata</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="nv">$metadata</span><span class="o">-&gt;</span><span class="na">addPropertyConstraint</span><span class="p">(</span><span class="s1">&#39;genre&#39;</span><span class="p">,</span> <span class="k">new</span> <span class="nx">Assert\Choice</span><span class="p">([</span>
            <span class="s1">&#39;callback&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;getGenres&#39;</span><span class="p">,</span>
        <span class="p">]));</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>
</td></tr></table></div>
</p></li>
</ul>
</div>
<p>If the callback is defined in a different class and is static, for example <code class="docutils literal notranslate"><span class="pre">App\Entity\Genre</span></code>,
you can pass the class name and the method as an array.</p>
<div class="configuration-block">
<ul class="simple">
<li><p><em>Annotations</em><div class="highlight-php-annotations notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1">// src/Entity/Author.php</span>
<span class="k">namespace</span> <span class="nx">App\Entity</span><span class="p">;</span>

<span class="k">use</span> <span class="nx">Symfony\Component\Validator\Constraints</span> <span class="k">as</span> <span class="nx">Assert</span><span class="p">;</span>

<span class="k">class</span> <span class="nc">Author</span>
<span class="p">{</span>
    <span class="sd">/**</span>
<span class="sd">     * @Assert\Choice(callback={&quot;App\Entity\Genre&quot;, &quot;getGenres&quot;})</span>
<span class="sd">     */</span>
    <span class="k">protected</span> <span class="nv">$genre</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>
</td></tr></table></div>
</p></li>
<li><p><em>YAML</em><div class="highlight-yaml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1"># config/validator/validation.yaml</span>
<span class="l l-Scalar l-Scalar-Plain">App\Entity\Author</span><span class="p p-Indicator">:</span>
    <span class="l l-Scalar l-Scalar-Plain">properties</span><span class="p p-Indicator">:</span>
        <span class="l l-Scalar l-Scalar-Plain">genre</span><span class="p p-Indicator">:</span>
            <span class="p p-Indicator">-</span> <span class="l l-Scalar l-Scalar-Plain">Choice</span><span class="p p-Indicator">:</span> <span class="p p-Indicator">{</span> <span class="nv">callback</span><span class="p p-Indicator">:</span> <span class="p p-Indicator">[</span><span class="nv">App\Entity\Genre</span><span class="p p-Indicator">,</span> <span class="nv">getGenres</span><span class="p p-Indicator">]</span> <span class="p p-Indicator">}</span>
</pre></div>
</td></tr></table></div>
</p></li>
<li><p><em>XML</em><div class="highlight-xml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c">&lt;!-- config/validator/validation.xml --&gt;</span>
<span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span>
<span class="nt">&lt;constraint-mapping</span> <span class="na">xmlns=</span><span class="s">&quot;http://symfony.com/schema/dic/constraint-mapping&quot;</span>
    <span class="na">xmlns:xsi=</span><span class="s">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span>
    <span class="na">xsi:schemaLocation=</span><span class="s">&quot;http://symfony.com/schema/dic/constraint-mapping https://symfony.com/schema/dic/constraint-mapping/constraint-mapping-1.0.xsd&quot;</span><span class="nt">&gt;</span>

    <span class="nt">&lt;class</span> <span class="na">name=</span><span class="s">&quot;App\Entity\Author&quot;</span><span class="nt">&gt;</span>
        <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;genre&quot;</span><span class="nt">&gt;</span>
            <span class="nt">&lt;constraint</span> <span class="na">name=</span><span class="s">&quot;Choice&quot;</span><span class="nt">&gt;</span>
                <span class="nt">&lt;option</span> <span class="na">name=</span><span class="s">&quot;callback&quot;</span><span class="nt">&gt;</span>
                    <span class="nt">&lt;value&gt;</span>App\Entity\Genre<span class="nt">&lt;/value&gt;</span>
                    <span class="nt">&lt;value&gt;</span>getGenres<span class="nt">&lt;/value&gt;</span>
                <span class="nt">&lt;/option&gt;</span>
            <span class="nt">&lt;/constraint&gt;</span>
        <span class="nt">&lt;/property&gt;</span>
    <span class="nt">&lt;/class&gt;</span>
<span class="nt">&lt;/constraint-mapping&gt;</span>
</pre></div>
</td></tr></table></div>
</p></li>
<li><p><em>PHP</em><div class="highlight-php notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1">// src/Entity/Author.php</span>
<span class="k">namespace</span> <span class="nx">App\Entity</span><span class="p">;</span>

<span class="k">use</span> <span class="nx">App\Entity\Genre</span><span class="p">;</span>
<span class="k">use</span> <span class="nx">Symfony\Component\Validator\Constraints</span> <span class="k">as</span> <span class="nx">Assert</span><span class="p">;</span>
<span class="k">use</span> <span class="nx">Symfony\Component\Validator\Mapping\ClassMetadata</span><span class="p">;</span>

<span class="k">class</span> <span class="nc">Author</span>
<span class="p">{</span>
    <span class="k">public</span> <span class="k">static</span> <span class="k">function</span> <span class="nf">loadValidatorMetadata</span><span class="p">(</span><span class="nx">ClassMetadata</span> <span class="nv">$metadata</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="nv">$metadata</span><span class="o">-&gt;</span><span class="na">addPropertyConstraint</span><span class="p">(</span><span class="s1">&#39;genre&#39;</span><span class="p">,</span> <span class="k">new</span> <span class="nx">Assert\Choice</span><span class="p">([</span>
            <span class="s1">&#39;callback&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span><span class="nx">Genre</span><span class="o">::</span><span class="na">class</span><span class="p">,</span> <span class="s1">&#39;getGenres&#39;</span><span class="p">],</span>
        <span class="p">]));</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>
</td></tr></table></div>
</p></li>
</ul>
</div>
</div>
<div class="section" id="available-options">
<h2>Available Options</h2>
<div class="section" id="callback">
<h3>callback</h3>
<p><strong>type</strong>: <code class="docutils literal notranslate"><span class="pre">string|array|Closure</span></code></p>
<p>This is a callback method that can be used instead of the <a class="reference internal" href="#choices">choices</a> option
to return the choices array. See
<a class="reference internal" href="#supplying-the-choices-with-a-callback-function">Supplying the Choices with a Callback Function</a> for details on its usage.</p>
</div>
<div class="section" id="choices">
<h3>choices</h3>
<p><strong>type</strong>: <code class="docutils literal notranslate"><span class="pre">array</span></code> [<a class="reference internal" href="../../validation.xhtml#validation-default-option"><span class="std std-ref">default option</span></a>]</p>
<p>A required option (unless <a class="reference internal" href="#callback">callback</a> is specified) - this is the array
of options that should be considered in the valid set. The input value
will be matched against this array.</p>
</div>
<div class="section" id="groups">
<h3><code class="docutils literal notranslate"><span class="pre">groups</span></code></h3>
<p><strong>type</strong>: <code class="docutils literal notranslate"><span class="pre">array</span></code> | <code class="docutils literal notranslate"><span class="pre">string</span></code></p>
<p>It defines the validation group or groups this constraint belongs to. Read more
about <a class="reference internal" href="../../validation/groups.xhtml"><span class="doc">validation groups</span></a>.</p>
</div>
<div class="section" id="max">
<h3>max</h3>
<p><strong>type</strong>: <code class="docutils literal notranslate"><span class="pre">integer</span></code></p>
<p>If the <code class="docutils literal notranslate"><span class="pre">multiple</span></code> option is true, then you can use the <code class="docutils literal notranslate"><span class="pre">max</span></code> option
to force no more than XX number of values to be selected. For example, if
<code class="docutils literal notranslate"><span class="pre">max</span></code> is 3, but the input array contains 4 valid items, the validation
will fail.</p>
</div>
<div class="section" id="maxmessage">
<h3>maxMessage</h3>
<p><strong>type</strong>: <code class="docutils literal notranslate"><span class="pre">string</span></code> <strong>default</strong>: <code class="docutils literal notranslate"><span class="pre">You</span> <span class="pre">must</span> <span class="pre">select</span> <span class="pre">at</span> <span class="pre">most</span> <span class="pre">{{</span> <span class="pre">limit</span> <span class="pre">}}</span> <span class="pre">choices.</span></code></p>
<p>This is the validation error message that’s displayed when the user chooses
too many options per the <a class="reference internal" href="#max">max</a> option.</p>
<p>You can use the following parameters in this message:</p>
<table class="docutils">
<colgroup>
<col style="width: 22%" />
<col style="width: 78%" />
</colgroup>
<thead>
<tr class="row-odd"><th class="head"><p>Parameter</p></th>
<th class="head"><p>Description</p></th>
</tr>
</thead>
<tbody>
<tr class="row-even"><td><p><code class="docutils literal notranslate"><span class="pre">{{</span> <span class="pre">choices</span> <span class="pre">}}</span></code></p></td>
<td><p>A comma-separated list of available choices</p></td>
</tr>
<tr class="row-odd"><td><p><code class="docutils literal notranslate"><span class="pre">{{</span> <span class="pre">value</span> <span class="pre">}}</span></code></p></td>
<td><p>The current (invalid) value</p></td>
</tr>
</tbody>
</table>
<div class="versionadded">
<p><span class="versionmodified">New in version 4.3: </span>The <code class="docutils literal notranslate"><span class="pre">{{</span> <span class="pre">choices</span> <span class="pre">}}</span></code> parameter was introduced in Symfony 4.3.</p>
</div>
</div>
<div class="section" id="message">
<h3>message</h3>
<p><strong>type</strong>: <code class="docutils literal notranslate"><span class="pre">string</span></code> <strong>default</strong>: <code class="docutils literal notranslate"><span class="pre">The</span> <span class="pre">value</span> <span class="pre">you</span> <span class="pre">selected</span> <span class="pre">is</span> <span class="pre">not</span> <span class="pre">a</span> <span class="pre">valid</span> <span class="pre">choice.</span></code></p>
<p>This is the message that you will receive if the <code class="docutils literal notranslate"><span class="pre">multiple</span></code> option is
set to <code class="docutils literal notranslate"><span class="pre">false</span></code> and the underlying value is not in the valid array of
choices.</p>
<p>You can use the following parameters in this message:</p>
<table class="docutils">
<colgroup>
<col style="width: 22%" />
<col style="width: 78%" />
</colgroup>
<thead>
<tr class="row-odd"><th class="head"><p>Parameter</p></th>
<th class="head"><p>Description</p></th>
</tr>
</thead>
<tbody>
<tr class="row-even"><td><p><code class="docutils literal notranslate"><span class="pre">{{</span> <span class="pre">choices</span> <span class="pre">}}</span></code></p></td>
<td><p>A comma-separated list of available choices</p></td>
</tr>
<tr class="row-odd"><td><p><code class="docutils literal notranslate"><span class="pre">{{</span> <span class="pre">value</span> <span class="pre">}}</span></code></p></td>
<td><p>The current (invalid) value</p></td>
</tr>
</tbody>
</table>
</div>
<div class="section" id="min">
<h3>min</h3>
<p><strong>type</strong>: <code class="docutils literal notranslate"><span class="pre">integer</span></code></p>
<p>If the <code class="docutils literal notranslate"><span class="pre">multiple</span></code> option is true, then you can use the <code class="docutils literal notranslate"><span class="pre">min</span></code> option
to force at least XX number of values to be selected. For example, if
<code class="docutils literal notranslate"><span class="pre">min</span></code> is 3, but the input array only contains 2 valid items, the validation
will fail.</p>
</div>
<div class="section" id="minmessage">
<h3>minMessage</h3>
<p><strong>type</strong>: <code class="docutils literal notranslate"><span class="pre">string</span></code> <strong>default</strong>: <code class="docutils literal notranslate"><span class="pre">You</span> <span class="pre">must</span> <span class="pre">select</span> <span class="pre">at</span> <span class="pre">least</span> <span class="pre">{{</span> <span class="pre">limit</span> <span class="pre">}}</span> <span class="pre">choices.</span></code></p>
<p>This is the validation error message that’s displayed when the user chooses
too few choices per the <a class="reference internal" href="#min">min</a> option.</p>
<p>You can use the following parameters in this message:</p>
<table class="docutils">
<colgroup>
<col style="width: 22%" />
<col style="width: 78%" />
</colgroup>
<thead>
<tr class="row-odd"><th class="head"><p>Parameter</p></th>
<th class="head"><p>Description</p></th>
</tr>
</thead>
<tbody>
<tr class="row-even"><td><p><code class="docutils literal notranslate"><span class="pre">{{</span> <span class="pre">choices</span> <span class="pre">}}</span></code></p></td>
<td><p>A comma-separated list of available choices</p></td>
</tr>
<tr class="row-odd"><td><p><code class="docutils literal notranslate"><span class="pre">{{</span> <span class="pre">value</span> <span class="pre">}}</span></code></p></td>
<td><p>The current (invalid) value</p></td>
</tr>
</tbody>
</table>
<div class="versionadded">
<p><span class="versionmodified">New in version 4.3: </span>The <code class="docutils literal notranslate"><span class="pre">{{</span> <span class="pre">choices</span> <span class="pre">}}</span></code> parameter was introduced in Symfony 4.3.</p>
</div>
</div>
<div class="section" id="multiple">
<h3>multiple</h3>
<p><strong>type</strong>: <code class="docutils literal notranslate"><span class="pre">boolean</span></code> <strong>default</strong>: <code class="docutils literal notranslate"><span class="pre">false</span></code></p>
<p>If this option is true, the input value is expected to be an array instead
of a single, scalar value. The constraint will check that each value of
the input array can be found in the array of valid choices. If even one
of the input values cannot be found, the validation will fail.</p>
</div>
<div class="section" id="multiplemessage">
<h3>multipleMessage</h3>
<p><strong>type</strong>: <code class="docutils literal notranslate"><span class="pre">string</span></code> <strong>default</strong>: <code class="docutils literal notranslate"><span class="pre">One</span> <span class="pre">or</span> <span class="pre">more</span> <span class="pre">of</span> <span class="pre">the</span> <span class="pre">given</span> <span class="pre">values</span> <span class="pre">is</span> <span class="pre">invalid.</span></code></p>
<p>This is the message that you will receive if the <code class="docutils literal notranslate"><span class="pre">multiple</span></code> option is
set to <code class="docutils literal notranslate"><span class="pre">true</span></code> and one of the values on the underlying array being checked
is not in the array of valid choices.</p>
<p>You can use the following parameters in this message:</p>
<table class="docutils">
<colgroup>
<col style="width: 19%" />
<col style="width: 81%" />
</colgroup>
<thead>
<tr class="row-odd"><th class="head"><p>Parameter</p></th>
<th class="head"><p>Description</p></th>
</tr>
</thead>
<tbody>
<tr class="row-even"><td><p><code class="docutils literal notranslate"><span class="pre">{{</span> <span class="pre">value</span> <span class="pre">}}</span></code></p></td>
<td><p>The current (invalid) value</p></td>
</tr>
</tbody>
</table>
</div>
<div class="section" id="payload">
<h3><code class="docutils literal notranslate"><span class="pre">payload</span></code></h3>
<p><strong>type</strong>: <code class="docutils literal notranslate"><span class="pre">mixed</span></code> <strong>default</strong>: <code class="docutils literal notranslate"><span class="pre">null</span></code></p>
<p>This option can be used to attach arbitrary domain-specific data to a constraint.
The configured payload is not used by the Validator component, but its processing
is completely up to you.</p>
<p>For example, you may want to use
<a class="reference internal" href="../../validation/severity.xhtml"><span class="doc">several error levels</span></a> to present failed
constraints differently in the front-end depending on the severity of the
error.</p>
</div>
</div>
</div>


          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>