<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <title>Using Parameters within a Dependency Injection Class</title>
    <link rel="stylesheet" href="../_static/epub.css" type="text/css" />
    <link rel="stylesheet" href="../_static/pygments.css" type="text/css" />
    <link rel="stylesheet" type="text/css" href="../_static/rtd_custom.css" /> 
  </head><body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <div class="section" id="using-parameters-within-a-dependency-injection-class">
<span id="index-0"></span><h1>Using Parameters within a Dependency Injection Class</h1>
<p>You have seen how to use configuration parameters within
<a class="reference internal" href="../service_container.xhtml#service-container-parameters"><span class="std std-ref">Symfony service containers</span></a>.
There are special cases such as when you want, for instance, to use the
<code class="docutils literal notranslate"><span class="pre">%kernel.debug%</span></code> parameter to make the services in your bundle enter
debug mode. For this case there is more work to do in order
to make the system understand the parameter value. By default,
your parameter <code class="docutils literal notranslate"><span class="pre">%kernel.debug%</span></code> will be treated as a string. Consider the
following example:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="c1">// inside Configuration class</span>
<span class="nv">$rootNode</span>
    <span class="o">-&gt;</span><span class="na">children</span><span class="p">()</span>
        <span class="o">-&gt;</span><span class="na">booleanNode</span><span class="p">(</span><span class="s1">&#39;logging&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">defaultValue</span><span class="p">(</span><span class="s1">&#39;%kernel.debug%&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">end</span><span class="p">()</span>
        <span class="c1">// ...</span>
    <span class="o">-&gt;</span><span class="na">end</span><span class="p">()</span>
<span class="p">;</span>

<span class="c1">// inside the Extension class</span>
<span class="nv">$config</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">processConfiguration</span><span class="p">(</span><span class="nv">$configuration</span><span class="p">,</span> <span class="nv">$configs</span><span class="p">);</span>
<span class="nb">var_dump</span><span class="p">(</span><span class="nv">$config</span><span class="p">[</span><span class="s1">&#39;logging&#39;</span><span class="p">]);</span>
</pre></div>
</div>
<p>Now, examine the results to see this closely:</p>
<div class="configuration-block">
<ul class="simple">
<li><p><em>YAML</em><div class="highlight-yaml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="l l-Scalar l-Scalar-Plain">my_bundle</span><span class="p p-Indicator">:</span>
    <span class="l l-Scalar l-Scalar-Plain">logging</span><span class="p p-Indicator">:</span> <span class="l l-Scalar l-Scalar-Plain">true</span>
    <span class="c1"># true, as expected</span>

<span class="l l-Scalar l-Scalar-Plain">my_bundle</span><span class="p p-Indicator">:</span>
    <span class="l l-Scalar l-Scalar-Plain">logging</span><span class="p p-Indicator">:</span> <span class="s">&#39;%kernel.debug%&#39;</span>
    <span class="c1"># true/false (depends on 2nd argument of the Kernel class),</span>
    <span class="c1"># as expected, because %kernel.debug% inside configuration</span>
    <span class="c1"># gets evaluated before being passed to the extension</span>

<span class="l l-Scalar l-Scalar-Plain">my_bundle</span><span class="p p-Indicator">:</span> <span class="l l-Scalar l-Scalar-Plain">~</span>
<span class="c1"># passes the string &quot;%kernel.debug%&quot;.</span>
<span class="c1"># Which is always considered as true.</span>
<span class="c1"># The Configurator does not know anything about</span>
<span class="c1"># &quot;%kernel.debug%&quot; being a parameter.</span>
</pre></div>
</td></tr></table></div>
</p></li>
<li><p><em>XML</em><div class="highlight-xml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span>
<span class="nt">&lt;container</span> <span class="na">xmlns=</span><span class="s">&quot;http://symfony.com/schema/dic/services&quot;</span>
    <span class="na">xmlns:my-bundle=</span><span class="s">&quot;http://example.org/schema/dic/my_bundle&quot;</span>
    <span class="na">xsi:schemaLocation=</span><span class="s">&quot;http://symfony.com/schema/dic/services</span>
<span class="s">        https://symfony.com/schema/dic/services/services-1.0.xsd</span>
<span class="s">        http://example.org/schema/dic/my_bundle</span>
<span class="s">        https://example.org/schema/dic/my_bundle/my_bundle-1.0.xsd&quot;</span><span class="nt">&gt;</span>

    <span class="nt">&lt;my-bundle:config</span> <span class="na">logging=</span><span class="s">&quot;true&quot;</span><span class="nt">/&gt;</span>
    <span class="c">&lt;!-- true, as expected --&gt;</span>

    <span class="nt">&lt;my-bundle:config</span> <span class="na">logging=</span><span class="s">&quot;%kernel.debug%&quot;</span><span class="nt">/&gt;</span>
    <span class="c">&lt;!-- true/false (depends on 2nd parameter of Kernel),</span>
<span class="c">         as expected, because %kernel.debug% inside configuration</span>
<span class="c">         gets evaluated before being passed to the extension --&gt;</span>

    <span class="nt">&lt;my-bundle:config/&gt;</span>
    <span class="c">&lt;!-- passes the string &quot;%kernel.debug%&quot;.</span>
<span class="c">         Which is always considered as true.</span>
<span class="c">         The Configurator does not know anything about</span>
<span class="c">         &quot;%kernel.debug%&quot; being a parameter. --&gt;</span>
<span class="nt">&lt;/container&gt;</span>
</pre></div>
</td></tr></table></div>
</p></li>
<li><p><em>PHP</em><div class="highlight-php notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="nv">$container</span><span class="o">-&gt;</span><span class="na">loadFromExtension</span><span class="p">(</span><span class="s1">&#39;my_bundle&#39;</span><span class="p">,</span> <span class="p">[</span>
        <span class="s1">&#39;logging&#39;</span> <span class="o">=&gt;</span> <span class="k">true</span><span class="p">,</span>
        <span class="c1">// true, as expected</span>
    <span class="p">)</span>
<span class="p">];</span>

<span class="nv">$container</span><span class="o">-&gt;</span><span class="na">loadFromExtension</span><span class="p">(</span><span class="s1">&#39;my_bundle&#39;</span><span class="p">,</span> <span class="p">[</span>
        <span class="s1">&#39;logging&#39;</span> <span class="o">=&gt;</span> <span class="s2">&quot;%kernel.debug%&quot;</span><span class="p">,</span>
        <span class="c1">// true/false (depends on 2nd parameter of Kernel),</span>
        <span class="c1">// as expected, because %kernel.debug% inside configuration</span>
        <span class="c1">// gets evaluated before being passed to the extension</span>
    <span class="p">)</span>
<span class="p">];</span>

<span class="nv">$container</span><span class="o">-&gt;</span><span class="na">loadFromExtension</span><span class="p">(</span><span class="s1">&#39;my_bundle&#39;</span><span class="p">);</span>
<span class="c1">// passes the string &quot;%kernel.debug%&quot;.</span>
<span class="c1">// Which is always considered as true.</span>
<span class="c1">// The Configurator does not know anything about</span>
<span class="c1">// &quot;%kernel.debug%&quot; being a parameter.</span>
</pre></div>
</td></tr></table></div>
</p></li>
</ul>
</div>
<p>In order to support this use case, the <code class="docutils literal notranslate"><span class="pre">Configuration</span></code> class has to
be injected with this parameter via the extension as follows:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="k">namespace</span> <span class="nx">App\DependencyInjection</span><span class="p">;</span>

<span class="k">use</span> <span class="nx">Symfony\Component\Config\Definition\Builder\TreeBuilder</span><span class="p">;</span>
<span class="k">use</span> <span class="nx">Symfony\Component\Config\Definition\ConfigurationInterface</span><span class="p">;</span>

<span class="k">class</span> <span class="nc">Configuration</span> <span class="k">implements</span> <span class="nx">ConfigurationInterface</span>
<span class="p">{</span>
    <span class="k">private</span> <span class="nv">$debug</span><span class="p">;</span>

    <span class="k">public</span> <span class="k">function</span>  <span class="fm">__construct</span><span class="p">(</span><span class="nv">$debug</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">debug</span> <span class="o">=</span> <span class="p">(</span><span class="nx">bool</span><span class="p">)</span> <span class="nv">$debug</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="k">public</span> <span class="k">function</span> <span class="nf">getConfigTreeBuilder</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="nv">$treeBuilder</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">TreeBuilder</span><span class="p">(</span><span class="s1">&#39;my_bundle&#39;</span><span class="p">);</span>

        <span class="nv">$treeBuilder</span><span class="o">-&gt;</span><span class="na">getRootNode</span><span class="p">()</span>
            <span class="o">-&gt;</span><span class="na">children</span><span class="p">()</span>
                <span class="c1">// ...</span>
                <span class="o">-&gt;</span><span class="na">booleanNode</span><span class="p">(</span><span class="s1">&#39;logging&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">defaultValue</span><span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">debug</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">end</span><span class="p">()</span>
                <span class="c1">// ...</span>
            <span class="o">-&gt;</span><span class="na">end</span><span class="p">()</span>
        <span class="p">;</span>

        <span class="k">return</span> <span class="nv">$treeBuilder</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>
</div>
<p>And set it in the constructor of <code class="docutils literal notranslate"><span class="pre">Configuration</span></code> via the <code class="docutils literal notranslate"><span class="pre">Extension</span></code> class:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="k">namespace</span> <span class="nx">App\DependencyInjection</span><span class="p">;</span>

<span class="k">use</span> <span class="nx">Symfony\Component\DependencyInjection\ContainerBuilder</span><span class="p">;</span>
<span class="k">use</span> <span class="nx">Symfony\Component\HttpKernel\DependencyInjection\Extension</span><span class="p">;</span>

<span class="k">class</span> <span class="nc">AppExtension</span> <span class="k">extends</span> <span class="nx">Extension</span>
<span class="p">{</span>
    <span class="c1">// ...</span>

    <span class="k">public</span> <span class="k">function</span> <span class="nf">getConfiguration</span><span class="p">(</span><span class="k">array</span> <span class="nv">$config</span><span class="p">,</span> <span class="nx">ContainerBuilder</span> <span class="nv">$container</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">return</span> <span class="k">new</span> <span class="nx">Configuration</span><span class="p">(</span><span class="nv">$container</span><span class="o">-&gt;</span><span class="na">getParameter</span><span class="p">(</span><span class="s1">&#39;kernel.debug&#39;</span><span class="p">));</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>
</div>
<div class="admonition tip">
<p class="admonition-title">Tip</p>
<p>There are some instances of <code class="docutils literal notranslate"><span class="pre">%kernel.debug%</span></code> usage within a
<code class="docutils literal notranslate"><span class="pre">Configurator</span></code> class for example in TwigBundle. However, this is because
the default parameter value is set by the Extension class.</p>
</div>
</div>


          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>