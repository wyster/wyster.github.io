<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <title>Functional Test specific Assertions</title>
    <link rel="stylesheet" href="../_static/epub.css" type="text/css" />
    <link rel="stylesheet" href="../_static/pygments.css" type="text/css" />
    <link rel="stylesheet" type="text/css" href="../_static/rtd_custom.css" /> 
  </head><body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <div class="section" id="functional-test-specific-assertions">
<span id="index-0"></span><h1>Functional Test specific Assertions</h1>
<p>When doing functional tests, sometimes you need to make complex assertions in
order to check whether the <code class="docutils literal notranslate"><span class="pre">Request</span></code>, the <code class="docutils literal notranslate"><span class="pre">Response</span></code> or the <code class="docutils literal notranslate"><span class="pre">Crawler</span></code>
contain the expected information to make your test succeed.</p>
<p>The following example uses plain PHPUnit to assert that the response redirects
to a certain URL:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">assertSame</span><span class="p">(</span><span class="mi">301</span><span class="p">,</span> <span class="nv">$client</span><span class="o">-&gt;</span><span class="na">getResponse</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">getStatusCode</span><span class="p">());</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="na">assertSame</span><span class="p">(</span><span class="s1">&#39;https://example.com&#39;</span><span class="p">,</span> <span class="nv">$client</span><span class="o">-&gt;</span><span class="na">getResponse</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">headers</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">(</span><span class="s1">&#39;Location&#39;</span><span class="p">));</span>
</pre></div>
</div>
<p>This is the same example using the assertions provided by Symfony:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">assertResponseRedirects</span><span class="p">(</span><span class="s1">&#39;https://example.com&#39;</span><span class="p">,</span> <span class="mi">301</span><span class="p">);</span>
</pre></div>
</div>
<div class="section" id="assertions-reference">
<h2>Assertions Reference</h2>
<div class="section" id="response">
<h3>Response</h3>
<div class="admonition note">
<p class="admonition-title">Note</p>
<p>The following assertions only work if a request has been made with the
<code class="docutils literal notranslate"><span class="pre">Client</span></code> in a test case extending the <code class="docutils literal notranslate"><span class="pre">WebTestCase</span></code> class.</p>
</div>
<ul class="simple">
<li><p><code class="docutils literal notranslate"><span class="pre">assertResponseIsSuccessful()</span></code></p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">assertResponseStatusCodeSame()</span></code></p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">assertResponseRedirects()</span></code></p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">assertResponseHasHeader()</span></code></p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">assertResponseNotHasHeader()</span></code></p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">assertResponseHeaderSame()</span></code></p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">assertResponseHeaderNotSame()</span></code></p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">assertResponseHasCookie()</span></code></p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">assertResponseNotHasCookie()</span></code></p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">assertResponseCookieValueSame()</span></code></p></li>
</ul>
</div>
<div class="section" id="request">
<h3>Request</h3>
<div class="admonition note">
<p class="admonition-title">Note</p>
<p>The following assertions only work if a request has been made with the
<code class="docutils literal notranslate"><span class="pre">Client</span></code> in a test case extending the <code class="docutils literal notranslate"><span class="pre">WebTestCase</span></code> class.</p>
</div>
<ul class="simple">
<li><p><code class="docutils literal notranslate"><span class="pre">assertRequestAttributeValueSame()</span></code></p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">assertRouteSame()</span></code></p></li>
</ul>
</div>
<div class="section" id="browser">
<h3>Browser</h3>
<div class="admonition note">
<p class="admonition-title">Note</p>
<p>The following assertions only work if a request has been made with the
<code class="docutils literal notranslate"><span class="pre">Client</span></code> in a test case extending the <code class="docutils literal notranslate"><span class="pre">WebTestCase</span></code> class.</p>
</div>
<ul class="simple">
<li><p><code class="docutils literal notranslate"><span class="pre">assertBrowserHasCookie()</span></code></p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">assertBrowserNotHasCookie()</span></code></p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">assertBrowserCookieValueSame()</span></code></p></li>
</ul>
</div>
<div class="section" id="crawler">
<h3>Crawler</h3>
<div class="admonition note">
<p class="admonition-title">Note</p>
<p>The following assertions only work if a request has been made with the
<code class="docutils literal notranslate"><span class="pre">Client</span></code> in a test case extending the <code class="docutils literal notranslate"><span class="pre">WebTestCase</span></code> class. In addition,
they are not available when using <a class="reference external" href="https://github.com/symfony/panther">symfony/panther</a><span class="link-target"> [https://github.com/symfony/panther]</span> for end-to-end testing.</p>
</div>
<ul class="simple">
<li><p><code class="docutils literal notranslate"><span class="pre">assertSelectorExists()</span></code></p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">assertSelectorNotExists()</span></code></p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">assertSelectorTextContains()</span></code> (note: it only checks the first selector occurrence)</p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">assertSelectorTextSame()</span></code> (note: it only checks the first selector occurrence)</p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">assertSelectorTextNotContains()</span></code> (note: it only checks the first selector occurrence)</p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">assertPageTitleSame()</span></code></p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">assertPageTitleContains()</span></code></p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">assertInputValueSame()</span></code></p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">assertInputValueNotSame()</span></code></p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">assertCheckboxChecked()</span></code></p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">assertCheckboxNotChecked()</span></code></p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">assertFormValue()</span></code></p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">assertNoFormValue()</span></code></p></li>
</ul>
<div class="versionadded">
<p><span class="versionmodified">New in version 5.2: </span>The <code class="docutils literal notranslate"><span class="pre">assertCheckboxChecked()</span></code>, <code class="docutils literal notranslate"><span class="pre">assertCheckboxNotChecked()</span></code>,
<code class="docutils literal notranslate"><span class="pre">assertFormValue()</span></code> and <code class="docutils literal notranslate"><span class="pre">assertNoFormValue()</span></code> methods were introduced
in Symfony 5.2.</p>
</div>
</div>
<div class="section" id="mailer">
<h3>Mailer</h3>
<div class="versionadded">
<p><span class="versionmodified">New in version 5.1: </span>Starting from Symfony 5.1, the following assertions no longer require to make
a request with the <code class="docutils literal notranslate"><span class="pre">Client</span></code> in a test case extending the <code class="docutils literal notranslate"><span class="pre">WebTestCase</span></code> class.</p>
</div>
<ul class="simple">
<li><p><code class="docutils literal notranslate"><span class="pre">assertEmailCount()</span></code></p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">assertQueuedEmailCount()</span></code></p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">assertEmailIsQueued()</span></code></p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">assertEmailIsNotQueued()</span></code></p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">assertEmailAttachementCount()</span></code></p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">assertEmailTextBodyContains()</span></code></p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">assertEmailTextBodyNotContains()</span></code></p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">assertEmailHtmlBodyContains()</span></code></p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">assertEmailHtmlBodyNotContains()</span></code></p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">assertEmailHasHeader()</span></code></p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">assertEmailNotHasHeader()</span></code></p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">assertEmailHeaderSame()</span></code></p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">assertEmailHeaderNotSame()</span></code></p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">assertEmailAddressContains()</span></code></p></li>
</ul>
</div>
</div>
</div>


          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>