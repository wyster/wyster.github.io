<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <title>How to Use the Profiler in a Functional Test</title>
    <link rel="stylesheet" href="../_static/epub.css" type="text/css" />
    <link rel="stylesheet" href="../_static/pygments.css" type="text/css" />
    <link rel="stylesheet" type="text/css" href="../_static/rtd_custom.css" /> 
  </head><body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <div class="section" id="how-to-use-the-profiler-in-a-functional-test">
<span id="index-0"></span><h1>How to Use the Profiler in a Functional Test</h1>
<p>It’s highly recommended that a functional test only tests the Response. But if
you write functional tests that monitor your production servers, you might
want to write tests on the profiling data as it gives you a great way to check
various things and enforce some metrics.</p>
<div class="section" id="enabling-the-profiler-in-tests">
<span id="speeding-up-tests-by-not-collecting-profiler-data"></span><h2>Enabling the Profiler in Tests</h2>
<p>Collecting data with <a class="reference internal" href="../profiler.xhtml"><span class="doc">the Symfony Profiler</span></a> can slow down your
tests significantly. That’s why Symfony disables it by default:</p>
<div class="configuration-block">
<ul class="simple">
<li><p><em>YAML</em><div class="highlight-yaml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1"># config/packages/test/web_profiler.yaml</span>

<span class="c1"># ...</span>
<span class="l l-Scalar l-Scalar-Plain">framework</span><span class="p p-Indicator">:</span>
    <span class="l l-Scalar l-Scalar-Plain">profiler</span><span class="p p-Indicator">:</span> <span class="p p-Indicator">{</span> <span class="nv">enabled</span><span class="p p-Indicator">:</span> <span class="nv">true</span><span class="p p-Indicator">,</span> <span class="nv">collect</span><span class="p p-Indicator">:</span> <span class="nv">false</span> <span class="p p-Indicator">}</span>
</pre></div>
</td></tr></table></div>
</p></li>
<li><p><em>XML</em><div class="highlight-xml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c">&lt;!-- config/packages/test/web_profiler.xml --&gt;</span>
<span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span>
<span class="nt">&lt;container</span> <span class="na">xmlns=</span><span class="s">&quot;http://symfony.com/schema/dic/services&quot;</span>
    <span class="na">xmlns:framework=</span><span class="s">&quot;http://symfony.com/schema/dic/symfony&quot;</span>
    <span class="na">xmlns:xsi=</span><span class="s">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span>
    <span class="na">xsi:schemaLocation=</span><span class="s">&quot;http://symfony.com/schema/dic/services https://symfony.com/schema/dic/services/services-1.0.xsd</span>
<span class="s">                http://symfony.com/schema/dic/symfony https://symfony.com/schema/dic/symfony/symfony-1.0.xsd&quot;</span><span class="nt">&gt;</span>

    <span class="c">&lt;!-- ... --&gt;</span>

    <span class="nt">&lt;framework:config&gt;</span>
        <span class="nt">&lt;framework:profiler</span> <span class="na">enabled=</span><span class="s">&quot;true&quot;</span> <span class="na">collect=</span><span class="s">&quot;false&quot;</span><span class="nt">/&gt;</span>
    <span class="nt">&lt;/framework:config&gt;</span>
<span class="nt">&lt;/container&gt;</span>
</pre></div>
</td></tr></table></div>
</p></li>
<li><p><em>PHP</em><div class="highlight-php notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1">// config/packages/test/web_profiler.php</span>

<span class="c1">// ...</span>
<span class="nv">$container</span><span class="o">-&gt;</span><span class="na">loadFromExtension</span><span class="p">(</span><span class="s1">&#39;framework&#39;</span><span class="p">,</span> <span class="p">[</span>
    <span class="c1">// ...</span>
    <span class="s1">&#39;profiler&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
        <span class="s1">&#39;enabled&#39;</span> <span class="o">=&gt;</span> <span class="k">true</span><span class="p">,</span>
        <span class="s1">&#39;collect&#39;</span> <span class="o">=&gt;</span> <span class="k">false</span><span class="p">,</span>
    <span class="p">],</span>
<span class="p">]);</span>
</pre></div>
</td></tr></table></div>
</p></li>
</ul>
</div>
<p>Setting <code class="docutils literal notranslate"><span class="pre">collect</span></code> to <code class="docutils literal notranslate"><span class="pre">true</span></code> enables the profiler for all tests. However, if
you need the profiler only in a few tests, you can keep it disabled globally and
enable the profiler individually on each test by calling
<code class="docutils literal notranslate"><span class="pre">$client-&gt;enableProfiler()</span></code>.</p>
</div>
<div class="section" id="testing-the-profiler-information">
<h2>Testing the Profiler Information</h2>
<p>The data collected by the Symfony Profiler can be used to check the number of
database calls, the time spent in the framework, etc. All this information is
provided by the collectors obtained through the <code class="docutils literal notranslate"><span class="pre">$client-&gt;getProfile()</span></code> call:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="c1">// tests/Controller/LuckyControllerTest.php</span>
<span class="k">namespace</span> <span class="nx">App\Tests\Controller</span><span class="p">;</span>

<span class="k">use</span> <span class="nx">Symfony\Bundle\FrameworkBundle\Test\WebTestCase</span><span class="p">;</span>

<span class="k">class</span> <span class="nc">LuckyControllerTest</span> <span class="k">extends</span> <span class="nx">WebTestCase</span>
<span class="p">{</span>
    <span class="k">public</span> <span class="k">function</span> <span class="nf">testRandomNumber</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="nv">$client</span> <span class="o">=</span> <span class="k">static</span><span class="o">::</span><span class="na">createClient</span><span class="p">();</span>

        <span class="c1">// enable the profiler only for the next request (if you make</span>
        <span class="c1">// new requests, you must call this method again)</span>
        <span class="c1">// (it does nothing if the profiler is not available)</span>
        <span class="nv">$client</span><span class="o">-&gt;</span><span class="na">enableProfiler</span><span class="p">();</span>

        <span class="nv">$crawler</span> <span class="o">=</span> <span class="nv">$client</span><span class="o">-&gt;</span><span class="na">request</span><span class="p">(</span><span class="s1">&#39;GET&#39;</span><span class="p">,</span> <span class="s1">&#39;/lucky/number&#39;</span><span class="p">);</span>

        <span class="c1">// ... write some assertions about the Response</span>

        <span class="c1">// check that the profiler is enabled</span>
        <span class="k">if</span> <span class="p">(</span><span class="nv">$profile</span> <span class="o">=</span> <span class="nv">$client</span><span class="o">-&gt;</span><span class="na">getProfile</span><span class="p">())</span> <span class="p">{</span>
            <span class="c1">// check the number of requests</span>
            <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">assertLessThan</span><span class="p">(</span>
                <span class="mi">10</span><span class="p">,</span>
                <span class="nv">$profile</span><span class="o">-&gt;</span><span class="na">getCollector</span><span class="p">(</span><span class="s1">&#39;db&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">getQueryCount</span><span class="p">()</span>
            <span class="p">);</span>

            <span class="c1">// check the time spent in the framework</span>
            <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">assertLessThan</span><span class="p">(</span>
                <span class="mi">500</span><span class="p">,</span>
                <span class="nv">$profile</span><span class="o">-&gt;</span><span class="na">getCollector</span><span class="p">(</span><span class="s1">&#39;time&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">getDuration</span><span class="p">()</span>
            <span class="p">);</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>
</div>
<p>If a test fails because of profiling data (too many DB queries for instance),
you might want to use the Web Profiler to analyze the request after the tests
finish. It can be achieved by embedding the token in the error message:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">assertLessThan</span><span class="p">(</span>
    <span class="mi">30</span><span class="p">,</span>
    <span class="nv">$profile</span><span class="o">-&gt;</span><span class="na">getCollector</span><span class="p">(</span><span class="s1">&#39;db&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">getQueryCount</span><span class="p">(),</span>
    <span class="nb">sprintf</span><span class="p">(</span>
        <span class="s1">&#39;Checks that query count is less than 30 (token %s)&#39;</span><span class="p">,</span>
        <span class="nv">$profile</span><span class="o">-&gt;</span><span class="na">getToken</span><span class="p">()</span>
    <span class="p">)</span>
<span class="p">);</span>
</pre></div>
</div>
<div class="admonition note">
<p class="admonition-title">Note</p>
<p>The profiler information is available even if you <a class="reference internal" href="insulating_clients.xhtml"><span class="doc">insulate the client</span></a>
or if you use an HTTP layer for your tests.</p>
</div>
<div class="admonition tip">
<p class="admonition-title">Tip</p>
<p>Read the API for built-in <a class="reference internal" href="../profiler/data_collector.xhtml"><span class="doc">data collectors</span></a>
to learn more about their interfaces.</p>
</div>
</div>
</div>


          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>