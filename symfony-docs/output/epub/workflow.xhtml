<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <title>Workflow</title>
    <link rel="stylesheet" href="_static/epub.css" type="text/css" />
    <link rel="stylesheet" href="_static/pygments.css" type="text/css" />
    <link rel="stylesheet" type="text/css" href="_static/rtd_custom.css" /> 
  </head><body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <div class="section" id="workflow">
<h1>Workflow</h1>
<p>Using the Workflow component inside a Symfony application requires to know first
some basic theory and concepts about workflows and state machines.
<a class="reference internal" href="workflow/workflow-and-state-machine.xhtml"><span class="doc">Read this article</span></a> for a quick overview.</p>
<div class="section" id="installation">
<h2>Installation</h2>
<p>In applications using <a class="reference internal" href="setup.xhtml#symfony-flex"><span class="std std-ref">Symfony Flex</span></a>, run this command to
install the workflow feature before using it:</p>
<div class="highlight-terminal notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre>1</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="gp">$</span> composer require symfony/workflow
</pre></div>
</td></tr></table></div>
</div>
<div class="section" id="configuration">
<h2>Configuration</h2>
<p>To see all configuration options, if you are using the component inside a
Symfony project run this command:</p>
<div class="highlight-terminal notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre>1</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="gp">$</span> php bin/console config:dump-reference framework workflows
</pre></div>
</td></tr></table></div>
</div>
<div class="section" id="creating-a-workflow">
<h2>Creating a Workflow</h2>
<p>A workflow is a process or a lifecycle that your objects go through. Each
step or stage in the process is called a <em>place</em>. You do also define <em>transitions</em>
to that describes the action to get from one place to another.</p>
<img alt="_images/states_transitions.png" src="_images/states_transitions.png" />
<p>A set of places and transitions creates a <strong>definition</strong>. A workflow needs
a <code class="docutils literal notranslate"><span class="pre">Definition</span></code> and a way to write the states to the objects (i.e. an
instance of a <code class="docutils literal notranslate"><a class="reference external" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Workflow/MarkingStore/MarkingStoreInterface.php" title="Symfony\Component\Workflow\MarkingStore\MarkingStoreInterface"><span class="pre">MarkingStoreInterface</span></a><span class="link-target"> <span class="pre">[https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Workflow/MarkingStore/MarkingStoreInterface.php]</span></span></code>.)</p>
<p>Consider the following example for a blog post. A post can have these places:
<code class="docutils literal notranslate"><span class="pre">draft</span></code>, <code class="docutils literal notranslate"><span class="pre">reviewed</span></code>, <code class="docutils literal notranslate"><span class="pre">rejected</span></code>, <code class="docutils literal notranslate"><span class="pre">published</span></code>. You can define the workflow
like this:</p>
<div class="configuration-block">
<ul class="simple">
<li><p><em>YAML</em><div class="highlight-yaml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1"># config/packages/workflow.yaml</span>
<span class="l l-Scalar l-Scalar-Plain">framework</span><span class="p p-Indicator">:</span>
    <span class="l l-Scalar l-Scalar-Plain">workflows</span><span class="p p-Indicator">:</span>
        <span class="l l-Scalar l-Scalar-Plain">blog_publishing</span><span class="p p-Indicator">:</span>
            <span class="l l-Scalar l-Scalar-Plain">type</span><span class="p p-Indicator">:</span> <span class="s">&#39;workflow&#39;</span> <span class="c1"># or &#39;state_machine&#39;</span>
            <span class="l l-Scalar l-Scalar-Plain">audit_trail</span><span class="p p-Indicator">:</span>
                <span class="l l-Scalar l-Scalar-Plain">enabled</span><span class="p p-Indicator">:</span> <span class="l l-Scalar l-Scalar-Plain">true</span>
            <span class="l l-Scalar l-Scalar-Plain">marking_store</span><span class="p p-Indicator">:</span>
                <span class="l l-Scalar l-Scalar-Plain">type</span><span class="p p-Indicator">:</span> <span class="s">&#39;method&#39;</span>
                <span class="l l-Scalar l-Scalar-Plain">property</span><span class="p p-Indicator">:</span> <span class="s">&#39;currentPlace&#39;</span>
            <span class="l l-Scalar l-Scalar-Plain">supports</span><span class="p p-Indicator">:</span>
                <span class="p p-Indicator">-</span> <span class="l l-Scalar l-Scalar-Plain">App\Entity\BlogPost</span>
            <span class="l l-Scalar l-Scalar-Plain">initial_marking</span><span class="p p-Indicator">:</span> <span class="l l-Scalar l-Scalar-Plain">draft</span>
            <span class="l l-Scalar l-Scalar-Plain">places</span><span class="p p-Indicator">:</span>
                <span class="p p-Indicator">-</span> <span class="l l-Scalar l-Scalar-Plain">draft</span>
                <span class="p p-Indicator">-</span> <span class="l l-Scalar l-Scalar-Plain">reviewed</span>
                <span class="p p-Indicator">-</span> <span class="l l-Scalar l-Scalar-Plain">rejected</span>
                <span class="p p-Indicator">-</span> <span class="l l-Scalar l-Scalar-Plain">published</span>
            <span class="l l-Scalar l-Scalar-Plain">transitions</span><span class="p p-Indicator">:</span>
                <span class="l l-Scalar l-Scalar-Plain">to_review</span><span class="p p-Indicator">:</span>
                    <span class="l l-Scalar l-Scalar-Plain">from</span><span class="p p-Indicator">:</span> <span class="l l-Scalar l-Scalar-Plain">draft</span>
                    <span class="l l-Scalar l-Scalar-Plain">to</span><span class="p p-Indicator">:</span>   <span class="l l-Scalar l-Scalar-Plain">reviewed</span>
                <span class="l l-Scalar l-Scalar-Plain">publish</span><span class="p p-Indicator">:</span>
                    <span class="l l-Scalar l-Scalar-Plain">from</span><span class="p p-Indicator">:</span> <span class="l l-Scalar l-Scalar-Plain">reviewed</span>
                    <span class="l l-Scalar l-Scalar-Plain">to</span><span class="p p-Indicator">:</span>   <span class="l l-Scalar l-Scalar-Plain">published</span>
                <span class="l l-Scalar l-Scalar-Plain">reject</span><span class="p p-Indicator">:</span>
                    <span class="l l-Scalar l-Scalar-Plain">from</span><span class="p p-Indicator">:</span> <span class="l l-Scalar l-Scalar-Plain">reviewed</span>
                    <span class="l l-Scalar l-Scalar-Plain">to</span><span class="p p-Indicator">:</span>   <span class="l l-Scalar l-Scalar-Plain">rejected</span>
</pre></div>
</td></tr></table></div>
</p></li>
<li><p><em>XML</em><div class="highlight-xml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c">&lt;!-- config/packages/workflow.xml --&gt;</span>
<span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span>
<span class="nt">&lt;container</span> <span class="na">xmlns=</span><span class="s">&quot;http://symfony.com/schema/dic/services&quot;</span>
    <span class="na">xmlns:xsi=</span><span class="s">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span>
    <span class="na">xmlns:framework=</span><span class="s">&quot;http://symfony.com/schema/dic/symfony&quot;</span>
    <span class="na">xsi:schemaLocation=</span><span class="s">&quot;http://symfony.com/schema/dic/services</span>
<span class="s">    https://symfony.com/schema/dic/services/services-1.0.xsd</span>
<span class="s">    http://symfony.com/schema/dic/symfony</span>
<span class="s">    https://symfony.com/schema/dic/symfony/symfony-1.0.xsd&quot;</span><span class="nt">&gt;</span>

    <span class="nt">&lt;framework:config&gt;</span>
        <span class="c">&lt;!-- or type=&quot;state_machine&quot; --&gt;</span>
        <span class="nt">&lt;framework:workflow</span> <span class="na">name=</span><span class="s">&quot;blog_publishing&quot;</span> <span class="na">type=</span><span class="s">&quot;workflow&quot;</span><span class="nt">&gt;</span>
            <span class="nt">&lt;framework:audit-trail</span> <span class="na">enabled=</span><span class="s">&quot;true&quot;</span><span class="nt">/&gt;</span>
            <span class="nt">&lt;framework:marking-store</span> <span class="na">type=</span><span class="s">&quot;single_state&quot;</span><span class="nt">&gt;</span>
                <span class="nt">&lt;framework:argument&gt;</span>currentPlace<span class="nt">&lt;/framework:argument&gt;</span>
            <span class="nt">&lt;/framework:marking-store&gt;</span>
            <span class="nt">&lt;framework:support&gt;</span>App\Entity\BlogPost<span class="nt">&lt;/framework:support&gt;</span>
            <span class="nt">&lt;framework:initial-marking&gt;</span>draft<span class="nt">&lt;/framework:initial-marking&gt;</span>
            <span class="nt">&lt;framework:place&gt;</span>draft<span class="nt">&lt;/framework:place&gt;</span>
            <span class="nt">&lt;framework:place&gt;</span>reviewed<span class="nt">&lt;/framework:place&gt;</span>
            <span class="nt">&lt;framework:place&gt;</span>rejected<span class="nt">&lt;/framework:place&gt;</span>
            <span class="nt">&lt;framework:place&gt;</span>published<span class="nt">&lt;/framework:place&gt;</span>
            <span class="nt">&lt;framework:transition</span> <span class="na">name=</span><span class="s">&quot;to_review&quot;</span><span class="nt">&gt;</span>
                <span class="nt">&lt;framework:from&gt;</span>draft<span class="nt">&lt;/framework:from&gt;</span>
                <span class="nt">&lt;framework:to&gt;</span>reviewed<span class="nt">&lt;/framework:to&gt;</span>
            <span class="nt">&lt;/framework:transition&gt;</span>
            <span class="nt">&lt;framework:transition</span> <span class="na">name=</span><span class="s">&quot;publish&quot;</span><span class="nt">&gt;</span>
                <span class="nt">&lt;framework:from&gt;</span>reviewed<span class="nt">&lt;/framework:from&gt;</span>
                <span class="nt">&lt;framework:to&gt;</span>published<span class="nt">&lt;/framework:to&gt;</span>
            <span class="nt">&lt;/framework:transition&gt;</span>
            <span class="nt">&lt;framework:transition</span> <span class="na">name=</span><span class="s">&quot;reject&quot;</span><span class="nt">&gt;</span>
                <span class="nt">&lt;framework:from&gt;</span>reviewed<span class="nt">&lt;/framework:from&gt;</span>
                <span class="nt">&lt;framework:to&gt;</span>rejected<span class="nt">&lt;/framework:to&gt;</span>
            <span class="nt">&lt;/framework:transition&gt;</span>
        <span class="nt">&lt;/framework:workflow&gt;</span>
    <span class="nt">&lt;/framework:config&gt;</span>
<span class="nt">&lt;/container&gt;</span>
</pre></div>
</td></tr></table></div>
</p></li>
<li><p><em>PHP</em><div class="highlight-php notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1">// config/packages/workflow.php</span>
<span class="k">use</span> <span class="nx">App\Entity\BlogPost</span><span class="p">;</span>

<span class="nv">$container</span><span class="o">-&gt;</span><span class="na">loadFromExtension</span><span class="p">(</span><span class="s1">&#39;framework&#39;</span><span class="p">,</span> <span class="p">[</span>
    <span class="s1">&#39;workflows&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
        <span class="s1">&#39;blog_publishing&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
            <span class="s1">&#39;type&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;workflow&#39;</span><span class="p">,</span> <span class="c1">// or &#39;state_machine&#39;</span>
            <span class="s1">&#39;audit_trail&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
                <span class="s1">&#39;enabled&#39;</span> <span class="o">=&gt;</span> <span class="k">true</span>
            <span class="p">],</span>
            <span class="s1">&#39;marking_store&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
                <span class="s1">&#39;type&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;method&#39;</span><span class="p">,</span>
                <span class="s1">&#39;property&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;currentPlace&#39;</span><span class="p">,</span>
            <span class="p">],</span>
            <span class="s1">&#39;supports&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span><span class="nx">BlogPost</span><span class="o">::</span><span class="na">class</span><span class="p">],</span>
            <span class="s1">&#39;initial_marking&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;draft&#39;</span><span class="p">,</span>
            <span class="s1">&#39;places&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
                <span class="s1">&#39;draft&#39;</span><span class="p">,</span>
                <span class="s1">&#39;reviewed&#39;</span><span class="p">,</span>
                <span class="s1">&#39;rejected&#39;</span><span class="p">,</span>
                <span class="s1">&#39;published&#39;</span><span class="p">,</span>
            <span class="p">],</span>
            <span class="s1">&#39;transitions&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
                <span class="s1">&#39;to_review&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
                    <span class="s1">&#39;from&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;draft&#39;</span><span class="p">,</span>
                    <span class="s1">&#39;to&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;reviewed&#39;</span><span class="p">,</span>
                <span class="p">],</span>
                <span class="s1">&#39;publish&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
                    <span class="s1">&#39;from&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;reviewed&#39;</span><span class="p">,</span>
                    <span class="s1">&#39;to&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;published&#39;</span><span class="p">,</span>
                <span class="p">],</span>
                <span class="s1">&#39;reject&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
                    <span class="s1">&#39;from&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;reviewed&#39;</span><span class="p">,</span>
                    <span class="s1">&#39;to&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;rejected&#39;</span><span class="p">,</span>
                <span class="p">],</span>
            <span class="p">],</span>
        <span class="p">],</span>
    <span class="p">],</span>
<span class="p">]);</span>
</pre></div>
</td></tr></table></div>
</p></li>
</ul>
</div>
<div class="admonition tip">
<p class="admonition-title">Tip</p>
<p>If you are creating your first workflows, consider using the <code class="docutils literal notranslate"><span class="pre">workflow:dump</span></code>
command to <a class="reference internal" href="workflow/dumping-workflows.xhtml"><span class="doc">debug the workflow contents</span></a>.</p>
</div>
<p>The configured property will be used via it’s implemented getter/setter methods by the marking store:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="c1">// src/Entity/BlogPost.php</span>
<span class="k">namespace</span> <span class="nx">App\Entity</span><span class="p">;</span>

<span class="k">class</span> <span class="nc">BlogPost</span>
<span class="p">{</span>
    <span class="c1">// the configured marking store property must be declared</span>
    <span class="k">private</span> <span class="nv">$currentPlace</span><span class="p">;</span>
    <span class="k">private</span> <span class="nv">$title</span><span class="p">;</span>
    <span class="k">private</span> <span class="nv">$content</span><span class="p">;</span>

    <span class="c1">// getter/setter methods must exist for property access by the marking store</span>
    <span class="k">public</span> <span class="k">function</span> <span class="nf">getCurrentPlace</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">currentPlace</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="k">public</span> <span class="k">function</span> <span class="nf">setCurrentPlace</span><span class="p">(</span><span class="nv">$currentPlace</span><span class="p">,</span> <span class="nv">$context</span> <span class="o">=</span> <span class="p">[])</span>
    <span class="p">{</span>
        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">currentPlace</span> <span class="o">=</span> <span class="nv">$currentPlace</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>
</div>
<div class="admonition note">
<p class="admonition-title">Note</p>
<p>The marking store type could be “multiple_state” or “single_state”. A single
state marking store does not support a model being on multiple places at the
same time. This means a “workflow” must use a “multiple_state” marking store
and a “state_machine” must use a “single_state” marking store. Symfony
configures the marking store according to the “type” by default, so it’s
preferable to not configure it.</p>
<p>A single state marking store uses a <code class="docutils literal notranslate"><span class="pre">string</span></code> to store the data. A multiple
state marking store uses an <code class="docutils literal notranslate"><span class="pre">array</span></code> to store the data.</p>
</div>
<div class="admonition tip">
<p class="admonition-title">Tip</p>
<p>The <code class="docutils literal notranslate"><span class="pre">marking_store.type</span></code> (the default value depends on the <code class="docutils literal notranslate"><span class="pre">type</span></code> value)
and <code class="docutils literal notranslate"><span class="pre">property</span></code> (default value <code class="docutils literal notranslate"><span class="pre">['marking']</span></code>) attributes of the
<code class="docutils literal notranslate"><span class="pre">marking_store</span></code> option are optional. If omitted, their default values will
be used. It’s highly recommended to use the default value.</p>
</div>
<div class="admonition tip">
<p class="admonition-title">Tip</p>
<p>Setting the <code class="docutils literal notranslate"><span class="pre">audit_trail.enabled</span></code> option to <code class="docutils literal notranslate"><span class="pre">true</span></code> makes the application
generate detailed log messages for the workflow activity.</p>
</div>
<p>With this workflow named <code class="docutils literal notranslate"><span class="pre">blog_publishing</span></code>, you can get help to decide
what actions are allowed on a blog post:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="k">use</span> <span class="nx">App\Entity\BlogPost</span><span class="p">;</span>
<span class="k">use</span> <span class="nx">Symfony\Component\Workflow\Exception\LogicException</span><span class="p">;</span>

<span class="nv">$post</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">BlogPost</span><span class="p">();</span>

<span class="nv">$workflow</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">container</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">(</span><span class="s1">&#39;workflow.blog_publishing&#39;</span><span class="p">);</span>
<span class="nv">$workflow</span><span class="o">-&gt;</span><span class="na">can</span><span class="p">(</span><span class="nv">$post</span><span class="p">,</span> <span class="s1">&#39;publish&#39;</span><span class="p">);</span> <span class="c1">// False</span>
<span class="nv">$workflow</span><span class="o">-&gt;</span><span class="na">can</span><span class="p">(</span><span class="nv">$post</span><span class="p">,</span> <span class="s1">&#39;to_review&#39;</span><span class="p">);</span> <span class="c1">// True</span>

<span class="c1">// Update the currentState on the post</span>
<span class="k">try</span> <span class="p">{</span>
    <span class="nv">$workflow</span><span class="o">-&gt;</span><span class="na">apply</span><span class="p">(</span><span class="nv">$post</span><span class="p">,</span> <span class="s1">&#39;to_review&#39;</span><span class="p">);</span>
<span class="p">}</span> <span class="k">catch</span> <span class="p">(</span><span class="nx">LogicException</span> <span class="nv">$exception</span><span class="p">)</span> <span class="p">{</span>
    <span class="c1">// ...</span>
<span class="p">}</span>

<span class="c1">// See all the available transitions for the post in the current state</span>
<span class="nv">$transitions</span> <span class="o">=</span> <span class="nv">$workflow</span><span class="o">-&gt;</span><span class="na">getEnabledTransitions</span><span class="p">(</span><span class="nv">$post</span><span class="p">);</span>
</pre></div>
</div>
</div>
<div class="section" id="accessing-the-workflow-in-a-class">
<h2>Accessing the Workflow in a Class</h2>
<p>You can use the workflow inside a class by using
<a class="reference internal" href="service_container/autowiring.xhtml"><span class="doc">service autowiring</span></a> and using
<code class="docutils literal notranslate"><span class="pre">camelCased</span> <span class="pre">workflow</span> <span class="pre">name</span> <span class="pre">+</span> <span class="pre">Workflow</span></code> as parameter name:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="k">use</span> <span class="nx">App\Entity\BlogPost</span><span class="p">;</span>
<span class="k">use</span> <span class="nx">Symfony\Component\Workflow\WorkflowInterface</span><span class="p">;</span>

<span class="k">class</span> <span class="nc">MyClass</span>
<span class="p">{</span>
    <span class="k">private</span> <span class="nv">$blogPublishingWorkflow</span><span class="p">;</span>

    <span class="c1">// this injects the blog_publishing workflow configured before</span>
    <span class="k">public</span> <span class="k">function</span> <span class="fm">__construct</span><span class="p">(</span><span class="nx">WorkflowInterface</span> <span class="nv">$blogPublishingWorkflow</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">blogPublishingWorkflow</span> <span class="o">=</span> <span class="nv">$blogPublishingWorkflow</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="k">public</span> <span class="k">function</span> <span class="nf">toReview</span><span class="p">(</span><span class="nx">BlogPost</span> <span class="nv">$post</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="c1">// Update the currentState on the post</span>
        <span class="k">try</span> <span class="p">{</span>
            <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">blogPublishingWorkflow</span><span class="o">-&gt;</span><span class="na">apply</span><span class="p">(</span><span class="nv">$post</span><span class="p">,</span> <span class="s1">&#39;to_review&#39;</span><span class="p">);</span>
        <span class="p">}</span> <span class="k">catch</span> <span class="p">(</span><span class="nx">LogicException</span> <span class="nv">$exception</span><span class="p">)</span> <span class="p">{</span>
            <span class="c1">// ...</span>
        <span class="p">}</span>
        <span class="c1">// ...</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>
</div>
<p>Alternatively, use the registry:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="k">use</span> <span class="nx">App\Entity\BlogPost</span><span class="p">;</span>
<span class="k">use</span> <span class="nx">Symfony\Component\Workflow\Registry</span><span class="p">;</span>

<span class="k">class</span> <span class="nc">MyClass</span>
<span class="p">{</span>
    <span class="k">private</span> <span class="nv">$workflowRegistry</span><span class="p">;</span>

    <span class="k">public</span> <span class="k">function</span> <span class="fm">__construct</span><span class="p">(</span><span class="nx">Registry</span> <span class="nv">$workflowRegistry</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">workflowRegistry</span> <span class="o">=</span> <span class="nv">$workflowRegistry</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="k">public</span> <span class="k">function</span> <span class="nf">toReview</span><span class="p">(</span><span class="nx">BlogPost</span> <span class="nv">$post</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="nv">$blogPublishingWorkflow</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">workflowRegistry</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">(</span><span class="nv">$post</span><span class="p">);</span>

        <span class="c1">// ...</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>
</div>
<div class="admonition tip">
<p class="admonition-title">Tip</p>
<p>You can find the list of available workflow services with the
<code class="docutils literal notranslate"><span class="pre">php</span> <span class="pre">bin/console</span> <span class="pre">debug:autowiring</span> <span class="pre">workflow</span></code> command.</p>
</div>
</div>
<div class="section" id="using-events">
<h2>Using Events</h2>
<p>To make your workflows more flexible, you can construct the <code class="docutils literal notranslate"><span class="pre">Workflow</span></code>
object with an <code class="docutils literal notranslate"><span class="pre">EventDispatcher</span></code>. You can now create event listeners to
block transitions (i.e. depending on the data in the blog post) and do
additional actions when a workflow operation happened (e.g. sending
announcements).</p>
<p>Each step has three events that are fired in order:</p>
<ul class="simple">
<li><p>An event for every workflow;</p></li>
<li><p>An event for the workflow concerned;</p></li>
<li><p>An event for the workflow concerned with the specific transition or place name.</p></li>
</ul>
<p>When a state transition is initiated, the events are dispatched in the following
order:</p>
<dl>
<dt><code class="docutils literal notranslate"><span class="pre">workflow.guard</span></code></dt>
<dd><p>Validate whether the transition is blocked or not (see
<a class="reference internal" href="#workflow-usage-guard-events"><span class="std std-ref">guard events</span></a> and
<a class="reference internal" href="#workflow-blocking-transitions"><span class="std std-ref">blocking transitions</span></a>).</p>
<p>The three events being dispatched are:</p>
<ul class="simple">
<li><p><code class="docutils literal notranslate"><span class="pre">workflow.guard</span></code></p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">workflow.[workflow</span> <span class="pre">name].guard</span></code></p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">workflow.[workflow</span> <span class="pre">name].guard.[transition</span> <span class="pre">name]</span></code></p></li>
</ul>
</dd>
<dt><code class="docutils literal notranslate"><span class="pre">workflow.leave</span></code></dt>
<dd><p>The subject is about to leave a place.</p>
<p>The three events being dispatched are:</p>
<ul class="simple">
<li><p><code class="docutils literal notranslate"><span class="pre">workflow.leave</span></code></p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">workflow.[workflow</span> <span class="pre">name].leave</span></code></p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">workflow.[workflow</span> <span class="pre">name].leave.[place</span> <span class="pre">name]</span></code></p></li>
</ul>
</dd>
<dt><code class="docutils literal notranslate"><span class="pre">workflow.transition</span></code></dt>
<dd><p>The subject is going through this transition.</p>
<p>The three events being dispatched are:</p>
<ul class="simple">
<li><p><code class="docutils literal notranslate"><span class="pre">workflow.transition</span></code></p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">workflow.[workflow</span> <span class="pre">name].transition</span></code></p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">workflow.[workflow</span> <span class="pre">name].transition.[transition</span> <span class="pre">name]</span></code></p></li>
</ul>
</dd>
<dt><code class="docutils literal notranslate"><span class="pre">workflow.enter</span></code></dt>
<dd><p>The subject is about to enter a new place. This event is triggered right
before the subject places are updated, which means that the marking of the
subject is not yet updated with the new places.</p>
<p>The three events being dispatched are:</p>
<ul class="simple">
<li><p><code class="docutils literal notranslate"><span class="pre">workflow.enter</span></code></p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">workflow.[workflow</span> <span class="pre">name].enter</span></code></p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">workflow.[workflow</span> <span class="pre">name].enter.[place</span> <span class="pre">name]</span></code></p></li>
</ul>
</dd>
<dt><code class="docutils literal notranslate"><span class="pre">workflow.entered</span></code></dt>
<dd><p>The subject has entered in the places and the marking is updated.</p>
<p>The three events being dispatched are:</p>
<ul class="simple">
<li><p><code class="docutils literal notranslate"><span class="pre">workflow.entered</span></code></p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">workflow.[workflow</span> <span class="pre">name].entered</span></code></p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">workflow.[workflow</span> <span class="pre">name].entered.[place</span> <span class="pre">name]</span></code></p></li>
</ul>
</dd>
<dt><code class="docutils literal notranslate"><span class="pre">workflow.completed</span></code></dt>
<dd><p>The object has completed this transition.</p>
<p>The three events being dispatched are:</p>
<ul class="simple">
<li><p><code class="docutils literal notranslate"><span class="pre">workflow.completed</span></code></p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">workflow.[workflow</span> <span class="pre">name].completed</span></code></p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">workflow.[workflow</span> <span class="pre">name].completed.[transition</span> <span class="pre">name]</span></code></p></li>
</ul>
</dd>
<dt><code class="docutils literal notranslate"><span class="pre">workflow.announce</span></code></dt>
<dd><p>Triggered for each transition that now is accessible for the subject.</p>
<p>The three events being dispatched are:</p>
<ul class="simple">
<li><p><code class="docutils literal notranslate"><span class="pre">workflow.announce</span></code></p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">workflow.[workflow</span> <span class="pre">name].announce</span></code></p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">workflow.[workflow</span> <span class="pre">name].announce.[transition</span> <span class="pre">name]</span></code></p></li>
</ul>
</dd>
</dl>
<div class="admonition note">
<p class="admonition-title">Note</p>
<p>The leaving and entering events are triggered even for transitions that stay
in same place.</p>
</div>
<div class="versionadded">
<p><span class="versionmodified">New in version 4.3: </span>Following events are also dispatched when the subject enters the workflow
for the first time: <code class="docutils literal notranslate"><span class="pre">workflow.entered</span></code> and <code class="docutils literal notranslate"><span class="pre">workflow.[worflow</span> <span class="pre">name].entered</span></code>.</p>
</div>
<p>Here is an example of how to enable logging for every time a “blog_publishing”
workflow leaves a place:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="c1">// src/App/EventSubscriber/WorkflowLoggerSubscriber.php</span>
<span class="k">namespace</span> <span class="nx">App\EventSubscriber</span><span class="p">;</span>

<span class="k">use</span> <span class="nx">Psr\Log\LoggerInterface</span><span class="p">;</span>
<span class="k">use</span> <span class="nx">Symfony\Component\EventDispatcher\EventSubscriberInterface</span><span class="p">;</span>
<span class="k">use</span> <span class="nx">Symfony\Component\Workflow\Event\Event</span><span class="p">;</span>

<span class="k">class</span> <span class="nc">WorkflowLoggerSubscriber</span> <span class="k">implements</span> <span class="nx">EventSubscriberInterface</span>
<span class="p">{</span>
    <span class="k">private</span> <span class="nv">$logger</span><span class="p">;</span>

    <span class="k">public</span> <span class="k">function</span> <span class="fm">__construct</span><span class="p">(</span><span class="nx">LoggerInterface</span> <span class="nv">$logger</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">logger</span> <span class="o">=</span> <span class="nv">$logger</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="k">public</span> <span class="k">function</span> <span class="nf">onLeave</span><span class="p">(</span><span class="nx">Event</span> <span class="nv">$event</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">logger</span><span class="o">-&gt;</span><span class="na">alert</span><span class="p">(</span><span class="nb">sprintf</span><span class="p">(</span>
            <span class="s1">&#39;Blog post (id: &quot;%s&quot;) performed transition &quot;%s&quot; from &quot;%s&quot; to &quot;%s&quot;&#39;</span><span class="p">,</span>
            <span class="nv">$event</span><span class="o">-&gt;</span><span class="na">getSubject</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">getId</span><span class="p">(),</span>
            <span class="nv">$event</span><span class="o">-&gt;</span><span class="na">getTransition</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">getName</span><span class="p">(),</span>
            <span class="nb">implode</span><span class="p">(</span><span class="s1">&#39;, &#39;</span><span class="p">,</span> <span class="nb">array_keys</span><span class="p">(</span><span class="nv">$event</span><span class="o">-&gt;</span><span class="na">getMarking</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">getPlaces</span><span class="p">())),</span>
            <span class="nb">implode</span><span class="p">(</span><span class="s1">&#39;, &#39;</span><span class="p">,</span> <span class="nv">$event</span><span class="o">-&gt;</span><span class="na">getTransition</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">getTos</span><span class="p">())</span>
        <span class="p">));</span>
    <span class="p">}</span>

    <span class="k">public</span> <span class="k">static</span> <span class="k">function</span> <span class="nf">getSubscribedEvents</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="k">return</span> <span class="p">[</span>
            <span class="s1">&#39;workflow.blog_publishing.leave&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;onLeave&#39;</span><span class="p">,</span>
        <span class="p">];</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>
</div>
<div class="section" id="guard-events">
<span id="workflow-usage-guard-events"></span><h3>Guard Events</h3>
<p>There are a special kind of events called “Guard events”. Their event listeners
are invoked every time a call to <code class="docutils literal notranslate"><span class="pre">Workflow::can()</span></code>, <code class="docutils literal notranslate"><span class="pre">Workflow::apply()</span></code> or
<code class="docutils literal notranslate"><span class="pre">Workflow::getEnabledTransitions()</span></code> is executed. With the guard events you may
add custom logic to decide which transitions should be blocked or not. Here is a
list of the guard event names.</p>
<ul class="simple">
<li><p><code class="docutils literal notranslate"><span class="pre">workflow.guard</span></code></p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">workflow.[workflow</span> <span class="pre">name].guard</span></code></p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">workflow.[workflow</span> <span class="pre">name].guard.[transition</span> <span class="pre">name]</span></code></p></li>
</ul>
<p>This example stops any blog post being transitioned to “reviewed” if it is
missing a title:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="c1">// src/App/EventSubscriber/BlogPostReviewSubscriber.php</span>
<span class="k">namespace</span> <span class="nx">App\EventSubscriber</span><span class="p">;</span>

<span class="k">use</span> <span class="nx">App\Entity\BlogPost</span><span class="p">;</span>
<span class="k">use</span> <span class="nx">Symfony\Component\EventDispatcher\EventSubscriberInterface</span><span class="p">;</span>
<span class="k">use</span> <span class="nx">Symfony\Component\Workflow\Event\GuardEvent</span><span class="p">;</span>

<span class="k">class</span> <span class="nc">BlogPostReviewSubscriber</span> <span class="k">implements</span> <span class="nx">EventSubscriberInterface</span>
<span class="p">{</span>
    <span class="k">public</span> <span class="k">function</span> <span class="nf">guardReview</span><span class="p">(</span><span class="nx">GuardEvent</span> <span class="nv">$event</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="sd">/** @var BlogPost $post */</span>
        <span class="nv">$post</span> <span class="o">=</span> <span class="nv">$event</span><span class="o">-&gt;</span><span class="na">getSubject</span><span class="p">();</span>
        <span class="nv">$title</span> <span class="o">=</span> <span class="nv">$post</span><span class="o">-&gt;</span><span class="na">title</span><span class="p">;</span>

        <span class="k">if</span> <span class="p">(</span><span class="k">empty</span><span class="p">(</span><span class="nv">$title</span><span class="p">))</span> <span class="p">{</span>
            <span class="c1">// Block the transition &quot;to_review&quot; if the post has no title</span>
            <span class="nv">$event</span><span class="o">-&gt;</span><span class="na">setBlocked</span><span class="p">(</span><span class="k">true</span><span class="p">);</span>
        <span class="p">}</span>
    <span class="p">}</span>

    <span class="k">public</span> <span class="k">static</span> <span class="k">function</span> <span class="nf">getSubscribedEvents</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="k">return</span> <span class="p">[</span>
            <span class="s1">&#39;workflow.blog_publishing.guard.to_review&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span><span class="s1">&#39;guardReview&#39;</span><span class="p">],</span>
        <span class="p">];</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>
</div>
</div>
<div class="section" id="event-methods">
<h3>Event Methods</h3>
<p>Each workflow event is an instance of <code class="docutils literal notranslate"><a class="reference external" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Workflow/Event/Event.php" title="Symfony\Component\Workflow\Event\Event"><span class="pre">Event</span></a><span class="link-target"> <span class="pre">[https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Workflow/Event/Event.php]</span></span></code>.
This means that each event has access to the following information:</p>
<dl class="simple">
<dt><code class="docutils literal notranslate"><a class="reference external" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Workflow/Event/Event.php" title="Symfony\Component\Workflow\Event\Event::getMarking()"><span class="pre">getMarking()</span></a><span class="link-target"> <span class="pre">[https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Workflow/Event/Event.php]</span></span></code></dt>
<dd><p>Returns the <code class="docutils literal notranslate"><a class="reference external" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Workflow/Marking.php" title="Symfony\Component\Workflow\Marking"><span class="pre">Marking</span></a><span class="link-target"> <span class="pre">[https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Workflow/Marking.php]</span></span></code> of the workflow.</p>
</dd>
<dt><code class="docutils literal notranslate"><a class="reference external" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Workflow/Event/Event.php" title="Symfony\Component\Workflow\Event\Event::getSubject()"><span class="pre">getSubject()</span></a><span class="link-target"> <span class="pre">[https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Workflow/Event/Event.php]</span></span></code></dt>
<dd><p>Returns the object that dispatches the event.</p>
</dd>
<dt><code class="docutils literal notranslate"><a class="reference external" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Workflow/Event/Event.php" title="Symfony\Component\Workflow\Event\Event::getTransition()"><span class="pre">getTransition()</span></a><span class="link-target"> <span class="pre">[https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Workflow/Event/Event.php]</span></span></code></dt>
<dd><p>Returns the <code class="docutils literal notranslate"><a class="reference external" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Workflow/Transition.php" title="Symfony\Component\Workflow\Transition"><span class="pre">Transition</span></a><span class="link-target"> <span class="pre">[https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Workflow/Transition.php]</span></span></code> that dispatches the event.</p>
</dd>
<dt><code class="docutils literal notranslate"><a class="reference external" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Workflow/Event/Event.php" title="Symfony\Component\Workflow\Event\Event::getWorkflowName()"><span class="pre">getWorkflowName()</span></a><span class="link-target"> <span class="pre">[https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Workflow/Event/Event.php]</span></span></code></dt>
<dd><p>Returns a string with the name of the workflow that triggered the event.</p>
</dd>
<dt><code class="docutils literal notranslate"><a class="reference external" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Workflow/Event/Event.php" title="Symfony\Component\Workflow\Event\Event::getMetadata()"><span class="pre">getMetadata()</span></a><span class="link-target"> <span class="pre">[https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Workflow/Event/Event.php]</span></span></code></dt>
<dd><p>Returns a metadata.</p>
</dd>
</dl>
<p>For Guard Events, there is an extended <code class="docutils literal notranslate"><a class="reference external" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Workflow/Event/GuardEvent.php" title="Symfony\Component\Workflow\Event\GuardEvent"><span class="pre">GuardEvent</span></a><span class="link-target"> <span class="pre">[https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Workflow/Event/GuardEvent.php]</span></span></code> class.
This class has these additional methods:</p>
<dl class="simple">
<dt><code class="docutils literal notranslate"><a class="reference external" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Workflow/Event/GuardEvent.php" title="Symfony\Component\Workflow\Event\GuardEvent::isBlocked()"><span class="pre">isBlocked()</span></a><span class="link-target"> <span class="pre">[https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Workflow/Event/GuardEvent.php]</span></span></code></dt>
<dd><p>Returns if transition is blocked.</p>
</dd>
<dt><code class="docutils literal notranslate"><a class="reference external" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Workflow/Event/GuardEvent.php" title="Symfony\Component\Workflow\Event\GuardEvent::setBlocked()"><span class="pre">setBlocked()</span></a><span class="link-target"> <span class="pre">[https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Workflow/Event/GuardEvent.php]</span></span></code></dt>
<dd><p>Sets the blocked value.</p>
</dd>
<dt><code class="docutils literal notranslate"><a class="reference external" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Workflow/Event/GuardEvent.php" title="Symfony\Component\Workflow\Event\GuardEvent::getTransitionBlockerList()"><span class="pre">getTransitionBlockerList()</span></a><span class="link-target"> <span class="pre">[https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Workflow/Event/GuardEvent.php]</span></span></code></dt>
<dd><p>Returns the event <code class="docutils literal notranslate"><a class="reference external" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Workflow/TransitionBlockerList.php" title="Symfony\Component\Workflow\TransitionBlockerList"><span class="pre">TransitionBlockerList</span></a><span class="link-target"> <span class="pre">[https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Workflow/TransitionBlockerList.php]</span></span></code>.
See <a class="reference internal" href="#workflow-blocking-transitions"><span class="std std-ref">blocking transitions</span></a>.</p>
</dd>
<dt><code class="docutils literal notranslate"><a class="reference external" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Workflow/Event/GuardEvent.php" title="Symfony\Component\Workflow\Event\GuardEvent::addTransitionBlocker()"><span class="pre">addTransitionBlocker()</span></a><span class="link-target"> <span class="pre">[https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Workflow/Event/GuardEvent.php]</span></span></code></dt>
<dd><p>Add a <code class="docutils literal notranslate"><a class="reference external" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Workflow/TransitionBlocker.php" title="Symfony\Component\Workflow\TransitionBlocker"><span class="pre">TransitionBlocker</span></a><span class="link-target"> <span class="pre">[https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Workflow/TransitionBlocker.php]</span></span></code> instance.</p>
</dd>
</dl>
</div>
</div>
<div class="section" id="blocking-transitions">
<span id="workflow-blocking-transitions"></span><h2>Blocking Transitions</h2>
<p>The execution of the workflow can be controlled by calling custom logic to
decide if the current transition is blocked or allowed before applying it. This
feature is provided by “guards”, which can be used in two ways.</p>
<p>First, you can listen to <a class="reference internal" href="#workflow-usage-guard-events"><span class="std std-ref">the guard events</span></a>.
Alternatively, you can define a <code class="docutils literal notranslate"><span class="pre">guard</span></code> configuration option for the
transition. The value of this option is any valid expression created with the
<a class="reference internal" href="components/expression_language.xhtml"><span class="doc">ExpressionLanguage component</span></a>:</p>
<div class="configuration-block">
<ul class="simple">
<li><p><em>YAML</em><div class="highlight-yaml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1"># config/packages/workflow.yaml</span>
<span class="l l-Scalar l-Scalar-Plain">framework</span><span class="p p-Indicator">:</span>
    <span class="l l-Scalar l-Scalar-Plain">workflows</span><span class="p p-Indicator">:</span>
        <span class="l l-Scalar l-Scalar-Plain">blog_publishing</span><span class="p p-Indicator">:</span>
            <span class="c1"># previous configuration</span>
            <span class="l l-Scalar l-Scalar-Plain">transitions</span><span class="p p-Indicator">:</span>
                <span class="l l-Scalar l-Scalar-Plain">to_review</span><span class="p p-Indicator">:</span>
                    <span class="c1"># the transition is allowed only if the current user has the ROLE_REVIEWER role.</span>
                    <span class="l l-Scalar l-Scalar-Plain">guard</span><span class="p p-Indicator">:</span> <span class="s">&quot;is_granted(&#39;ROLE_REVIEWER&#39;)&quot;</span>
                    <span class="l l-Scalar l-Scalar-Plain">from</span><span class="p p-Indicator">:</span> <span class="l l-Scalar l-Scalar-Plain">draft</span>
                    <span class="l l-Scalar l-Scalar-Plain">to</span><span class="p p-Indicator">:</span>   <span class="l l-Scalar l-Scalar-Plain">reviewed</span>
                <span class="l l-Scalar l-Scalar-Plain">publish</span><span class="p p-Indicator">:</span>
                    <span class="c1"># or &quot;is_anonymous&quot;, &quot;is_remember_me&quot;, &quot;is_fully_authenticated&quot;, &quot;is_granted&quot;, &quot;is_valid&quot;</span>
                    <span class="l l-Scalar l-Scalar-Plain">guard</span><span class="p p-Indicator">:</span> <span class="s">&quot;is_authenticated&quot;</span>
                    <span class="l l-Scalar l-Scalar-Plain">from</span><span class="p p-Indicator">:</span> <span class="l l-Scalar l-Scalar-Plain">reviewed</span>
                    <span class="l l-Scalar l-Scalar-Plain">to</span><span class="p p-Indicator">:</span>   <span class="l l-Scalar l-Scalar-Plain">published</span>
                <span class="l l-Scalar l-Scalar-Plain">reject</span><span class="p p-Indicator">:</span>
                    <span class="c1"># or any valid expression language with &quot;subject&quot; referring to the supported object</span>
                    <span class="l l-Scalar l-Scalar-Plain">guard</span><span class="p p-Indicator">:</span> <span class="s">&quot;is_granted(&#39;ROLE_ADMIN&#39;)</span><span class="nv"> </span><span class="s">and</span><span class="nv"> </span><span class="s">subject.isRejectable()&quot;</span>
                    <span class="l l-Scalar l-Scalar-Plain">from</span><span class="p p-Indicator">:</span> <span class="l l-Scalar l-Scalar-Plain">reviewed</span>
                    <span class="l l-Scalar l-Scalar-Plain">to</span><span class="p p-Indicator">:</span>   <span class="l l-Scalar l-Scalar-Plain">rejected</span>
</pre></div>
</td></tr></table></div>
</p></li>
<li><p><em>XML</em><div class="highlight-xml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c">&lt;!-- config/packages/workflow.xml --&gt;</span>
<span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span>
<span class="nt">&lt;container</span> <span class="na">xmlns=</span><span class="s">&quot;http://symfony.com/schema/dic/services&quot;</span>
    <span class="na">xmlns:xsi=</span><span class="s">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span>
    <span class="na">xmlns:framework=</span><span class="s">&quot;http://symfony.com/schema/dic/symfony&quot;</span>
    <span class="na">xsi:schemaLocation=</span><span class="s">&quot;http://symfony.com/schema/dic/services</span>
<span class="s">    https://symfony.com/schema/dic/services/services-1.0.xsd</span>
<span class="s">    http://symfony.com/schema/dic/symfony</span>
<span class="s">    https://symfony.com/schema/dic/symfony/symfony-1.0.xsd&quot;</span><span class="nt">&gt;</span>

    <span class="nt">&lt;framework:config&gt;</span>
        <span class="nt">&lt;framework:workflow</span> <span class="na">name=</span><span class="s">&quot;blog_publishing&quot;</span> <span class="na">type=</span><span class="s">&quot;workflow&quot;</span><span class="nt">&gt;</span>

            <span class="c">&lt;!-- ... previous configuration --&gt;</span>

            <span class="nt">&lt;framework:transition</span> <span class="na">name=</span><span class="s">&quot;to_review&quot;</span><span class="nt">&gt;</span>
                <span class="c">&lt;!-- the transition is allowed only if the current user has the ROLE_REVIEWER role. --&gt;</span>
                <span class="nt">&lt;framework:guard&gt;</span>is_granted(&quot;ROLE_REVIEWER&quot;)<span class="nt">&lt;/framework:guard&gt;</span>
                <span class="nt">&lt;framework:from&gt;</span>draft<span class="nt">&lt;/framework:from&gt;</span>
                <span class="nt">&lt;framework:to&gt;</span>reviewed<span class="nt">&lt;/framework:to&gt;</span>
            <span class="nt">&lt;/framework:transition&gt;</span>

            <span class="nt">&lt;framework:transition</span> <span class="na">name=</span><span class="s">&quot;publish&quot;</span><span class="nt">&gt;</span>
                <span class="c">&lt;!-- or &quot;is_anonymous&quot;, &quot;is_remember_me&quot;, &quot;is_fully_authenticated&quot;, &quot;is_granted&quot; --&gt;</span>
                <span class="nt">&lt;framework:guard&gt;</span>is_authenticated<span class="nt">&lt;/framework:guard&gt;</span>
                <span class="nt">&lt;framework:from&gt;</span>reviewed<span class="nt">&lt;/framework:from&gt;</span>
                <span class="nt">&lt;framework:to&gt;</span>published<span class="nt">&lt;/framework:to&gt;</span>
            <span class="nt">&lt;/framework:transition&gt;</span>

            <span class="nt">&lt;framework:transition</span> <span class="na">name=</span><span class="s">&quot;reject&quot;</span><span class="nt">&gt;</span>
                <span class="c">&lt;!-- or any valid expression language with &quot;subject&quot; referring to the post --&gt;</span>
                <span class="nt">&lt;framework:guard&gt;</span>is_granted(&quot;ROLE_ADMIN&quot;) and subject.isStatusReviewed()<span class="nt">&lt;/framework:guard&gt;</span>
                <span class="nt">&lt;framework:from&gt;</span>reviewed<span class="nt">&lt;/framework:from&gt;</span>
                <span class="nt">&lt;framework:to&gt;</span>rejected<span class="nt">&lt;/framework:to&gt;</span>
            <span class="nt">&lt;/framework:transition&gt;</span>

        <span class="nt">&lt;/framework:workflow&gt;</span>

    <span class="nt">&lt;/framework:config&gt;</span>
<span class="nt">&lt;/container&gt;</span>
</pre></div>
</td></tr></table></div>
</p></li>
<li><p><em>PHP</em><div class="highlight-php notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1">// config/packages/workflow.php</span>
<span class="k">use</span> <span class="nx">App\Entity\BlogPost</span><span class="p">;</span>

<span class="nv">$container</span><span class="o">-&gt;</span><span class="na">loadFromExtension</span><span class="p">(</span><span class="s1">&#39;framework&#39;</span><span class="p">,</span> <span class="p">[</span>
    <span class="s1">&#39;workflows&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
        <span class="s1">&#39;blog_publishing&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
            <span class="c1">// ... previous configuration</span>

            <span class="s1">&#39;transitions&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
                <span class="s1">&#39;to_review&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
                    <span class="c1">// the transition is allowed only if the current user has the ROLE_REVIEWER role.</span>
                    <span class="s1">&#39;guard&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;is_granted(&quot;ROLE_REVIEWER&quot;)&#39;</span><span class="p">,</span>
                    <span class="s1">&#39;from&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;draft&#39;</span><span class="p">,</span>
                    <span class="s1">&#39;to&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;reviewed&#39;</span><span class="p">,</span>
                <span class="p">],</span>
                <span class="s1">&#39;publish&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
                    <span class="c1">// or &quot;is_anonymous&quot;, &quot;is_remember_me&quot;, &quot;is_fully_authenticated&quot;, &quot;is_granted&quot;</span>
                    <span class="s1">&#39;guard&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;is_authenticated&#39;</span><span class="p">,</span>
                    <span class="s1">&#39;from&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;reviewed&#39;</span><span class="p">,</span>
                    <span class="s1">&#39;to&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;published&#39;</span><span class="p">,</span>
                <span class="p">],</span>
                <span class="s1">&#39;reject&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
                    <span class="c1">// or any valid expression language with &quot;subject&quot; referring to the post</span>
                    <span class="s1">&#39;guard&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;is_granted(&quot;ROLE_ADMIN&quot;) and subject.isStatusReviewed()&#39;</span><span class="p">,</span>
                    <span class="s1">&#39;from&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;reviewed&#39;</span><span class="p">,</span>
                    <span class="s1">&#39;to&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;rejected&#39;</span><span class="p">,</span>
                <span class="p">],</span>
            <span class="p">],</span>
        <span class="p">],</span>
    <span class="p">],</span>
<span class="p">]);</span>
</pre></div>
</td></tr></table></div>
</p></li>
</ul>
</div>
<p>You can also use transition blockers to block and return a user-friendly error
message when you stop a transition from happening.
In the example we get this message from the
<code class="docutils literal notranslate"><a class="reference external" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Workflow/Event/Event.php" title="Symfony\Component\Workflow\Event\Event"><span class="pre">Event</span></a><span class="link-target"> <span class="pre">[https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Workflow/Event/Event.php]</span></span></code>’s metadata, giving you a
central place to manage the text.</p>
<p>This example has been simplified; in production you may prefer to use the
<a class="reference internal" href="translation.xhtml"><span class="doc">Translation</span></a> component to manage messages in one
place:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="c1">// src/App/EventSubscriber/BlogPostPublishSubscriber.php</span>
<span class="k">namespace</span> <span class="nx">App\EventSubscriber</span><span class="p">;</span>

<span class="k">use</span> <span class="nx">Symfony\Component\EventDispatcher\EventSubscriberInterface</span><span class="p">;</span>
<span class="k">use</span> <span class="nx">Symfony\Component\Workflow\Event\GuardEvent</span><span class="p">;</span>
<span class="k">use</span> <span class="nx">Symfony\Component\Workflow\TransitionBlocker</span><span class="p">;</span>

<span class="k">class</span> <span class="nc">BlogPostPublishSubscriber</span> <span class="k">implements</span> <span class="nx">EventSubscriberInterface</span>
<span class="p">{</span>
    <span class="k">public</span> <span class="k">function</span> <span class="nf">guardPublish</span><span class="p">(</span><span class="nx">GuardEvent</span> <span class="nv">$event</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="nv">$eventTransition</span> <span class="o">=</span> <span class="nv">$event</span><span class="o">-&gt;</span><span class="na">getTransition</span><span class="p">();</span>
        <span class="nv">$hourLimit</span> <span class="o">=</span> <span class="nv">$event</span><span class="o">-&gt;</span><span class="na">getMetadata</span><span class="p">(</span><span class="s1">&#39;hour_limit&#39;</span><span class="p">,</span> <span class="nv">$eventTransition</span><span class="p">);</span>

        <span class="k">if</span> <span class="p">(</span><span class="nb">date</span><span class="p">(</span><span class="s1">&#39;H&#39;</span><span class="p">)</span> <span class="o">&lt;=</span> <span class="nv">$hourLimit</span><span class="p">)</span> <span class="p">{</span>
            <span class="k">return</span><span class="p">;</span>
        <span class="p">}</span>

        <span class="c1">// Block the transition &quot;publish&quot; if it is more than 8 PM</span>
        <span class="c1">// with the message for end user</span>
        <span class="nv">$explanation</span> <span class="o">=</span> <span class="nv">$event</span><span class="o">-&gt;</span><span class="na">getMetadata</span><span class="p">(</span><span class="s1">&#39;explanation&#39;</span><span class="p">,</span> <span class="nv">$eventTransition</span><span class="p">);</span>
        <span class="nv">$event</span><span class="o">-&gt;</span><span class="na">addTransitionBlocker</span><span class="p">(</span><span class="k">new</span> <span class="nx">TransitionBlocker</span><span class="p">(</span><span class="nv">$explanation</span> <span class="p">,</span> <span class="s1">&#39;0&#39;</span><span class="p">));</span>
    <span class="p">}</span>

    <span class="k">public</span> <span class="k">static</span> <span class="k">function</span> <span class="nf">getSubscribedEvents</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="k">return</span> <span class="p">[</span>
            <span class="s1">&#39;workflow.blog_publishing.guard.publish&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span><span class="s1">&#39;guardPublish&#39;</span><span class="p">],</span>
        <span class="p">];</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>
</div>
<div class="versionadded">
<p><span class="versionmodified">New in version 4.1: </span>The transition blockers were introduced in Symfony 4.1.</p>
</div>
</div>
<div class="section" id="usage-in-twig">
<h2>Usage in Twig</h2>
<p>Symfony defines several Twig functions to manage workflows and reduce the need
of domain logic in your templates:</p>
<dl class="simple">
<dt><code class="docutils literal notranslate"><span class="pre">workflow_can()</span></code></dt>
<dd><p>Returns <code class="docutils literal notranslate"><span class="pre">true</span></code> if the given object can make the given transition.</p>
</dd>
<dt><code class="docutils literal notranslate"><span class="pre">workflow_transitions()</span></code></dt>
<dd><p>Returns an array with all the transitions enabled for the given object.</p>
</dd>
<dt><code class="docutils literal notranslate"><span class="pre">workflow_marked_places()</span></code></dt>
<dd><p>Returns an array with the place names of the given marking.</p>
</dd>
<dt><code class="docutils literal notranslate"><span class="pre">workflow_has_marked_place()</span></code></dt>
<dd><p>Returns <code class="docutils literal notranslate"><span class="pre">true</span></code> if the marking of the given object has the given state.</p>
</dd>
<dt><code class="docutils literal notranslate"><span class="pre">workflow_transition_blockers()</span></code></dt>
<dd><p>Returns <code class="docutils literal notranslate"><a class="reference external" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Workflow/TransitionBlockerList.php" title="Symfony\Component\Workflow\TransitionBlockerList"><span class="pre">TransitionBlockerList</span></a><span class="link-target"> <span class="pre">[https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Workflow/TransitionBlockerList.php]</span></span></code> for the given transition.</p>
</dd>
</dl>
<p>The following example shows these functions in action:</p>
<div class="highlight-html+twig notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="p">&lt;</span><span class="nt">h3</span><span class="p">&gt;</span>Actions on Blog Post<span class="p">&lt;/</span><span class="nt">h3</span><span class="p">&gt;</span>
<span class="cp">{%</span> <span class="k">if</span> <span class="nv">workflow_can</span><span class="o">(</span><span class="nv">post</span><span class="o">,</span> <span class="s1">&#39;publish&#39;</span><span class="o">)</span> <span class="cp">%}</span>
    <span class="p">&lt;</span><span class="nt">a</span> <span class="na">href</span><span class="o">=</span><span class="s">&quot;...&quot;</span><span class="p">&gt;</span>Publish<span class="p">&lt;/</span><span class="nt">a</span><span class="p">&gt;</span>
<span class="cp">{%</span> <span class="k">endif</span> <span class="cp">%}</span>
<span class="cp">{%</span> <span class="k">if</span> <span class="nv">workflow_can</span><span class="o">(</span><span class="nv">post</span><span class="o">,</span> <span class="s1">&#39;to_review&#39;</span><span class="o">)</span> <span class="cp">%}</span>
    <span class="p">&lt;</span><span class="nt">a</span> <span class="na">href</span><span class="o">=</span><span class="s">&quot;...&quot;</span><span class="p">&gt;</span>Submit to review<span class="p">&lt;/</span><span class="nt">a</span><span class="p">&gt;</span>
<span class="cp">{%</span> <span class="k">endif</span> <span class="cp">%}</span>
<span class="cp">{%</span> <span class="k">if</span> <span class="nv">workflow_can</span><span class="o">(</span><span class="nv">post</span><span class="o">,</span> <span class="s1">&#39;reject&#39;</span><span class="o">)</span> <span class="cp">%}</span>
    <span class="p">&lt;</span><span class="nt">a</span> <span class="na">href</span><span class="o">=</span><span class="s">&quot;...&quot;</span><span class="p">&gt;</span>Reject<span class="p">&lt;/</span><span class="nt">a</span><span class="p">&gt;</span>
<span class="cp">{%</span> <span class="k">endif</span> <span class="cp">%}</span>

<span class="c">{# Or loop through the enabled transitions #}</span>
<span class="cp">{%</span> <span class="k">for</span> <span class="nv">transition</span> <span class="k">in</span> <span class="nv">workflow_transitions</span><span class="o">(</span><span class="nv">post</span><span class="o">)</span> <span class="cp">%}</span>
    <span class="p">&lt;</span><span class="nt">a</span> <span class="na">href</span><span class="o">=</span><span class="s">&quot;...&quot;</span><span class="p">&gt;</span><span class="cp">{{</span> <span class="nv">transition.name</span> <span class="cp">}}</span><span class="p">&lt;/</span><span class="nt">a</span><span class="p">&gt;</span>
<span class="cp">{%</span> <span class="k">else</span> <span class="cp">%}</span>
    No actions available.
<span class="cp">{%</span> <span class="k">endfor</span> <span class="cp">%}</span>

<span class="c">{# Check if the object is in some specific place #}</span>
<span class="cp">{%</span> <span class="k">if</span> <span class="nv">workflow_has_marked_place</span><span class="o">(</span><span class="nv">post</span><span class="o">,</span> <span class="s1">&#39;reviewed&#39;</span><span class="o">)</span> <span class="cp">%}</span>
    <span class="p">&lt;</span><span class="nt">p</span><span class="p">&gt;</span>This post is ready for review.<span class="p">&lt;/</span><span class="nt">p</span><span class="p">&gt;</span>
<span class="cp">{%</span> <span class="k">endif</span> <span class="cp">%}</span>

<span class="c">{# Check if some place has been marked on the object #}</span>
<span class="cp">{%</span> <span class="k">if</span> <span class="s1">&#39;reviewed&#39;</span> <span class="k">in</span> <span class="nv">workflow_marked_places</span><span class="o">(</span><span class="nv">post</span><span class="o">)</span> <span class="cp">%}</span>
    <span class="p">&lt;</span><span class="nt">span</span> <span class="na">class</span><span class="o">=</span><span class="s">&quot;label&quot;</span><span class="p">&gt;</span>Reviewed<span class="p">&lt;/</span><span class="nt">span</span><span class="p">&gt;</span>
<span class="cp">{%</span> <span class="k">endif</span> <span class="cp">%}</span>

<span class="c">{# Loop through the transition blockers #}</span>
<span class="cp">{%</span> <span class="k">for</span> <span class="nv">blocker</span> <span class="k">in</span> <span class="nv">workflow_transition_blockers</span><span class="o">(</span><span class="nv">post</span><span class="o">,</span> <span class="s1">&#39;publish&#39;</span><span class="o">)</span> <span class="cp">%}</span>
    <span class="p">&lt;</span><span class="nt">span</span> <span class="na">class</span><span class="o">=</span><span class="s">&quot;error&quot;</span><span class="p">&gt;</span><span class="cp">{{</span> <span class="nv">blocker.message</span> <span class="cp">}}</span><span class="p">&lt;/</span><span class="nt">span</span><span class="p">&gt;</span>
<span class="cp">{%</span> <span class="k">endfor</span> <span class="cp">%}</span>
</pre></div>
</td></tr></table></div>
</div>
<div class="section" id="storing-metadata">
<h2>Storing Metadata</h2>
<div class="versionadded">
<p><span class="versionmodified">New in version 4.1: </span>The feature to store metadata in workflows was introduced in Symfony 4.1.</p>
</div>
<p>In case you need it, you can store arbitrary metadata in workflows, their
places, and their transitions using the <code class="docutils literal notranslate"><span class="pre">metadata</span></code> option. This metadata can
be only the title of the workflow or very complex objects:</p>
<div class="configuration-block">
<ul class="simple">
<li><p><em>YAML</em><div class="highlight-yaml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1"># config/packages/workflow.yaml</span>
<span class="l l-Scalar l-Scalar-Plain">framework</span><span class="p p-Indicator">:</span>
    <span class="l l-Scalar l-Scalar-Plain">workflows</span><span class="p p-Indicator">:</span>
        <span class="l l-Scalar l-Scalar-Plain">blog_publishing</span><span class="p p-Indicator">:</span>
            <span class="l l-Scalar l-Scalar-Plain">metadata</span><span class="p p-Indicator">:</span>
                <span class="l l-Scalar l-Scalar-Plain">title</span><span class="p p-Indicator">:</span> <span class="s">&#39;Blog</span><span class="nv"> </span><span class="s">Publishing</span><span class="nv"> </span><span class="s">Workflow&#39;</span>
            <span class="c1"># ...</span>
            <span class="l l-Scalar l-Scalar-Plain">places</span><span class="p p-Indicator">:</span>
                <span class="l l-Scalar l-Scalar-Plain">draft</span><span class="p p-Indicator">:</span>
                    <span class="l l-Scalar l-Scalar-Plain">metadata</span><span class="p p-Indicator">:</span>
                        <span class="l l-Scalar l-Scalar-Plain">max_num_of_words</span><span class="p p-Indicator">:</span> <span class="l l-Scalar l-Scalar-Plain">500</span>
                <span class="c1"># ...</span>
            <span class="l l-Scalar l-Scalar-Plain">transitions</span><span class="p p-Indicator">:</span>
                <span class="l l-Scalar l-Scalar-Plain">to_review</span><span class="p p-Indicator">:</span>
                    <span class="l l-Scalar l-Scalar-Plain">from</span><span class="p p-Indicator">:</span> <span class="l l-Scalar l-Scalar-Plain">draft</span>
                    <span class="l l-Scalar l-Scalar-Plain">to</span><span class="p p-Indicator">:</span>   <span class="l l-Scalar l-Scalar-Plain">review</span>
                    <span class="l l-Scalar l-Scalar-Plain">metadata</span><span class="p p-Indicator">:</span>
                        <span class="l l-Scalar l-Scalar-Plain">priority</span><span class="p p-Indicator">:</span> <span class="l l-Scalar l-Scalar-Plain">0.5</span>
                <span class="l l-Scalar l-Scalar-Plain">publish</span><span class="p p-Indicator">:</span>
                    <span class="l l-Scalar l-Scalar-Plain">from</span><span class="p p-Indicator">:</span> <span class="l l-Scalar l-Scalar-Plain">reviewed</span>
                    <span class="l l-Scalar l-Scalar-Plain">to</span><span class="p p-Indicator">:</span>   <span class="l l-Scalar l-Scalar-Plain">published</span>
                    <span class="l l-Scalar l-Scalar-Plain">metadata</span><span class="p p-Indicator">:</span>
                        <span class="l l-Scalar l-Scalar-Plain">hour_limit</span><span class="p p-Indicator">:</span> <span class="l l-Scalar l-Scalar-Plain">20</span>
                        <span class="l l-Scalar l-Scalar-Plain">explanation</span><span class="p p-Indicator">:</span> <span class="s">&#39;You</span><span class="nv"> </span><span class="s">can</span><span class="nv"> </span><span class="s">not</span><span class="nv"> </span><span class="s">publish</span><span class="nv"> </span><span class="s">after</span><span class="nv"> </span><span class="s">8</span><span class="nv"> </span><span class="s">PM.&#39;</span>
</pre></div>
</td></tr></table></div>
</p></li>
<li><p><em>XML</em><div class="highlight-xml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c">&lt;!-- config/packages/workflow.xml --&gt;</span>
<span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span>
<span class="nt">&lt;container</span> <span class="na">xmlns=</span><span class="s">&quot;http://symfony.com/schema/dic/services&quot;</span>
    <span class="na">xmlns:xsi=</span><span class="s">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span>
    <span class="na">xmlns:framework=</span><span class="s">&quot;http://symfony.com/schema/dic/symfony&quot;</span>
    <span class="na">xsi:schemaLocation=</span><span class="s">&quot;http://symfony.com/schema/dic/services https://symfony.com/schema/dic/services/services-1.0.xsd</span>
<span class="s">        http://symfony.com/schema/dic/symfony https://symfony.com/schema/dic/symfony/symfony-1.0.xsd&quot;</span>
<span class="nt">&gt;</span>
    <span class="nt">&lt;framework:config&gt;</span>
        <span class="nt">&lt;framework:workflow</span> <span class="na">name=</span><span class="s">&quot;blog_publishing&quot;</span><span class="nt">&gt;</span>
            <span class="nt">&lt;framework:metadata&gt;</span>
                <span class="nt">&lt;framework:title&gt;</span>Blog Publishing Workflow<span class="nt">&lt;/framework:title&gt;</span>
            <span class="nt">&lt;/framework:metadata&gt;</span>
            <span class="c">&lt;!-- ... --&gt;</span>
            <span class="nt">&lt;framework:place</span> <span class="na">name=</span><span class="s">&quot;draft&quot;</span><span class="nt">&gt;</span>
                <span class="nt">&lt;framework:metadata&gt;</span>
                    <span class="nt">&lt;framework:max-num-of-words&gt;</span>500<span class="nt">&lt;/framework:max-num-of-words&gt;</span>
                <span class="nt">&lt;/framework:metadata&gt;</span>
            <span class="nt">&lt;/framework:place&gt;</span>
            <span class="c">&lt;!-- ... --&gt;</span>
            <span class="nt">&lt;framework:transition</span> <span class="na">name=</span><span class="s">&quot;to_review&quot;</span><span class="nt">&gt;</span>
                <span class="nt">&lt;framework:from&gt;</span>draft<span class="nt">&lt;/framework:from&gt;</span>
                <span class="nt">&lt;framework:to&gt;</span>review<span class="nt">&lt;/framework:to&gt;</span>
                <span class="nt">&lt;framework:metadata&gt;</span>
                    <span class="nt">&lt;framework:priority&gt;</span>0.5<span class="nt">&lt;/framework:priority&gt;</span>
                <span class="nt">&lt;/framework:metadata&gt;</span>
            <span class="nt">&lt;/framework:transition&gt;</span>
            <span class="nt">&lt;framework:transition</span> <span class="na">name=</span><span class="s">&quot;publish&quot;</span><span class="nt">&gt;</span>
                <span class="nt">&lt;framework:from&gt;</span>reviewed<span class="nt">&lt;/framework:from&gt;</span>
                <span class="nt">&lt;framework:to&gt;</span>published<span class="nt">&lt;/framework:to&gt;</span>
                <span class="nt">&lt;framework:metadata&gt;</span>
                    <span class="nt">&lt;framework:hour_limit&gt;</span>20<span class="nt">&lt;/framework:hour_limit&gt;</span>
                    <span class="nt">&lt;framework:explanation&gt;</span>You can not publish after 8 PM.<span class="nt">&lt;/framework:explanation&gt;</span>
                <span class="nt">&lt;/framework:metadata&gt;</span>
            <span class="nt">&lt;/framework:transition&gt;</span>
        <span class="nt">&lt;/framework:workflow&gt;</span>
    <span class="nt">&lt;/framework:config&gt;</span>
<span class="nt">&lt;/container&gt;</span>
</pre></div>
</td></tr></table></div>
</p></li>
<li><p><em>PHP</em><div class="highlight-php notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1">// config/packages/workflow.php</span>
<span class="nv">$container</span><span class="o">-&gt;</span><span class="na">loadFromExtension</span><span class="p">(</span><span class="s1">&#39;framework&#39;</span><span class="p">,</span> <span class="p">[</span>
    <span class="c1">// ...</span>
    <span class="s1">&#39;workflows&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
        <span class="s1">&#39;blog_publishing&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
            <span class="s1">&#39;metadata&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
                <span class="s1">&#39;title&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;Blog Publishing Workflow&#39;</span><span class="p">,</span>
            <span class="p">],</span>
            <span class="c1">// ...</span>
            <span class="s1">&#39;places&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
                <span class="s1">&#39;draft&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
                    <span class="s1">&#39;metadata&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
                        <span class="s1">&#39;max_num_of_words&#39;</span> <span class="o">=&gt;</span> <span class="mi">500</span><span class="p">,</span>
                    <span class="p">],</span>
                <span class="p">],</span>
                <span class="c1">// ...</span>
            <span class="p">],</span>
            <span class="s1">&#39;transitions&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
                <span class="s1">&#39;to_review&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
                    <span class="s1">&#39;from&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;draft&#39;</span><span class="p">,</span>
                    <span class="s1">&#39;to&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;review&#39;</span><span class="p">,</span>
                    <span class="s1">&#39;metadata&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
                        <span class="s1">&#39;priority&#39;</span> <span class="o">=&gt;</span> <span class="mf">0.5</span><span class="p">,</span>
                    <span class="p">],</span>
                <span class="p">],</span>
                <span class="s1">&#39;publish&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
                    <span class="s1">&#39;from&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;reviewed&#39;</span><span class="p">,</span>
                    <span class="s1">&#39;to&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;published&#39;</span><span class="p">,</span>
                    <span class="s1">&#39;metadata&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
                        <span class="s1">&#39;hour_limit&#39;</span> <span class="o">=&gt;</span> <span class="mi">20</span><span class="p">,</span>
                        <span class="s1">&#39;explanation&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;You can not publish after 8 PM.&#39;</span><span class="p">,</span>
                    <span class="p">],</span>
                <span class="p">],</span>
            <span class="p">],</span>
        <span class="p">],</span>
    <span class="p">],</span>
<span class="p">]);</span>
</pre></div>
</td></tr></table></div>
</p></li>
</ul>
</div>
<p>Then you can access this metadata in your controller as follows:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="c1">// src/App/Controller/BlogPostController.php</span>
<span class="k">use</span> <span class="nx">App\Entity\BlogPost</span><span class="p">;</span>
<span class="k">use</span> <span class="nx">Symfony\Component\Workflow\WorkflowInterface</span><span class="p">;</span>
<span class="c1">// ...</span>

<span class="k">public</span> <span class="k">function</span> <span class="nf">myAction</span><span class="p">(</span><span class="nx">WorkflowInterface</span> <span class="nv">$blogPublishingWorkflow</span><span class="p">,</span> <span class="nx">BlogPost</span> <span class="nv">$post</span><span class="p">)</span>
<span class="p">{</span>
    <span class="nv">$title</span> <span class="o">=</span> <span class="nv">$blogPublishingWorkflow</span>
        <span class="o">-&gt;</span><span class="na">getMetadataStore</span><span class="p">()</span>
        <span class="o">-&gt;</span><span class="na">getWorkflowMetadata</span><span class="p">()[</span><span class="s1">&#39;title&#39;</span><span class="p">]</span> <span class="o">??</span> <span class="s1">&#39;Default title&#39;</span>
    <span class="p">;</span>

    <span class="nv">$maxNumOfWords</span> <span class="o">=</span> <span class="nv">$blogPublishingWorkflow</span>
        <span class="o">-&gt;</span><span class="na">getMetadataStore</span><span class="p">()</span>
        <span class="o">-&gt;</span><span class="na">getPlaceMetadata</span><span class="p">(</span><span class="s1">&#39;draft&#39;</span><span class="p">)[</span><span class="s1">&#39;max_num_of_words&#39;</span><span class="p">]</span> <span class="o">??</span> <span class="mi">500</span>
    <span class="p">;</span>

    <span class="nv">$aTransition</span> <span class="o">=</span> <span class="nv">$blogPublishingWorkflow</span><span class="o">-&gt;</span><span class="na">getDefinition</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">getTransitions</span><span class="p">()[</span><span class="mi">0</span><span class="p">];</span>
    <span class="nv">$priority</span> <span class="o">=</span> <span class="nv">$blogPublishingWorkflow</span>
        <span class="o">-&gt;</span><span class="na">getMetadataStore</span><span class="p">()</span>
        <span class="o">-&gt;</span><span class="na">getTransitionMetadata</span><span class="p">(</span><span class="nv">$aTransition</span><span class="p">)[</span><span class="s1">&#39;priority&#39;</span><span class="p">]</span> <span class="o">??</span> <span class="mi">0</span>
    <span class="p">;</span>

    <span class="c1">// ...</span>
<span class="p">}</span>
</pre></div>
</div>
<p>There is a <code class="docutils literal notranslate"><span class="pre">getMetadata()</span></code> method that works with all kinds of metadata:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="c1">// get &quot;workflow metadata&quot; passing the metadata key as argument</span>
<span class="nv">$title</span> <span class="o">=</span> <span class="nv">$workflow</span><span class="o">-&gt;</span><span class="na">getMetadataStore</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">getMetadata</span><span class="p">(</span><span class="s1">&#39;title&#39;</span><span class="p">);</span>

<span class="c1">// get &quot;place metadata&quot; passing the metadata key as the first argument and the place name as the second argument</span>
<span class="nv">$maxNumOfWords</span> <span class="o">=</span> <span class="nv">$workflow</span><span class="o">-&gt;</span><span class="na">getMetadataStore</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">getMetadata</span><span class="p">(</span><span class="s1">&#39;max_num_of_words&#39;</span><span class="p">,</span> <span class="s1">&#39;draft&#39;</span><span class="p">);</span>

<span class="c1">// get &quot;transition metadata&quot; passing the metadata key as the first argument and a Transition object as the second argument</span>
<span class="nv">$priority</span> <span class="o">=</span> <span class="nv">$workflow</span><span class="o">-&gt;</span><span class="na">getMetadataStore</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">getMetadata</span><span class="p">(</span><span class="s1">&#39;priority&#39;</span><span class="p">,</span> <span class="nv">$aTransition</span><span class="p">);</span>
</pre></div>
</div>
<p>In a <a class="reference internal" href="controller.xhtml#flash-messages"><span class="std std-ref">flash message</span></a> in your controller:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="c1">// $transition = ...; (an instance of Transition)</span>

<span class="c1">// $workflow is a Workflow instance retrieved from the Registry or injected directly (see above)</span>
<span class="nv">$title</span> <span class="o">=</span> <span class="nv">$workflow</span><span class="o">-&gt;</span><span class="na">getMetadataStore</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">getMetadata</span><span class="p">(</span><span class="s1">&#39;title&#39;</span><span class="p">,</span> <span class="nv">$transition</span><span class="p">);</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="na">addFlash</span><span class="p">(</span><span class="s1">&#39;info&#39;</span><span class="p">,</span> <span class="s2">&quot;You have successfully applied the transition with title: &#39;</span><span class="si">$title</span><span class="s2">&#39;&quot;</span><span class="p">);</span>
</pre></div>
</div>
<p>Metadata can also be accessed in a Listener, from the <code class="docutils literal notranslate"><a class="reference external" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Workflow/Event/Event.php" title="Symfony\Component\Workflow\Event\Event"><span class="pre">Event</span></a><span class="link-target"> <span class="pre">[https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Workflow/Event/Event.php]</span></span></code> object.</p>
<p>In Twig templates, metadata is available via the <code class="docutils literal notranslate"><span class="pre">workflow_metadata()</span></code> function:</p>
<div class="highlight-html+twig notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="p">&lt;</span><span class="nt">h2</span><span class="p">&gt;</span>Metadata of Blog Post<span class="p">&lt;/</span><span class="nt">h2</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">p</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="nt">strong</span><span class="p">&gt;</span>Workflow<span class="p">&lt;/</span><span class="nt">strong</span><span class="p">&gt;</span>:<span class="p">&lt;</span><span class="nt">br</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="nt">code</span><span class="p">&gt;</span><span class="cp">{{</span> <span class="nv">workflow_metadata</span><span class="o">(</span><span class="nv">blog_post</span><span class="o">,</span> <span class="s1">&#39;title&#39;</span><span class="o">)</span> <span class="cp">}}</span><span class="p">&lt;/</span><span class="nt">code</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">p</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">p</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="nt">strong</span><span class="p">&gt;</span>Current place(s)<span class="p">&lt;/</span><span class="nt">strong</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="nt">ul</span><span class="p">&gt;</span>
        <span class="cp">{%</span> <span class="k">for</span> <span class="nv">place</span> <span class="k">in</span> <span class="nv">workflow_marked_places</span><span class="o">(</span><span class="nv">blog_post</span><span class="o">)</span> <span class="cp">%}</span>
            <span class="p">&lt;</span><span class="nt">li</span><span class="p">&gt;</span>
                <span class="cp">{{</span> <span class="nv">place</span> <span class="cp">}}</span>:
                <span class="p">&lt;</span><span class="nt">code</span><span class="p">&gt;</span><span class="cp">{{</span> <span class="nv">workflow_metadata</span><span class="o">(</span><span class="nv">blog_post</span><span class="o">,</span> <span class="s1">&#39;max_num_of_words&#39;</span><span class="o">,</span> <span class="nv">place</span><span class="o">)</span> <span class="o">?:</span> <span class="s1">&#39;Unlimited&#39;</span><span class="cp">}}</span><span class="p">&lt;/</span><span class="nt">code</span><span class="p">&gt;</span>
            <span class="p">&lt;/</span><span class="nt">li</span><span class="p">&gt;</span>
        <span class="cp">{%</span> <span class="k">endfor</span> <span class="cp">%}</span>
    <span class="p">&lt;/</span><span class="nt">ul</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">p</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">p</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="nt">strong</span><span class="p">&gt;</span>Enabled transition(s)<span class="p">&lt;/</span><span class="nt">strong</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="nt">ul</span><span class="p">&gt;</span>
        <span class="cp">{%</span> <span class="k">for</span> <span class="nv">transition</span> <span class="k">in</span> <span class="nv">workflow_transitions</span><span class="o">(</span><span class="nv">blog_post</span><span class="o">)</span> <span class="cp">%}</span>
            <span class="p">&lt;</span><span class="nt">li</span><span class="p">&gt;</span>
                <span class="cp">{{</span> <span class="nv">transition.name</span> <span class="cp">}}</span>:
                <span class="p">&lt;</span><span class="nt">code</span><span class="p">&gt;</span><span class="cp">{{</span> <span class="nv">workflow_metadata</span><span class="o">(</span><span class="nv">blog_post</span><span class="o">,</span> <span class="s1">&#39;priority&#39;</span><span class="o">,</span> <span class="nv">transition</span><span class="o">)</span> <span class="o">?:</span> <span class="m">0</span> <span class="cp">}}</span><span class="p">&lt;/</span><span class="nt">code</span><span class="p">&gt;</span>
            <span class="p">&lt;/</span><span class="nt">li</span><span class="p">&gt;</span>
        <span class="cp">{%</span> <span class="k">endfor</span> <span class="cp">%}</span>
    <span class="p">&lt;/</span><span class="nt">ul</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">p</span><span class="p">&gt;</span>
</pre></div>
</td></tr></table></div>
</div>
<div class="section" id="learn-more">
<h2>Learn more</h2>
<div class="toctree-wrapper compound">
<ul>
<li class="toctree-l1"><a class="reference internal" href="workflow/workflow-and-state-machine.xhtml">Workflows and State Machines</a></li>
<li class="toctree-l1"><a class="reference internal" href="workflow/dumping-workflows.xhtml">How to Dump Workflows</a></li>
</ul>
</div>
</div>
</div>


          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>