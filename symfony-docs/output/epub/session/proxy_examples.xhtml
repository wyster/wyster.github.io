<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <title>Session Proxy Examples</title>
    <link rel="stylesheet" href="../_static/epub.css" type="text/css" />
    <link rel="stylesheet" href="../_static/pygments.css" type="text/css" />
    <link rel="stylesheet" type="text/css" href="../_static/rtd_custom.css" /> 
  </head><body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <div class="section" id="session-proxy-examples">
<span id="index-0"></span><h1>Session Proxy Examples</h1>
<p>The session proxy mechanism has a variety of uses and this article demonstrates
two common uses. Rather than using the regular session handler, you can create
a custom save handler by defining a class that extends the
<code class="docutils literal notranslate"><a class="reference external" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Component/HttpFoundation/Session/Storage/Proxy/SessionHandlerProxy.php" title="Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy"><span class="pre">SessionHandlerProxy</span></a><span class="link-target"> <span class="pre">[https://github.com/symfony/symfony/blob/master/src/Symfony/Component/HttpFoundation/Session/Storage/Proxy/SessionHandlerProxy.php]</span></span></code>
class.</p>
<p>Then, define the class as a <a class="reference internal" href="../service_container.xhtml#service-container-creating-service"><span class="std std-ref">service</span></a>.
If youâ€™re using the <a class="reference internal" href="../service_container.xhtml#service-container-services-load-example"><span class="std std-ref">default services.yaml configuration</span></a>,
that happens automatically.</p>
<p>Finally, use the <code class="docutils literal notranslate"><span class="pre">framework.session.handler_id</span></code> configuration option to tell
Symfony to use your session handler instead of the default one:</p>
<div class="configuration-block">
<ul class="simple">
<li><p><em>YAML</em><div class="highlight-yaml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1"># config/packages/framework.yaml</span>
<span class="l l-Scalar l-Scalar-Plain">framework</span><span class="p p-Indicator">:</span>
    <span class="l l-Scalar l-Scalar-Plain">session</span><span class="p p-Indicator">:</span>
        <span class="c1"># ...</span>
        <span class="l l-Scalar l-Scalar-Plain">handler_id</span><span class="p p-Indicator">:</span> <span class="l l-Scalar l-Scalar-Plain">App\Session\CustomSessionHandler</span>
</pre></div>
</td></tr></table></div>
</p></li>
<li><p><em>XML</em><div class="highlight-xml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c">&lt;!-- config/packages/framework.xml --&gt;</span>
<span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span>
<span class="nt">&lt;container</span> <span class="na">xmlns=</span><span class="s">&quot;http://symfony.com/schema/dic/services&quot;</span>
    <span class="na">xmlns:xsi=</span><span class="s">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span>
    <span class="na">xmlns:framework=</span><span class="s">&quot;http://symfony.com/schema/dic/symfony&quot;</span>
    <span class="na">xsi:schemaLocation=</span><span class="s">&quot;http://symfony.com/schema/dic/services</span>
<span class="s">        https://symfony.com/schema/dic/services/services-1.0.xsd&quot;</span><span class="nt">&gt;</span>

    <span class="nt">&lt;framework:config&gt;</span>
        <span class="nt">&lt;framework:session</span> <span class="na">handler-id=</span><span class="s">&quot;App\Session\CustomSessionHandler&quot;</span><span class="nt">/&gt;</span>
    <span class="nt">&lt;/framework:config&gt;</span>
<span class="nt">&lt;/container&gt;</span>
</pre></div>
</td></tr></table></div>
</p></li>
<li><p><em>PHP</em><div class="highlight-php notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6
7
8
9</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1">// config/packages/framework.php</span>
<span class="k">use</span> <span class="nx">App\Session\CustomSessionHandler</span><span class="p">;</span>
<span class="nv">$container</span><span class="o">-&gt;</span><span class="na">loadFromExtension</span><span class="p">(</span><span class="s1">&#39;framework&#39;</span><span class="p">,</span> <span class="p">[</span>
    <span class="c1">// ...</span>
    <span class="s1">&#39;session&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
        <span class="c1">// ...</span>
        <span class="s1">&#39;handler_id&#39;</span> <span class="o">=&gt;</span> <span class="nx">CustomSessionHandler</span><span class="o">::</span><span class="na">class</span><span class="p">,</span>
    <span class="p">],</span>
<span class="p">]);</span>
</pre></div>
</td></tr></table></div>
</p></li>
</ul>
</div>
<p>Keep reading the next sections to learn how to use the session handlers in practice
to solve two common use cases: encrypt session information and define read-only
guest sessions.</p>
<div class="section" id="encryption-of-session-data">
<h2>Encryption of Session Data</h2>
<p>If you want to encrypt the session data, you can use the proxy to encrypt and
decrypt the session as required. The following example uses the <a class="reference external" href="https://github.com/defuse/php-encryption">php-encryption</a><span class="link-target"> [https://github.com/defuse/php-encryption]</span>
library, but you can adapt it to any other library that you may be using:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="c1">// src/Session/EncryptedSessionProxy.php</span>
<span class="k">namespace</span> <span class="nx">App\Session</span><span class="p">;</span>

<span class="k">use</span> <span class="nx">Defuse\Crypto\Crypto</span><span class="p">;</span>
<span class="k">use</span> <span class="nx">Defuse\Crypto\Key</span><span class="p">;</span>
<span class="k">use</span> <span class="nx">Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy</span><span class="p">;</span>

<span class="k">class</span> <span class="nc">EncryptedSessionProxy</span> <span class="k">extends</span> <span class="nx">SessionHandlerProxy</span>
<span class="p">{</span>
    <span class="k">private</span> <span class="nv">$key</span><span class="p">;</span>

    <span class="k">public</span> <span class="k">function</span> <span class="fm">__construct</span><span class="p">(</span><span class="nx">\SessionHandlerInterface</span> <span class="nv">$handler</span><span class="p">,</span> <span class="nx">Key</span> <span class="nv">$key</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">key</span> <span class="o">=</span> <span class="nv">$key</span><span class="p">;</span>

        <span class="k">parent</span><span class="o">::</span><span class="na">__construct</span><span class="p">(</span><span class="nv">$handler</span><span class="p">);</span>
    <span class="p">}</span>

    <span class="k">public</span> <span class="k">function</span> <span class="nf">read</span><span class="p">(</span><span class="nv">$id</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="nv">$data</span> <span class="o">=</span> <span class="k">parent</span><span class="o">::</span><span class="na">read</span><span class="p">(</span><span class="nv">$id</span><span class="p">);</span>

        <span class="k">return</span> <span class="nx">Crypto</span><span class="o">::</span><span class="na">decrypt</span><span class="p">(</span><span class="nv">$data</span><span class="p">,</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">key</span><span class="p">);</span>
    <span class="p">}</span>

    <span class="k">public</span> <span class="k">function</span> <span class="nf">write</span><span class="p">(</span><span class="nv">$id</span><span class="p">,</span> <span class="nv">$data</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="nv">$data</span> <span class="o">=</span> <span class="nx">Crypto</span><span class="o">::</span><span class="na">encrypt</span><span class="p">(</span><span class="nv">$data</span><span class="p">,</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">key</span><span class="p">);</span>

        <span class="k">return</span> <span class="k">parent</span><span class="o">::</span><span class="na">write</span><span class="p">(</span><span class="nv">$id</span><span class="p">,</span> <span class="nv">$data</span><span class="p">);</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>
</div>
</div>
<div class="section" id="read-only-guest-sessions">
<h2>Read-only Guest Sessions</h2>
<p>There are some applications where a session is required for guest users, but
where there is no particular need to persist the session. In this case you
can intercept the session before it is written:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="c1">// src/Session/ReadOnlySessionProxy.php</span>
<span class="k">namespace</span> <span class="nx">App\Session</span><span class="p">;</span>

<span class="k">use</span> <span class="nx">App\Entity\User</span><span class="p">;</span>
<span class="k">use</span> <span class="nx">Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy</span><span class="p">;</span>
<span class="k">use</span> <span class="nx">Symfony\Component\Security\Core\Security</span><span class="p">;</span>

<span class="k">class</span> <span class="nc">ReadOnlySessionProxy</span> <span class="k">extends</span> <span class="nx">SessionHandlerProxy</span>
<span class="p">{</span>
    <span class="k">private</span> <span class="nv">$security</span><span class="p">;</span>

    <span class="k">public</span> <span class="k">function</span> <span class="fm">__construct</span><span class="p">(</span><span class="nx">\SessionHandlerInterface</span> <span class="nv">$handler</span><span class="p">,</span> <span class="nx">Security</span> <span class="nv">$security</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">security</span> <span class="o">=</span> <span class="nv">$security</span><span class="p">;</span>

        <span class="k">parent</span><span class="o">::</span><span class="na">__construct</span><span class="p">(</span><span class="nv">$handler</span><span class="p">);</span>
    <span class="p">}</span>

    <span class="k">public</span> <span class="k">function</span> <span class="nf">write</span><span class="p">(</span><span class="nv">$id</span><span class="p">,</span> <span class="nv">$data</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">if</span> <span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">getUser</span><span class="p">()</span> <span class="o">&amp;&amp;</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">getUser</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">isGuest</span><span class="p">())</span> <span class="p">{</span>
            <span class="k">return</span><span class="p">;</span>
        <span class="p">}</span>

        <span class="k">return</span> <span class="k">parent</span><span class="o">::</span><span class="na">write</span><span class="p">(</span><span class="nv">$id</span><span class="p">,</span> <span class="nv">$data</span><span class="p">);</span>
    <span class="p">}</span>

    <span class="k">private</span> <span class="k">function</span> <span class="nf">getUser</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="nv">$user</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">security</span><span class="o">-&gt;</span><span class="na">getUser</span><span class="p">();</span>
        <span class="k">if</span> <span class="p">(</span><span class="nb">is_object</span><span class="p">(</span><span class="nv">$user</span><span class="p">))</span> <span class="p">{</span>
            <span class="k">return</span> <span class="nv">$user</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>
</div>
</div>
</div>


          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>