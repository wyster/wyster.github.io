<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <title>Store Sessions in a Database</title>
    <link rel="stylesheet" href="../_static/epub.css" type="text/css" />
    <link rel="stylesheet" href="../_static/pygments.css" type="text/css" />
    <link rel="stylesheet" type="text/css" href="../_static/rtd_custom.css" /> 
  </head><body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <div class="section" id="store-sessions-in-a-database">
<span id="index-0"></span><h1>Store Sessions in a Database</h1>
<p>Symfony stores sessions in files by default. If your application is served by
multiple servers, you’ll need to use instead a database to make sessions work
across different servers.</p>
<p>Symfony can store sessions in all kinds of databases (relational, NoSQL and
key-value) but recommends key-value databases like Redis to get best performance.</p>
<div class="section" id="store-sessions-in-a-key-value-database-redis">
<h2>Store Sessions in a key-value Database (Redis)</h2>
<p>This section assumes that you have a fully-working Redis server and have also
installed and configured the <a class="reference external" href="https://github.com/phpredis/phpredis">phpredis extension</a><span class="link-target"> [https://github.com/phpredis/phpredis]</span>.</p>
<p>First, define a Symfony service for the connection to the Redis server:</p>
<div class="configuration-block">
<ul class="simple">
<li><p><em>YAML</em><div class="highlight-yaml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1"># config/services.yaml</span>
<span class="l l-Scalar l-Scalar-Plain">services</span><span class="p p-Indicator">:</span>
    <span class="c1"># ...</span>
    <span class="l l-Scalar l-Scalar-Plain">Redis</span><span class="p p-Indicator">:</span>
        <span class="c1"># you can also use \RedisArray, \RedisCluster or \Predis\Client classes</span>
        <span class="l l-Scalar l-Scalar-Plain">class</span><span class="p p-Indicator">:</span> <span class="l l-Scalar l-Scalar-Plain">Redis</span>
        <span class="l l-Scalar l-Scalar-Plain">calls</span><span class="p p-Indicator">:</span>
            <span class="p p-Indicator">-</span> <span class="l l-Scalar l-Scalar-Plain">connect</span><span class="p p-Indicator">:</span>
                <span class="p p-Indicator">-</span> <span class="s">&#39;%env(REDIS_HOST)%&#39;</span>
                <span class="p p-Indicator">-</span> <span class="s">&#39;%env(int:REDIS_PORT)%&#39;</span>

            <span class="c1"># uncomment the following if your Redis server requires a password</span>
            <span class="c1"># - auth:</span>
            <span class="c1">#     - &#39;%env(REDIS_PASSWORD)%&#39;</span>
</pre></div>
</td></tr></table></div>
</p></li>
<li><p><em>XML</em><div class="highlight-xml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span>
<span class="nt">&lt;container</span> <span class="na">xmlns=</span><span class="s">&quot;http://symfony.com/schema/dic/services&quot;</span>
    <span class="na">xmlns:xsi=</span><span class="s">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span>
    <span class="na">xsi:schemaLocation=</span><span class="s">&quot;http://symfony.com/schema/dic/services https://symfony.com/schema/dic/services/services-1.0.xsd&quot;</span><span class="nt">&gt;</span>

    <span class="nt">&lt;services&gt;</span>
        <span class="c">&lt;!-- you can also use \RedisArray, \RedisCluster or \Predis\Client classes --&gt;</span>
        <span class="nt">&lt;service</span> <span class="na">id=</span><span class="s">&quot;Redis&quot;</span> <span class="na">class=</span><span class="s">&quot;Redis&quot;</span><span class="nt">&gt;</span>
            <span class="nt">&lt;call</span> <span class="na">method=</span><span class="s">&quot;connect&quot;</span><span class="nt">&gt;</span>
                <span class="nt">&lt;argument&gt;</span>%env(REDIS_HOST)%<span class="nt">&lt;/argument&gt;</span>
                <span class="nt">&lt;argument&gt;</span>%env(int:REDIS_PORT)%<span class="nt">&lt;/argument&gt;</span>
            <span class="nt">&lt;/call&gt;</span>

            <span class="c">&lt;!-- uncomment the following if your Redis server requires a password:</span>
<span class="c">            &lt;call method=&quot;auth&quot;&gt;</span>
<span class="c">                &lt;argument&gt;%env(REDIS_PASSWORD)%&lt;/argument&gt;</span>
<span class="c">            &lt;/call&gt; --&gt;</span>
        <span class="nt">&lt;/service&gt;</span>
    <span class="nt">&lt;/services&gt;</span>
<span class="nt">&lt;/container&gt;</span>
</pre></div>
</td></tr></table></div>
</p></li>
<li><p><em>PHP</em><div class="highlight-php notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="k">use</span> <span class="nx">Symfony\Component\DependencyInjection\Reference</span><span class="p">;</span>

<span class="c1">// ...</span>
<span class="nv">$container</span>
    <span class="c1">// you can also use \RedisArray, \RedisCluster or \Predis\Client classes</span>
    <span class="o">-&gt;</span><span class="na">register</span><span class="p">(</span><span class="s1">&#39;Redis&#39;</span><span class="p">,</span> <span class="nx">\Redis</span><span class="o">::</span><span class="na">class</span><span class="p">)</span>
    <span class="o">-&gt;</span><span class="na">addMethodCall</span><span class="p">(</span><span class="s1">&#39;connect&#39;</span><span class="p">,</span> <span class="p">[</span><span class="s1">&#39;%env(REDIS_HOST)%&#39;</span><span class="p">,</span> <span class="s1">&#39;%env(int:REDIS_PORT)%&#39;</span><span class="p">])</span>
    <span class="c1">// uncomment the following if your Redis server requires a password:</span>
    <span class="c1">// -&gt;addMethodCall(&#39;auth&#39;, [&#39;%env(REDIS_PASSWORD)%&#39;])</span>
<span class="p">;</span>
</pre></div>
</td></tr></table></div>
</p></li>
</ul>
</div>
<p>Now pass this <code class="docutils literal notranslate"><span class="pre">\Redis</span></code> connection as an argument of the service associated to the
<code class="docutils literal notranslate"><a class="reference external" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Component/HttpFoundation/Session/Storage/Handler/RedisSessionHandler.php" title="Symfony\Component\HttpFoundation\Session\Storage\Handler\RedisSessionHandler"><span class="pre">RedisSessionHandler</span></a><span class="link-target"> <span class="pre">[https://github.com/symfony/symfony/blob/master/src/Symfony/Component/HttpFoundation/Session/Storage/Handler/RedisSessionHandler.php]</span></span></code>.
This argument can also be a <code class="docutils literal notranslate"><span class="pre">\RedisArray</span></code>, <code class="docutils literal notranslate"><span class="pre">\RedisCluster</span></code>, <code class="docutils literal notranslate"><span class="pre">\Predis\Client</span></code>,
and <code class="docutils literal notranslate"><span class="pre">RedisProxy</span></code>:</p>
<div class="configuration-block">
<ul class="simple">
<li><p><em>YAML</em><div class="highlight-yaml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6
7
8
9</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1"># config/services.yaml</span>
<span class="l l-Scalar l-Scalar-Plain">services</span><span class="p p-Indicator">:</span>
    <span class="c1"># ...</span>
    <span class="l l-Scalar l-Scalar-Plain">Symfony\Component\HttpFoundation\Session\Storage\Handler\RedisSessionHandler</span><span class="p p-Indicator">:</span>
        <span class="l l-Scalar l-Scalar-Plain">arguments</span><span class="p p-Indicator">:</span>
            <span class="p p-Indicator">-</span> <span class="s">&#39;@Redis&#39;</span>
            <span class="c1"># you can optionally pass an array of options. The only option is &#39;prefix&#39;,</span>
            <span class="c1"># which defines the prefix to use for the keys to avoid collision on the Redis server</span>
            <span class="c1"># - { prefix: &#39;my_prefix&#39; }</span>
</pre></div>
</td></tr></table></div>
</p></li>
<li><p><em>XML</em><div class="highlight-xml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c">&lt;!-- config/services.xml --&gt;</span>
<span class="nt">&lt;services&gt;</span>
    <span class="nt">&lt;service</span> <span class="na">id=</span><span class="s">&quot;Symfony\Component\HttpFoundation\Session\Storage\Handler\RedisSessionHandler&quot;</span><span class="nt">&gt;</span>
        <span class="nt">&lt;argument</span> <span class="na">type=</span><span class="s">&quot;service&quot;</span> <span class="na">id=</span><span class="s">&quot;Redis&quot;</span><span class="nt">/&gt;</span>
        <span class="c">&lt;!-- you can optionally pass an array of options. The only option is &#39;prefix&#39;,</span>
<span class="c">             which defines the prefix to use for the keys to avoid collision on the Redis server:</span>
<span class="c">        &lt;argument type=&quot;collection&quot;&gt;</span>
<span class="c">            &lt;argument key=&quot;prefix&quot;&gt;my_prefix&lt;/argument&gt;</span>
<span class="c">        &lt;/argument&gt; --&gt;</span>
    <span class="nt">&lt;/service&gt;</span>
<span class="nt">&lt;/services&gt;</span>
</pre></div>
</td></tr></table></div>
</p></li>
<li><p><em>PHP</em><div class="highlight-php notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1">// config/services.php</span>
<span class="k">use</span> <span class="nx">Symfony\Component\HttpFoundation\Session\Storage\Handler\RedisSessionHandler</span><span class="p">;</span>

<span class="nv">$container</span>
    <span class="o">-&gt;</span><span class="na">register</span><span class="p">(</span><span class="nx">RedisSessionHandler</span><span class="o">::</span><span class="na">class</span><span class="p">)</span>
    <span class="o">-&gt;</span><span class="na">addArgument</span><span class="p">(</span>
        <span class="k">new</span> <span class="nx">Reference</span><span class="p">(</span><span class="s1">&#39;Redis&#39;</span><span class="p">),</span>
        <span class="c1">// you can optionally pass an array of options. The only option is &#39;prefix&#39;,</span>
        <span class="c1">// which defines the prefix to use for the keys to avoid collision on the Redis server:</span>
        <span class="c1">// [&#39;prefix&#39; =&gt; &#39;my_prefix&#39;],</span>
    <span class="p">);</span>
</pre></div>
</td></tr></table></div>
</p></li>
</ul>
</div>
<p>Next, use the <a class="reference internal" href="../reference/configuration/framework.xhtml#config-framework-session-handler-id"><span class="std std-ref">handler_id</span></a>
configuration option to tell Symfony to use this service as the session handler:</p>
<div class="configuration-block">
<ul class="simple">
<li><p><em>YAML</em><div class="highlight-yaml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1"># config/packages/framework.yaml</span>
<span class="l l-Scalar l-Scalar-Plain">framework</span><span class="p p-Indicator">:</span>
    <span class="c1"># ...</span>
    <span class="l l-Scalar l-Scalar-Plain">session</span><span class="p p-Indicator">:</span>
        <span class="l l-Scalar l-Scalar-Plain">handler_id</span><span class="p p-Indicator">:</span> <span class="l l-Scalar l-Scalar-Plain">Symfony\Component\HttpFoundation\Session\Storage\Handler\RedisSessionHandler</span>
</pre></div>
</td></tr></table></div>
</p></li>
<li><p><em>XML</em><div class="highlight-xml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c">&lt;!-- config/packages/framework.xml --&gt;</span>
<span class="nt">&lt;framework:config&gt;</span>
    <span class="c">&lt;!-- ... --&gt;</span>
    <span class="nt">&lt;framework:session</span> <span class="na">handler-id=</span><span class="s">&quot;Symfony\Component\HttpFoundation\Session\Storage\Handler\RedisSessionHandler&quot;</span><span class="nt">/&gt;</span>
<span class="nt">&lt;/framework:config&gt;</span>
</pre></div>
</td></tr></table></div>
</p></li>
<li><p><em>PHP</em><div class="highlight-php notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1">// config/packages/framework.php</span>
<span class="k">use</span> <span class="nx">Symfony\Component\HttpFoundation\Session\Storage\Handler\RedisSessionHandler</span><span class="p">;</span>

<span class="c1">// ...</span>
<span class="nv">$container</span><span class="o">-&gt;</span><span class="na">loadFromExtension</span><span class="p">(</span><span class="s1">&#39;framework&#39;</span><span class="p">,</span> <span class="p">[</span>
    <span class="c1">// ...</span>
    <span class="s1">&#39;session&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
        <span class="s1">&#39;handler_id&#39;</span> <span class="o">=&gt;</span> <span class="nx">RedisSessionHandler</span><span class="o">::</span><span class="na">class</span><span class="p">,</span>
    <span class="p">],</span>
<span class="p">]);</span>
</pre></div>
</td></tr></table></div>
</p></li>
</ul>
</div>
<p>That’s all! Symfony will now use your Redis server to read and write the session
data. The main drawback of this solution is that Redis does not perform session
locking, so you can face <em>race conditions</em> when accessing sessions. For example,
you may see an <em>“Invalid CSRF token”</em> error because two requests were made in
parallel and only the first one stored the CSRF token in the session.</p>
<div class="admonition seealso">
<p class="admonition-title">See also</p>
<p>If you use Memcached instead of Redis, follow a similar approach but replace
<code class="docutils literal notranslate"><span class="pre">RedisSessionHandler</span></code> by <code class="docutils literal notranslate"><a class="reference external" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Component/HttpFoundation/Session/Storage/Handler/MemcachedSessionHandler.php" title="Symfony\Component\HttpFoundation\Session\Storage\Handler\MemcachedSessionHandler"><span class="pre">MemcachedSessionHandler</span></a><span class="link-target"> <span class="pre">[https://github.com/symfony/symfony/blob/master/src/Symfony/Component/HttpFoundation/Session/Storage/Handler/MemcachedSessionHandler.php]</span></span></code>.</p>
</div>
</div>
<div class="section" id="store-sessions-in-a-relational-database-mysql-postgresql">
<h2>Store Sessions in a Relational Database (MySQL, PostgreSQL)</h2>
<p>Symfony includes a <code class="docutils literal notranslate"><a class="reference external" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Component/HttpFoundation/Session/Storage/Handler/PdoSessionHandler.php" title="Symfony\Component\HttpFoundation\Session\Storage\Handler\PdoSessionHandler"><span class="pre">PdoSessionHandler</span></a><span class="link-target"> <span class="pre">[https://github.com/symfony/symfony/blob/master/src/Symfony/Component/HttpFoundation/Session/Storage/Handler/PdoSessionHandler.php]</span></span></code>
to store sessions in relational databases like MySQL and PostgreSQL. To use it,
first register a new handler service with your database credentials:</p>
<div class="configuration-block">
<ul class="simple">
<li><p><em>YAML</em><div class="highlight-yaml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1"># config/services.yaml</span>
<span class="l l-Scalar l-Scalar-Plain">services</span><span class="p p-Indicator">:</span>
    <span class="c1"># ...</span>

    <span class="l l-Scalar l-Scalar-Plain">Symfony\Component\HttpFoundation\Session\Storage\Handler\PdoSessionHandler</span><span class="p p-Indicator">:</span>
        <span class="l l-Scalar l-Scalar-Plain">arguments</span><span class="p p-Indicator">:</span>
            <span class="p p-Indicator">-</span> <span class="s">&#39;%env(DATABASE_URL)%&#39;</span>

            <span class="c1"># you can also use PDO configuration, but requires passing two arguments</span>
            <span class="c1"># - &#39;mysql:dbname=mydatabase; host=myhost; port=myport&#39;</span>
            <span class="c1"># - { db_username: myuser, db_password: mypassword }</span>
</pre></div>
</td></tr></table></div>
</p></li>
<li><p><em>XML</em><div class="highlight-xml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c">&lt;!-- config/services.xml --&gt;</span>
<span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span>
<span class="nt">&lt;container</span> <span class="na">xmlns=</span><span class="s">&quot;http://symfony.com/schema/dic/services&quot;</span>
    <span class="na">xmlns:xsi=</span><span class="s">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span>
    <span class="na">xmlns:framework=</span><span class="s">&quot;http://symfony.com/schema/dic/symfony&quot;</span>
    <span class="na">xsi:schemaLocation=</span><span class="s">&quot;http://symfony.com/schema/dic/services</span>
<span class="s">        https://symfony.com/schema/dic/services/services-1.0.xsd</span>
<span class="s">        https://symfony.com/schema/dic/symfony/symfony-1.0.xsd&quot;</span><span class="nt">&gt;</span>

    <span class="nt">&lt;services&gt;</span>
        <span class="nt">&lt;service</span> <span class="na">id=</span><span class="s">&quot;Symfony\Component\HttpFoundation\Session\Storage\Handler\PdoSessionHandler&quot;</span> <span class="na">public=</span><span class="s">&quot;false&quot;</span><span class="nt">&gt;</span>
            <span class="nt">&lt;argument&gt;</span>%env(DATABASE_URL)%<span class="nt">&lt;/argument&gt;</span>

            <span class="c">&lt;!-- you can also use PDO configuration, but requires passing two arguments: --&gt;</span>
            <span class="c">&lt;!-- &lt;argument&gt;mysql:dbname=mydatabase, host=myhost&lt;/argument&gt;</span>
<span class="c">                &lt;argument type=&quot;collection&quot;&gt;</span>
<span class="c">                    &lt;argument key=&quot;db_username&quot;&gt;myuser&lt;/argument&gt;</span>
<span class="c">                    &lt;argument key=&quot;db_password&quot;&gt;mypassword&lt;/argument&gt;</span>
<span class="c">                &lt;/argument&gt; --&gt;</span>
        <span class="nt">&lt;/service&gt;</span>
    <span class="nt">&lt;/services&gt;</span>
<span class="nt">&lt;/container&gt;</span>
</pre></div>
</td></tr></table></div>
</p></li>
<li><p><em>PHP</em><div class="highlight-php notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1">// config/services.php</span>
<span class="k">use</span> <span class="nx">Symfony\Component\HttpFoundation\Session\Storage\Handler\PdoSessionHandler</span><span class="p">;</span>

<span class="nv">$storageDefinition</span> <span class="o">=</span> <span class="nv">$container</span><span class="o">-&gt;</span><span class="na">autowire</span><span class="p">(</span><span class="nx">PdoSessionHandler</span><span class="o">::</span><span class="na">class</span><span class="p">)</span>
    <span class="o">-&gt;</span><span class="na">setArguments</span><span class="p">([</span>
        <span class="s1">&#39;%env(DATABASE_URL)%&#39;</span><span class="p">,</span>
        <span class="c1">// you can also use PDO configuration, but requires passing two arguments:</span>
        <span class="c1">// &#39;mysql:dbname=mydatabase; host=myhost; port=myport&#39;,</span>
        <span class="c1">// [&#39;db_username&#39; =&gt; &#39;myuser&#39;, &#39;db_password&#39; =&gt; &#39;mypassword&#39;],</span>
    <span class="p">])</span>
<span class="p">;</span>
</pre></div>
</td></tr></table></div>
</p></li>
</ul>
</div>
<p>Next, use the <a class="reference internal" href="../reference/configuration/framework.xhtml#config-framework-session-handler-id"><span class="std std-ref">handler_id</span></a>
configuration option to tell Symfony to use this service as the session handler:</p>
<div class="configuration-block">
<ul class="simple">
<li><p><em>YAML</em><div class="highlight-yaml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1"># config/packages/framework.yaml</span>
<span class="l l-Scalar l-Scalar-Plain">framework</span><span class="p p-Indicator">:</span>
    <span class="l l-Scalar l-Scalar-Plain">session</span><span class="p p-Indicator">:</span>
        <span class="c1"># ...</span>
        <span class="l l-Scalar l-Scalar-Plain">handler_id</span><span class="p p-Indicator">:</span> <span class="l l-Scalar l-Scalar-Plain">Symfony\Component\HttpFoundation\Session\Storage\Handler\PdoSessionHandler</span>
</pre></div>
</td></tr></table></div>
</p></li>
<li><p><em>XML</em><div class="highlight-xml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c">&lt;!-- config/packages/framework.xml --&gt;</span>
<span class="nt">&lt;framework:config&gt;</span>
    <span class="c">&lt;!-- ... --&gt;</span>
    <span class="nt">&lt;framework:session</span>
        <span class="na">handler-id=</span><span class="s">&quot;Symfony\Component\HttpFoundation\Session\Storage\Handler\PdoSessionHandler&quot;</span><span class="nt">/&gt;</span>
<span class="nt">&lt;/framework:config&gt;</span>
</pre></div>
</td></tr></table></div>
</p></li>
<li><p><em>PHP</em><div class="highlight-php notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1">// config/packages/framework.php</span>
<span class="k">use</span> <span class="nx">Symfony\Component\HttpFoundation\Session\Storage\Handler\PdoSessionHandler</span><span class="p">;</span>

<span class="c1">// ...</span>
<span class="nv">$container</span><span class="o">-&gt;</span><span class="na">loadFromExtension</span><span class="p">(</span><span class="s1">&#39;framework&#39;</span><span class="p">,</span> <span class="p">[</span>
    <span class="c1">// ...</span>
    <span class="s1">&#39;session&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
        <span class="s1">&#39;handler_id&#39;</span> <span class="o">=&gt;</span> <span class="nx">PdoSessionHandler</span><span class="o">::</span><span class="na">class</span><span class="p">,</span>
    <span class="p">],</span>
<span class="p">]);</span>
</pre></div>
</td></tr></table></div>
</p></li>
</ul>
</div>
<div class="section" id="configuring-the-session-table-and-column-names">
<h3>Configuring the Session Table and Column Names</h3>
<p>The table used to store sessions is called <code class="docutils literal notranslate"><span class="pre">sessions</span></code> by default and defines
certain column names. You can configure these values with the second argument
passed to the <code class="docutils literal notranslate"><span class="pre">PdoSessionHandler</span></code> service:</p>
<div class="configuration-block">
<ul class="simple">
<li><p><em>YAML</em><div class="highlight-yaml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6
7
8</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1"># config/services.yaml</span>
<span class="l l-Scalar l-Scalar-Plain">services</span><span class="p p-Indicator">:</span>
    <span class="c1"># ...</span>

    <span class="l l-Scalar l-Scalar-Plain">Symfony\Component\HttpFoundation\Session\Storage\Handler\PdoSessionHandler</span><span class="p p-Indicator">:</span>
        <span class="l l-Scalar l-Scalar-Plain">arguments</span><span class="p p-Indicator">:</span>
            <span class="p p-Indicator">-</span> <span class="s">&#39;%env(DATABASE_URL)%&#39;</span>
            <span class="p p-Indicator">-</span> <span class="p p-Indicator">{</span> <span class="nv">db_table</span><span class="p p-Indicator">:</span> <span class="s">&#39;customer_session&#39;</span><span class="p p-Indicator">,</span> <span class="nv">db_id_col</span><span class="p p-Indicator">:</span> <span class="s">&#39;guid&#39;</span> <span class="p p-Indicator">}</span>
</pre></div>
</td></tr></table></div>
</p></li>
<li><p><em>XML</em><div class="highlight-xml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c">&lt;!-- config/services.xml --&gt;</span>
<span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span>
<span class="nt">&lt;container</span> <span class="na">xmlns=</span><span class="s">&quot;http://symfony.com/schema/dic/services&quot;</span>
    <span class="na">xmlns:xsi=</span><span class="s">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span>
    <span class="na">xsi:schemaLocation=</span><span class="s">&quot;http://symfony.com/schema/dic/services</span>
<span class="s">        https://symfony.com/schema/dic/services/services-1.0.xsd&quot;</span><span class="nt">&gt;</span>

    <span class="nt">&lt;services&gt;</span>
        <span class="nt">&lt;service</span> <span class="na">id=</span><span class="s">&quot;Symfony\Component\HttpFoundation\Session\Storage\Handler\PdoSessionHandler&quot;</span> <span class="na">public=</span><span class="s">&quot;false&quot;</span><span class="nt">&gt;</span>
            <span class="nt">&lt;argument&gt;</span>%env(DATABASE_URL)%<span class="nt">&lt;/argument&gt;</span>
            <span class="nt">&lt;argument</span> <span class="na">type=</span><span class="s">&quot;collection&quot;</span><span class="nt">&gt;</span>
                <span class="nt">&lt;argument</span> <span class="na">key=</span><span class="s">&quot;db_table&quot;</span><span class="nt">&gt;</span>customer_session<span class="nt">&lt;/argument&gt;</span>
                <span class="nt">&lt;argument</span> <span class="na">key=</span><span class="s">&quot;db_id_col&quot;</span><span class="nt">&gt;</span>guid<span class="nt">&lt;/argument&gt;</span>
            <span class="nt">&lt;/argument&gt;</span>
        <span class="nt">&lt;/service&gt;</span>
    <span class="nt">&lt;/services&gt;</span>
<span class="nt">&lt;/container&gt;</span>
</pre></div>
</td></tr></table></div>
</p></li>
<li><p><em>PHP</em><div class="highlight-php notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1">// config/services.php</span>
<span class="k">use</span> <span class="nx">Symfony\Component\HttpFoundation\Session\Storage\Handler\PdoSessionHandler</span><span class="p">;</span>
<span class="c1">// ...</span>

<span class="nv">$container</span><span class="o">-&gt;</span><span class="na">autowire</span><span class="p">(</span><span class="nx">PdoSessionHandler</span><span class="o">::</span><span class="na">class</span><span class="p">)</span>
    <span class="o">-&gt;</span><span class="na">setArguments</span><span class="p">([</span>
        <span class="s1">&#39;%env(DATABASE_URL)%&#39;</span><span class="p">,</span>
        <span class="p">[</span><span class="s1">&#39;db_table&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;customer_session&#39;</span><span class="p">,</span> <span class="s1">&#39;db_id_col&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;guid&#39;</span><span class="p">],</span>
    <span class="p">])</span>
<span class="p">;</span>
</pre></div>
</td></tr></table></div>
</p></li>
</ul>
</div>
<p>These are parameters that you can configure:</p>
<dl class="simple">
<dt><code class="docutils literal notranslate"><span class="pre">db_table</span></code> (default <code class="docutils literal notranslate"><span class="pre">sessions</span></code>):</dt>
<dd><p>The name of the session table in your database;</p>
</dd>
<dt><code class="docutils literal notranslate"><span class="pre">db_username</span></code>: (default: <code class="docutils literal notranslate"><span class="pre">''</span></code>)</dt>
<dd><p>The username used to connect when using the PDO configuration (when using
the connection based on the <code class="docutils literal notranslate"><span class="pre">DATABASE_URL</span></code> env var, it overrides the
username defined in the env var).</p>
</dd>
<dt><code class="docutils literal notranslate"><span class="pre">db_password</span></code>: (default: <code class="docutils literal notranslate"><span class="pre">''</span></code>)</dt>
<dd><p>The password used to connect when using the PDO configuration (when using
the connection based on the <code class="docutils literal notranslate"><span class="pre">DATABASE_URL</span></code> env var, it overrides the
password defined in the env var).</p>
</dd>
<dt><code class="docutils literal notranslate"><span class="pre">db_id_col</span></code> (default <code class="docutils literal notranslate"><span class="pre">sess_id</span></code>):</dt>
<dd><p>The name of the column where to store the session ID (column type: <code class="docutils literal notranslate"><span class="pre">VARCHAR(128)</span></code>);</p>
</dd>
<dt><code class="docutils literal notranslate"><span class="pre">db_data_col</span></code> (default <code class="docutils literal notranslate"><span class="pre">sess_data</span></code>):</dt>
<dd><p>The name of the column where to store the session data (column type: <code class="docutils literal notranslate"><span class="pre">BLOB</span></code>);</p>
</dd>
<dt><code class="docutils literal notranslate"><span class="pre">db_time_col</span></code> (default <code class="docutils literal notranslate"><span class="pre">sess_time</span></code>):</dt>
<dd><p>The name of the column where to store the session creation timestamp (column type: <code class="docutils literal notranslate"><span class="pre">INTEGER</span></code>);</p>
</dd>
<dt><code class="docutils literal notranslate"><span class="pre">db_lifetime_col</span></code> (default <code class="docutils literal notranslate"><span class="pre">sess_lifetime</span></code>):</dt>
<dd><p>The name of the column where to store the session lifetime (column type: <code class="docutils literal notranslate"><span class="pre">INTEGER</span></code>);</p>
</dd>
<dt><code class="docutils literal notranslate"><span class="pre">db_connection_options</span></code> (default: <code class="docutils literal notranslate"><span class="pre">[]</span></code>)</dt>
<dd><p>An array of driver-specific connection options;</p>
</dd>
<dt><code class="docutils literal notranslate"><span class="pre">lock_mode</span></code> (default: <code class="docutils literal notranslate"><span class="pre">LOCK_TRANSACTIONAL</span></code>)</dt>
<dd><p>The strategy for locking the database to avoid <em>race conditions</em>. Possible
values are <code class="docutils literal notranslate"><span class="pre">LOCK_NONE</span></code> (no locking), <code class="docutils literal notranslate"><span class="pre">LOCK_ADVISORY</span></code> (application-level
locking) and <code class="docutils literal notranslate"><span class="pre">LOCK_TRANSACTIONAL</span></code> (row-level locking).</p>
</dd>
</dl>
</div>
<div class="section" id="preparing-the-database-to-store-sessions">
<h3>Preparing the Database to Store Sessions</h3>
<p>Before storing sessions in the database, you must create the table that stores
the information. The session handler provides a method called
<code class="docutils literal notranslate"><a class="reference external" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Component/HttpFoundation/Session/Storage/Handler/PdoSessionHandler.php" title="Symfony\Component\HttpFoundation\Session\Storage\Handler\PdoSessionHandler::createTable()"><span class="pre">createTable()</span></a><span class="link-target"> <span class="pre">[https://github.com/symfony/symfony/blob/master/src/Symfony/Component/HttpFoundation/Session/Storage/Handler/PdoSessionHandler.php]</span></span></code>
to set up this table for you according to the database engine used:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="k">try</span> <span class="p">{</span>
    <span class="nv">$sessionHandlerService</span><span class="o">-&gt;</span><span class="na">createTable</span><span class="p">();</span>
<span class="p">}</span> <span class="k">catch</span> <span class="p">(</span><span class="nx">\PDOException</span> <span class="nv">$exception</span><span class="p">)</span> <span class="p">{</span>
    <span class="c1">// the table could not be created for some reason</span>
<span class="p">}</span>
</pre></div>
</div>
<p>If you prefer to set up the table yourself, it’s recommended to generate an
empty database migration with the following command:</p>
<div class="highlight-terminal notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre>1</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="gp">$</span> php bin/console doctrine:migrations:generate
</pre></div>
</td></tr></table></div>
<p>Then, find the appropriate SQL for your database below, add it to the migration
file and run the migration with the following command:</p>
<div class="highlight-terminal notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre>1</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="gp">$</span> php bin/console doctrine:migrations:migrate
</pre></div>
</td></tr></table></div>
<div class="section" id="mysql">
<h4>MySQL</h4>
<div class="highlight-sql notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="k">CREATE</span> <span class="k">TABLE</span> <span class="o">`</span><span class="n">sessions</span><span class="o">`</span> <span class="p">(</span>
    <span class="o">`</span><span class="n">sess_id</span><span class="o">`</span> <span class="n">VARBINARY</span><span class="p">(</span><span class="mi">128</span><span class="p">)</span> <span class="k">NOT</span> <span class="k">NULL</span> <span class="k">PRIMARY</span> <span class="k">KEY</span><span class="p">,</span>
    <span class="o">`</span><span class="n">sess_data</span><span class="o">`</span> <span class="nb">BLOB</span> <span class="k">NOT</span> <span class="k">NULL</span><span class="p">,</span>
    <span class="o">`</span><span class="n">sess_lifetime</span><span class="o">`</span> <span class="nb">INTEGER</span> <span class="n">UNSIGNED</span> <span class="k">NOT</span> <span class="k">NULL</span><span class="p">,</span>
    <span class="o">`</span><span class="n">sess_time</span><span class="o">`</span> <span class="nb">INTEGER</span> <span class="n">UNSIGNED</span> <span class="k">NOT</span> <span class="k">NULL</span>
<span class="p">)</span> <span class="k">COLLATE</span> <span class="n">utf8mb4_bin</span><span class="p">,</span> <span class="n">ENGINE</span> <span class="o">=</span> <span class="n">InnoDB</span><span class="p">;</span>
</pre></div>
</td></tr></table></div>
<div class="admonition note">
<p class="admonition-title">Note</p>
<p>A <code class="docutils literal notranslate"><span class="pre">BLOB</span></code> column type (which is the one used by default by <code class="docutils literal notranslate"><span class="pre">createTable()</span></code>)
stores up to 64 kb. If the user session data exceeds this, an exception may
be thrown or their session will be silently reset. Consider using a <code class="docutils literal notranslate"><span class="pre">MEDIUMBLOB</span></code>
if you need more space.</p>
</div>
</div>
<div class="section" id="postgresql">
<h4>PostgreSQL</h4>
<div class="highlight-sql notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="k">CREATE</span> <span class="k">TABLE</span> <span class="n">sessions</span> <span class="p">(</span>
    <span class="n">sess_id</span> <span class="nb">VARCHAR</span><span class="p">(</span><span class="mi">128</span><span class="p">)</span> <span class="k">NOT</span> <span class="k">NULL</span> <span class="k">PRIMARY</span> <span class="k">KEY</span><span class="p">,</span>
    <span class="n">sess_data</span> <span class="n">BYTEA</span> <span class="k">NOT</span> <span class="k">NULL</span><span class="p">,</span>
    <span class="n">sess_lifetime</span> <span class="nb">INTEGER</span> <span class="k">NOT</span> <span class="k">NULL</span><span class="p">,</span>
    <span class="n">sess_time</span> <span class="nb">INTEGER</span> <span class="k">NOT</span> <span class="k">NULL</span>
<span class="p">);</span>
</pre></div>
</td></tr></table></div>
</div>
<div class="section" id="microsoft-sql-server">
<h4>Microsoft SQL Server</h4>
<div class="highlight-sql notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="k">CREATE</span> <span class="k">TABLE</span> <span class="n">sessions</span> <span class="p">(</span>
    <span class="n">sess_id</span> <span class="nb">VARCHAR</span><span class="p">(</span><span class="mi">128</span><span class="p">)</span> <span class="k">NOT</span> <span class="k">NULL</span> <span class="k">PRIMARY</span> <span class="k">KEY</span><span class="p">,</span>
    <span class="n">sess_data</span> <span class="n">VARBINARY</span><span class="p">(</span><span class="k">MAX</span><span class="p">)</span> <span class="k">NOT</span> <span class="k">NULL</span><span class="p">,</span>
    <span class="n">sess_lifetime</span> <span class="nb">INTEGER</span> <span class="k">NOT</span> <span class="k">NULL</span><span class="p">,</span>
    <span class="n">sess_time</span> <span class="nb">INTEGER</span> <span class="k">NOT</span> <span class="k">NULL</span>
<span class="p">);</span>
</pre></div>
</td></tr></table></div>
</div>
</div>
</div>
<div class="section" id="store-sessions-in-a-nosql-database-mongodb">
<h2>Store Sessions in a NoSQL Database (MongoDB)</h2>
<p>Symfony includes a <code class="docutils literal notranslate"><a class="reference external" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Component/HttpFoundation/Session/Storage/Handler/MongoDbSessionHandler.php" title="Symfony\Component\HttpFoundation\Session\Storage\Handler\MongoDbSessionHandler"><span class="pre">MongoDbSessionHandler</span></a><span class="link-target"> <span class="pre">[https://github.com/symfony/symfony/blob/master/src/Symfony/Component/HttpFoundation/Session/Storage/Handler/MongoDbSessionHandler.php]</span></span></code>
to store sessions in the MongoDB NoSQL database. First, make sure to have a
working MongoDB connection in your Symfony application as explained in the
<a class="reference external" href="https://symfony.com/doc/master/bundles/DoctrineMongoDBBundle/config.html">DoctrineMongoDBBundle configuration</a><span class="link-target"> [https://symfony.com/doc/master/bundles/DoctrineMongoDBBundle/config.html]</span> article.</p>
<p>Then, register a new handler service for <code class="docutils literal notranslate"><span class="pre">MongoDbSessionHandler</span></code> and pass it
the MongoDB connection as argument:</p>
<div class="configuration-block">
<ul class="simple">
<li><p><em>YAML</em><div class="highlight-yaml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6
7</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1"># config/services.yaml</span>
<span class="l l-Scalar l-Scalar-Plain">services</span><span class="p p-Indicator">:</span>
    <span class="c1"># ...</span>

    <span class="l l-Scalar l-Scalar-Plain">Symfony\Component\HttpFoundation\Session\Storage\Handler\MongoDbSessionHandler</span><span class="p p-Indicator">:</span>
        <span class="l l-Scalar l-Scalar-Plain">arguments</span><span class="p p-Indicator">:</span>
            <span class="p p-Indicator">-</span> <span class="s">&#39;@doctrine_mongodb.odm.default_connection&#39;</span>
</pre></div>
</td></tr></table></div>
</p></li>
<li><p><em>XML</em><div class="highlight-xml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c">&lt;!-- config/services.xml --&gt;</span>
<span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span>
<span class="nt">&lt;container</span> <span class="na">xmlns=</span><span class="s">&quot;http://symfony.com/schema/dic/services&quot;</span>
    <span class="na">xmlns:xsi=</span><span class="s">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span>
    <span class="na">xmlns:framework=</span><span class="s">&quot;http://symfony.com/schema/dic/symfony&quot;</span>
    <span class="na">xsi:schemaLocation=</span><span class="s">&quot;http://symfony.com/schema/dic/services</span>
<span class="s">        https://symfony.com/schema/dic/services/services-1.0.xsd</span>
<span class="s">        https://symfony.com/schema/dic/symfony/symfony-1.0.xsd&quot;</span><span class="nt">&gt;</span>

    <span class="nt">&lt;services&gt;</span>
        <span class="nt">&lt;service</span> <span class="na">id=</span><span class="s">&quot;Symfony\Component\HttpFoundation\Session\Storage\Handler\MongoDbSessionHandler&quot;</span> <span class="na">public=</span><span class="s">&quot;false&quot;</span><span class="nt">&gt;</span>
            <span class="nt">&lt;argument</span> <span class="na">type=</span><span class="s">&quot;service&quot;</span><span class="nt">&gt;</span>doctrine_mongodb.odm.default_connection<span class="nt">&lt;/argument&gt;</span>
        <span class="nt">&lt;/service&gt;</span>
    <span class="nt">&lt;/services&gt;</span>
<span class="nt">&lt;/container&gt;</span>
</pre></div>
</td></tr></table></div>
</p></li>
<li><p><em>PHP</em><div class="highlight-php notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6
7
8</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1">// config/services.php</span>
<span class="k">use</span> <span class="nx">Symfony\Component\HttpFoundation\Session\Storage\Handler\MongoDbSessionHandler</span><span class="p">;</span>

<span class="nv">$storageDefinition</span> <span class="o">=</span> <span class="nv">$container</span><span class="o">-&gt;</span><span class="na">autowire</span><span class="p">(</span><span class="nx">MongoDbSessionHandler</span><span class="o">::</span><span class="na">class</span><span class="p">)</span>
    <span class="o">-&gt;</span><span class="na">setArguments</span><span class="p">([</span>
        <span class="k">new</span> <span class="nx">Reference</span><span class="p">(</span><span class="s1">&#39;doctrine_mongodb.odm.default_connection&#39;</span><span class="p">),</span>
    <span class="p">])</span>
<span class="p">;</span>
</pre></div>
</td></tr></table></div>
</p></li>
</ul>
</div>
<p>Next, use the <a class="reference internal" href="../reference/configuration/framework.xhtml#config-framework-session-handler-id"><span class="std std-ref">handler_id</span></a>
configuration option to tell Symfony to use this service as the session handler:</p>
<div class="configuration-block">
<ul class="simple">
<li><p><em>YAML</em><div class="highlight-yaml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1"># config/packages/framework.yaml</span>
<span class="l l-Scalar l-Scalar-Plain">framework</span><span class="p p-Indicator">:</span>
    <span class="l l-Scalar l-Scalar-Plain">session</span><span class="p p-Indicator">:</span>
        <span class="c1"># ...</span>
        <span class="l l-Scalar l-Scalar-Plain">handler_id</span><span class="p p-Indicator">:</span> <span class="l l-Scalar l-Scalar-Plain">Symfony\Component\HttpFoundation\Session\Storage\Handler\MongoDbSessionHandler</span>
</pre></div>
</td></tr></table></div>
</p></li>
<li><p><em>XML</em><div class="highlight-xml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c">&lt;!-- config/packages/framework.xml --&gt;</span>
<span class="nt">&lt;framework:config&gt;</span>
    <span class="c">&lt;!-- ... --&gt;</span>
    <span class="nt">&lt;framework:session</span>
        <span class="na">handler-id=</span><span class="s">&quot;Symfony\Component\HttpFoundation\Session\Storage\Handler\MongoDbSessionHandler&quot;</span><span class="nt">/&gt;</span>
<span class="nt">&lt;/framework:config&gt;</span>
</pre></div>
</td></tr></table></div>
</p></li>
<li><p><em>PHP</em><div class="highlight-php notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1">// config/packages/framework.php</span>
<span class="k">use</span> <span class="nx">Symfony\Component\HttpFoundation\Session\Storage\Handler\MongoDbSessionHandler</span><span class="p">;</span>

<span class="c1">// ...</span>
<span class="nv">$container</span><span class="o">-&gt;</span><span class="na">loadFromExtension</span><span class="p">(</span><span class="s1">&#39;framework&#39;</span><span class="p">,</span> <span class="p">[</span>
    <span class="c1">// ...</span>
    <span class="s1">&#39;session&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
        <span class="s1">&#39;handler_id&#39;</span> <span class="o">=&gt;</span> <span class="nx">MongoDbSessionHandler</span><span class="o">::</span><span class="na">class</span><span class="p">,</span>
    <span class="p">],</span>
<span class="p">]);</span>
</pre></div>
</td></tr></table></div>
</p></li>
</ul>
</div>
<div class="admonition note">
<p class="admonition-title">Note</p>
<p>MongoDB ODM 1.x only works with the legacy driver, which is no longer
supported by the Symfony session class. Install the <code class="docutils literal notranslate"><span class="pre">alcaeus/mongo-php-adapter</span></code>
package to retrieve the underlying <code class="docutils literal notranslate"><span class="pre">\MongoDB\Client</span></code> object or upgrade to
MongoDB ODM 2.0.</p>
</div>
<p>That’s all! Symfony will now use your MongoDB server to read and write the
session data. You do not need to do anything to initialize your session
collection. However, you may want to add an index to improve garbage collection
performance. Run this from the <a class="reference external" href="https://docs.mongodb.com/manual/mongo/">MongoDB shell</a><span class="link-target"> [https://docs.mongodb.com/manual/mongo/]</span>:</p>
<div class="highlight-javascript notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre>1
2</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="nx">use</span> <span class="nx">session_db</span>
<span class="nx">db</span><span class="p">.</span><span class="nx">session</span><span class="p">.</span><span class="nx">ensureIndex</span><span class="p">(</span> <span class="p">{</span> <span class="s2">&quot;expires_at&quot;</span><span class="o">:</span> <span class="mi">1</span> <span class="p">},</span> <span class="p">{</span> <span class="nx">expireAfterSeconds</span><span class="o">:</span> <span class="mi">0</span> <span class="p">}</span> <span class="p">)</span>
</pre></div>
</td></tr></table></div>
<div class="section" id="configuring-the-session-field-names">
<h3>Configuring the Session Field Names</h3>
<p>The collection used to store sessions defines certain field names. You can
configure these values with the second argument passed to the
<code class="docutils literal notranslate"><span class="pre">MongoDbSessionHandler</span></code> service:</p>
<div class="configuration-block">
<ul class="simple">
<li><p><em>YAML</em><div class="highlight-yaml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6
7
8</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1"># config/services.yaml</span>
<span class="l l-Scalar l-Scalar-Plain">services</span><span class="p p-Indicator">:</span>
    <span class="c1"># ...</span>

    <span class="l l-Scalar l-Scalar-Plain">Symfony\Component\HttpFoundation\Session\Storage\Handler\MongoDbSessionHandler</span><span class="p p-Indicator">:</span>
        <span class="l l-Scalar l-Scalar-Plain">arguments</span><span class="p p-Indicator">:</span>
            <span class="p p-Indicator">-</span> <span class="s">&#39;@doctrine_mongodb.odm.default_connection&#39;</span>
            <span class="p p-Indicator">-</span> <span class="p p-Indicator">{</span> <span class="nv">id_field</span><span class="p p-Indicator">:</span> <span class="s">&#39;_guid&#39;</span><span class="p p-Indicator">,</span> <span class="s">&#39;expiry_field&#39;</span><span class="p p-Indicator">:</span> <span class="s">&#39;eol&#39;</span> <span class="p p-Indicator">}</span>
</pre></div>
</td></tr></table></div>
</p></li>
<li><p><em>XML</em><div class="highlight-xml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c">&lt;!-- config/services.xml --&gt;</span>
<span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span>
<span class="nt">&lt;container</span> <span class="na">xmlns=</span><span class="s">&quot;http://symfony.com/schema/dic/services&quot;</span>
    <span class="na">xmlns:xsi=</span><span class="s">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span>
    <span class="na">xsi:schemaLocation=</span><span class="s">&quot;http://symfony.com/schema/dic/services</span>
<span class="s">        https://symfony.com/schema/dic/services/services-1.0.xsd&quot;</span><span class="nt">&gt;</span>

    <span class="nt">&lt;services&gt;</span>
        <span class="nt">&lt;service</span> <span class="na">id=</span><span class="s">&quot;Symfony\Component\HttpFoundation\Session\Storage\Handler\MongoDbSessionHandler&quot;</span> <span class="na">public=</span><span class="s">&quot;false&quot;</span><span class="nt">&gt;</span>
            <span class="nt">&lt;argument</span> <span class="na">type=</span><span class="s">&quot;service&quot;</span><span class="nt">&gt;</span>doctrine_mongodb.odm.default_connection<span class="nt">&lt;/argument&gt;</span>
            <span class="nt">&lt;argument</span> <span class="na">type=</span><span class="s">&quot;collection&quot;</span><span class="nt">&gt;</span>
                <span class="nt">&lt;argument</span> <span class="na">key=</span><span class="s">&quot;id_field&quot;</span><span class="nt">&gt;</span>_guid<span class="nt">&lt;/argument&gt;</span>
                <span class="nt">&lt;argument</span> <span class="na">key=</span><span class="s">&quot;expiry_field&quot;</span><span class="nt">&gt;</span>eol<span class="nt">&lt;/argument&gt;</span>
            <span class="nt">&lt;/argument&gt;</span>
        <span class="nt">&lt;/service&gt;</span>
    <span class="nt">&lt;/services&gt;</span>
<span class="nt">&lt;/container&gt;</span>
</pre></div>
</td></tr></table></div>
</p></li>
<li><p><em>PHP</em><div class="highlight-php notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1">// config/services.php</span>
<span class="k">use</span> <span class="nx">Symfony\Component\HttpFoundation\Session\Storage\Handler\MongoDbSessionHandler</span><span class="p">;</span>
<span class="c1">// ...</span>

<span class="nv">$container</span><span class="o">-&gt;</span><span class="na">autowire</span><span class="p">(</span><span class="nx">MongoDbSessionHandler</span><span class="o">::</span><span class="na">class</span><span class="p">)</span>
    <span class="o">-&gt;</span><span class="na">setArguments</span><span class="p">([</span>
        <span class="s1">&#39;...&#39;</span><span class="p">,</span>
        <span class="p">[</span><span class="s1">&#39;id_field&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;_guid&#39;</span><span class="p">,</span> <span class="s1">&#39;expiry_field&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;eol&#39;</span><span class="p">],</span>
    <span class="p">])</span>
<span class="p">;</span>
</pre></div>
</td></tr></table></div>
</p></li>
</ul>
</div>
<p>These are parameters that you can configure:</p>
<dl class="simple">
<dt><code class="docutils literal notranslate"><span class="pre">id_field</span></code> (default <code class="docutils literal notranslate"><span class="pre">_id</span></code>):</dt>
<dd><p>The name of the field where to store the session ID;</p>
</dd>
<dt><code class="docutils literal notranslate"><span class="pre">data_field</span></code> (default <code class="docutils literal notranslate"><span class="pre">data</span></code>):</dt>
<dd><p>The name of the field where to store the session data;</p>
</dd>
<dt><code class="docutils literal notranslate"><span class="pre">time_field</span></code> (default <code class="docutils literal notranslate"><span class="pre">time</span></code>):</dt>
<dd><p>The name of the field where to store the session creation timestamp;</p>
</dd>
<dt><code class="docutils literal notranslate"><span class="pre">expiry_field</span></code> (default <code class="docutils literal notranslate"><span class="pre">expires_at</span></code>):</dt>
<dd><p>The name of the field where to store the session lifetime.</p>
</dd>
</dl>
</div>
</div>
</div>


          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>