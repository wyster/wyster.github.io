<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <title>How to Use PHP’s built-in Web Server</title>
    <link rel="stylesheet" href="../_static/epub.css" type="text/css" />
    <link rel="stylesheet" href="../_static/pygments.css" type="text/css" />
    <link rel="stylesheet" type="text/css" href="../_static/rtd_custom.css" /> 
  </head><body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <div class="section" id="how-to-use-php-s-built-in-web-server">
<span id="index-0"></span><h1>How to Use PHP’s built-in Web Server</h1>
<div class="deprecated">
<p><span class="versionmodified">Deprecated since version 4.4: </span>This article explains how to use the WebServerBundle to run Symfony
applications on your local computer. However, that bundle is deprecated
since Symfony 4.4 and will be removed in Symfony 5.0.</p>
<p>Instead of using WebServerBundle, the preferred way to run your Symfony
applications locally is to use the <a class="reference internal" href="symfony_server.xhtml"><span class="doc">Symfony Local Web Server</span></a>.</p>
</div>
<p>The PHP CLI SAPI comes with a <a class="reference external" href="https://www.php.net/manual/en/features.commandline.webserver.php">built-in web server</a><span class="link-target"> [https://www.php.net/manual/en/features.commandline.webserver.php]</span>. It can be used to run your
PHP applications locally during development, for testing or for application
demonstrations. This way, you don’t have to bother configuring a full-featured
web server such as <a class="reference internal" href="web_server_configuration.xhtml"><span class="doc">Apache or nginx</span></a>.</p>
<div class="admonition caution">
<p class="admonition-title">Caution</p>
<p>The built-in web server is meant to be run in a controlled environment.
It is not designed to be used on public networks.</p>
</div>
<p>Symfony provides a web server built on top of this PHP server to simplify your
local setup. This server is distributed as a bundle, so you must first install
and enable the server bundle.</p>
<div class="section" id="installing-the-web-server-bundle">
<h2>Installing the Web Server Bundle</h2>
<p>Move into your project directory and run this command:</p>
<div class="highlight-terminal notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre>1
2</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="gp">$</span> <span class="nb">cd</span> your-project/
<span class="gp">$</span> composer require --dev symfony/web-server-bundle
</pre></div>
</td></tr></table></div>
</div>
<div class="section" id="starting-the-web-server">
<h2>Starting the Web Server</h2>
<p>To run a Symfony application using PHP’s built-in web server, run the
<code class="docutils literal notranslate"><span class="pre">server:start</span></code> command:</p>
<div class="highlight-terminal notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre>1</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="gp">$</span> php bin/console server:start
</pre></div>
</td></tr></table></div>
<p>This starts the web server at <code class="docutils literal notranslate"><span class="pre">localhost:8000</span></code> in the background that serves
your Symfony application.</p>
<p>By default, the web server listens on port 8000 on the loopback device. You
can change the socket passing an IP address and a port as a command-line argument:</p>
<div class="highlight-terminal notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1"># passing a specific IP and port</span>
<span class="gp">$</span> php bin/console server:start <span class="m">192</span>.168.0.1:8080

<span class="c1"># passing &#39;*&#39; as the IP means to use 0.0.0.0 (i.e. any local IP address)</span>
<span class="gp">$</span> php bin/console server:start *:8080
</pre></div>
</td></tr></table></div>
<div class="admonition note">
<p class="admonition-title">Note</p>
<p>You can use the <code class="docutils literal notranslate"><span class="pre">server:status</span></code> command to check if a web server is
listening:</p>
<div class="highlight-terminal notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre>1</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="gp">$</span> php bin/console server:status
</pre></div>
</td></tr></table></div>
</div>
<div class="admonition tip">
<p class="admonition-title">Tip</p>
<p>Some systems do not support the <code class="docutils literal notranslate"><span class="pre">server:start</span></code> command, in these cases
you can execute the <code class="docutils literal notranslate"><span class="pre">server:run</span></code> command. This command behaves slightly
different. Instead of starting the server in the background, it will block
the current terminal until you terminate it (this is usually done by
pressing Ctrl and C).</p>
</div>
<div class="sidebar">
<p class="sidebar-title">Using the built-in Web Server from inside a Virtual Machine</p>
<p>If you want to use the built-in web server from inside a virtual machine
and then load the site from a browser on your host machine, you’ll need
to listen on the <code class="docutils literal notranslate"><span class="pre">0.0.0.0:8000</span></code> address (i.e. on all IP addresses that
are assigned to the virtual machine):</p>
<div class="highlight-terminal notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre>1</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="gp">$</span> php bin/console server:start <span class="m">0</span>.0.0.0:8000
</pre></div>
</td></tr></table></div>
<div class="admonition caution">
<p class="admonition-title">Caution</p>
<p>You should <strong>NEVER</strong> listen to all interfaces on a computer that is
directly accessible from the Internet. The built-in web server is
not designed to be used on public networks.</p>
</div>
</div>
<div class="section" id="command-options">
<h3>Command Options</h3>
<p>The built-in web server expects a “router” script (read about the “router”
script on <a class="reference external" href="https://www.php.net/manual/en/features.commandline.webserver.php#example-415">php.net</a><span class="link-target"> [https://www.php.net/manual/en/features.commandline.webserver.php#example-415]</span>) as an argument. Symfony already passes such a router
script when the command is executed in the <code class="docutils literal notranslate"><span class="pre">prod</span></code> or <code class="docutils literal notranslate"><span class="pre">dev</span></code> environment.
Use the <code class="docutils literal notranslate"><span class="pre">--router</span></code> option to use your own router script:</p>
<div class="highlight-terminal notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre>1</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="gp">$</span> php bin/console server:start --router<span class="o">=</span>config/my_router.php
</pre></div>
</td></tr></table></div>
<p>If your application’s document root differs from the standard directory layout,
you have to pass the correct location using the <code class="docutils literal notranslate"><span class="pre">--docroot</span></code> option:</p>
<div class="highlight-terminal notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre>1</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="gp">$</span> php bin/console server:start --docroot<span class="o">=</span>public_html
</pre></div>
</td></tr></table></div>
</div>
</div>
<div class="section" id="stopping-the-server">
<h2>Stopping the Server</h2>
<p>When you finish your work, you can stop the web server with the following command:</p>
<div class="highlight-terminal notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre>1</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="gp">$</span> php bin/console server:stop
</pre></div>
</td></tr></table></div>
</div>
</div>


          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>