<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <title>Verbosity Levels</title>
    <link rel="stylesheet" href="../_static/epub.css" type="text/css" />
    <link rel="stylesheet" href="../_static/pygments.css" type="text/css" />
    <link rel="stylesheet" type="text/css" href="../_static/rtd_custom.css" /> 
  </head><body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <div class="section" id="verbosity-levels">
<h1>Verbosity Levels</h1>
<p>Console commands have different verbosity levels, which determine the messages
displayed in their output. By default, commands display only the most useful
messages, but you can control their verbosity with the <code class="docutils literal notranslate"><span class="pre">-q</span></code> and <code class="docutils literal notranslate"><span class="pre">-v</span></code> options:</p>
<div class="highlight-terminal notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1"># do not output any message (not even the command result messages)</span>
<span class="gp">$</span> php bin/console some-command -q
<span class="gp">$</span> php bin/console some-command --quiet

<span class="c1"># normal behavior, no option required (display only the useful messages)</span>
<span class="gp">$</span> php bin/console some-command

<span class="c1"># increase verbosity of messages</span>
<span class="gp">$</span> php bin/console some-command -v

<span class="c1"># display also the informative non essential messages</span>
<span class="gp">$</span> php bin/console some-command -vv

<span class="c1"># display all messages (useful to debug errors)</span>
<span class="gp">$</span> php bin/console some-command -vvv
</pre></div>
</td></tr></table></div>
<p>The verbosity level can also be controlled globally for all commands with the
<code class="docutils literal notranslate"><span class="pre">SHELL_VERBOSITY</span></code> environment variable (the <code class="docutils literal notranslate"><span class="pre">-q</span></code> and <code class="docutils literal notranslate"><span class="pre">-v</span></code> options still
have more precedence over the value of <code class="docutils literal notranslate"><span class="pre">SHELL_VERBOSITY</span></code>):</p>
<table class="docutils">
<colgroup>
<col style="width: 24%" />
<col style="width: 28%" />
<col style="width: 48%" />
</colgroup>
<thead>
<tr class="row-odd"><th class="head"><p>Console option</p></th>
<th class="head"><p><code class="docutils literal notranslate"><span class="pre">SHELL_VERBOSITY</span></code> value</p></th>
<th class="head"><p>Equivalent PHP constant</p></th>
</tr>
</thead>
<tbody>
<tr class="row-even"><td><p><code class="docutils literal notranslate"><span class="pre">-q</span></code> or <code class="docutils literal notranslate"><span class="pre">--quiet</span></code></p></td>
<td><p><code class="docutils literal notranslate"><span class="pre">-1</span></code></p></td>
<td><p><code class="docutils literal notranslate"><span class="pre">OutputInterface::VERBOSITY_QUIET</span></code></p></td>
</tr>
<tr class="row-odd"><td><p>(none)</p></td>
<td><p><code class="docutils literal notranslate"><span class="pre">0</span></code></p></td>
<td><p><code class="docutils literal notranslate"><span class="pre">OutputInterface::VERBOSITY_NORMAL</span></code></p></td>
</tr>
<tr class="row-even"><td><p><code class="docutils literal notranslate"><span class="pre">-v</span></code></p></td>
<td><p><code class="docutils literal notranslate"><span class="pre">1</span></code></p></td>
<td><p><code class="docutils literal notranslate"><span class="pre">OutputInterface::VERBOSITY_VERBOSE</span></code></p></td>
</tr>
<tr class="row-odd"><td><p><code class="docutils literal notranslate"><span class="pre">-vv</span></code></p></td>
<td><p><code class="docutils literal notranslate"><span class="pre">2</span></code></p></td>
<td><p><code class="docutils literal notranslate"><span class="pre">OutputInterface::VERBOSITY_VERY_VERBOSE</span></code></p></td>
</tr>
<tr class="row-even"><td><p><code class="docutils literal notranslate"><span class="pre">-vvv</span></code></p></td>
<td><p><code class="docutils literal notranslate"><span class="pre">3</span></code></p></td>
<td><p><code class="docutils literal notranslate"><span class="pre">OutputInterface::VERBOSITY_DEBUG</span></code></p></td>
</tr>
</tbody>
</table>
<p>It is possible to print a message in a command for only a specific verbosity
level. For example:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="c1">// ...</span>
<span class="k">use</span> <span class="nx">Symfony\Component\Console\Command\Command</span><span class="p">;</span>
<span class="k">use</span> <span class="nx">Symfony\Component\Console\Input\InputInterface</span><span class="p">;</span>
<span class="k">use</span> <span class="nx">Symfony\Component\Console\Output\OutputInterface</span><span class="p">;</span>

<span class="k">class</span> <span class="nc">CreateUserCommand</span> <span class="k">extends</span> <span class="nx">Command</span>
<span class="p">{</span>
    <span class="c1">// ...</span>

    <span class="k">public</span> <span class="k">function</span> <span class="nf">execute</span><span class="p">(</span><span class="nx">InputInterface</span> <span class="nv">$input</span><span class="p">,</span> <span class="nx">OutputInterface</span> <span class="nv">$output</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="nv">$user</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">User</span><span class="p">(</span><span class="o">...</span><span class="p">);</span>

        <span class="nv">$output</span><span class="o">-&gt;</span><span class="na">writeln</span><span class="p">([</span>
            <span class="s1">&#39;Username: &#39;</span><span class="o">.</span><span class="nv">$input</span><span class="o">-&gt;</span><span class="na">getArgument</span><span class="p">(</span><span class="s1">&#39;username&#39;</span><span class="p">),</span>
            <span class="s1">&#39;Password: &#39;</span><span class="o">.</span><span class="nv">$input</span><span class="o">-&gt;</span><span class="na">getArgument</span><span class="p">(</span><span class="s1">&#39;password&#39;</span><span class="p">),</span>
        <span class="p">]);</span>

        <span class="c1">// available methods: -&gt;isQuiet(), -&gt;isVerbose(), -&gt;isVeryVerbose(), -&gt;isDebug()</span>
        <span class="k">if</span> <span class="p">(</span><span class="nv">$output</span><span class="o">-&gt;</span><span class="na">isVerbose</span><span class="p">())</span> <span class="p">{</span>
            <span class="nv">$output</span><span class="o">-&gt;</span><span class="na">writeln</span><span class="p">(</span><span class="s1">&#39;User class: &#39;</span><span class="o">.</span><span class="nb">get_class</span><span class="p">(</span><span class="nv">$user</span><span class="p">));</span>
        <span class="p">}</span>

        <span class="c1">// alternatively you can pass the verbosity level PHP constant to writeln()</span>
        <span class="nv">$output</span><span class="o">-&gt;</span><span class="na">writeln</span><span class="p">(</span>
            <span class="s1">&#39;Will only be printed in verbose mode or higher&#39;</span><span class="p">,</span>
            <span class="nx">OutputInterface</span><span class="o">::</span><span class="na">VERBOSITY_VERBOSE</span>
        <span class="p">);</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>
</div>
<p>When the quiet level is used, all output is suppressed as the default
<code class="docutils literal notranslate"><a class="reference external" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Console/Output/Output.php" title="Symfony\Component\Console\Output\Output::write()"><span class="pre">write()</span></a><span class="link-target"> <span class="pre">[https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Console/Output/Output.php]</span></span></code> method returns
without actually printing.</p>
<div class="admonition tip">
<p class="admonition-title">Tip</p>
<p>The MonologBridge provides a <code class="docutils literal notranslate"><a class="reference external" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Bridge/Monolog/Handler/ConsoleHandler.php" title="Symfony\Bridge\Monolog\Handler\ConsoleHandler"><span class="pre">ConsoleHandler</span></a><span class="link-target"> <span class="pre">[https://github.com/symfony/symfony/blob/master/src/Symfony/Bridge/Monolog/Handler/ConsoleHandler.php]</span></span></code>
class that allows you to display messages on the console. This is cleaner
than wrapping your output calls in conditions. For an example use in
the Symfony Framework, see <a class="reference internal" href="../logging/monolog_console.xhtml"><span class="doc">How to Configure Monolog to Display Console Messages</span></a>.</p>
</div>
<div class="admonition tip">
<p class="admonition-title">Tip</p>
<p>The full exception stacktrace is printed if the <code class="docutils literal notranslate"><span class="pre">VERBOSITY_VERBOSE</span></code>
level or above is used.</p>
</div>
</div>


          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>