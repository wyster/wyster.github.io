<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <title>Multiple Buses</title>
    <link rel="stylesheet" href="../_static/epub.css" type="text/css" />
    <link rel="stylesheet" href="../_static/pygments.css" type="text/css" />
    <link rel="stylesheet" type="text/css" href="../_static/rtd_custom.css" /> 
  </head><body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <div class="section" id="multiple-buses">
<span id="index-0"></span><h1>Multiple Buses</h1>
<p>A common architecture when building applications is to separate commands from
queries. Commands are actions that do something and queries fetch data. This
is called CQRS (Command Query Responsibility Segregation). See Martin Fowler’s
<a class="reference external" href="https://martinfowler.com/bliki/CQRS.html">article about CQRS</a><span class="link-target"> [https://martinfowler.com/bliki/CQRS.html]</span> to learn more. This architecture could be used together
with the Messenger component by defining multiple buses.</p>
<p>A <strong>command bus</strong> is a little different from a <strong>query bus</strong>. For example, command
buses usually don’t provide any results and query buses are rarely asynchronous.
You can configure these buses and their rules by using middleware.</p>
<p>It might also be a good idea to separate actions from reactions by introducing
an <strong>event bus</strong>. The event bus could have zero or more subscribers.</p>
<div class="configuration-block">
<ul class="simple">
<li><p><em>YAML</em><div class="highlight-yaml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="l l-Scalar l-Scalar-Plain">framework</span><span class="p p-Indicator">:</span>
    <span class="l l-Scalar l-Scalar-Plain">messenger</span><span class="p p-Indicator">:</span>
        <span class="c1"># The bus that is going to be injected when injecting MessageBusInterface</span>
        <span class="l l-Scalar l-Scalar-Plain">default_bus</span><span class="p p-Indicator">:</span> <span class="l l-Scalar l-Scalar-Plain">command.bus</span>
        <span class="l l-Scalar l-Scalar-Plain">buses</span><span class="p p-Indicator">:</span>
            <span class="l l-Scalar l-Scalar-Plain">command.bus</span><span class="p p-Indicator">:</span>
                <span class="l l-Scalar l-Scalar-Plain">middleware</span><span class="p p-Indicator">:</span>
                    <span class="p p-Indicator">-</span> <span class="l l-Scalar l-Scalar-Plain">validation</span>
                    <span class="p p-Indicator">-</span> <span class="l l-Scalar l-Scalar-Plain">doctrine_transaction</span>
            <span class="l l-Scalar l-Scalar-Plain">query.bus</span><span class="p p-Indicator">:</span>
                <span class="l l-Scalar l-Scalar-Plain">middleware</span><span class="p p-Indicator">:</span>
                    <span class="p p-Indicator">-</span> <span class="l l-Scalar l-Scalar-Plain">validation</span>
            <span class="l l-Scalar l-Scalar-Plain">event.bus</span><span class="p p-Indicator">:</span>
                <span class="l l-Scalar l-Scalar-Plain">default_middleware</span><span class="p p-Indicator">:</span> <span class="l l-Scalar l-Scalar-Plain">allow_no_handlers</span>
                <span class="l l-Scalar l-Scalar-Plain">middleware</span><span class="p p-Indicator">:</span>
                    <span class="p p-Indicator">-</span> <span class="l l-Scalar l-Scalar-Plain">validation</span>
</pre></div>
</td></tr></table></div>
</p></li>
<li><p><em>XML</em><div class="highlight-xml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c">&lt;!-- config/packages/messenger.xml --&gt;</span>
<span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span>
<span class="nt">&lt;container</span> <span class="na">xmlns=</span><span class="s">&quot;http://symfony.com/schema/dic/services&quot;</span>
    <span class="na">xmlns:xsi=</span><span class="s">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span>
    <span class="na">xmlns:framework=</span><span class="s">&quot;http://symfony.com/schema/dic/symfony&quot;</span>
    <span class="na">xsi:schemaLocation=</span><span class="s">&quot;http://symfony.com/schema/dic/services</span>
<span class="s">        https://symfony.com/schema/dic/services/services-1.0.xsd</span>
<span class="s">        http://symfony.com/schema/dic/symfony</span>
<span class="s">        https://symfony.com/schema/dic/symfony/symfony-1.0.xsd&quot;</span><span class="nt">&gt;</span>

    <span class="nt">&lt;framework:config&gt;</span>
        <span class="c">&lt;!-- The bus that is going to be injected when injecting MessageBusInterface --&gt;</span>
        <span class="nt">&lt;framework:messenger</span> <span class="na">default-bus=</span><span class="s">&quot;command.bus&quot;</span><span class="nt">&gt;</span>
            <span class="nt">&lt;framework:bus</span> <span class="na">name=</span><span class="s">&quot;command.bus&quot;</span><span class="nt">&gt;</span>
                <span class="nt">&lt;framework:middleware</span> <span class="na">id=</span><span class="s">&quot;validation&quot;</span><span class="nt">/&gt;</span>
                <span class="nt">&lt;framework:middleware</span> <span class="na">id=</span><span class="s">&quot;doctrine_transaction&quot;</span><span class="nt">/&gt;</span>
            <span class="nt">&lt;framework:bus&gt;</span>
            <span class="nt">&lt;framework:bus</span> <span class="na">name=</span><span class="s">&quot;query.bus&quot;</span><span class="nt">&gt;</span>
                <span class="nt">&lt;framework:middleware</span> <span class="na">id=</span><span class="s">&quot;validation&quot;</span><span class="nt">/&gt;</span>
            <span class="nt">&lt;framework:bus&gt;</span>
            <span class="nt">&lt;framework:bus</span> <span class="na">name=</span><span class="s">&quot;event.bus&quot;</span> <span class="na">default-middleware=</span><span class="s">&quot;allow_no_handlers&quot;</span><span class="nt">&gt;</span>
                <span class="nt">&lt;framework:middleware</span> <span class="na">id=</span><span class="s">&quot;validation&quot;</span><span class="nt">/&gt;</span>
            <span class="nt">&lt;framework:bus&gt;</span>
        <span class="nt">&lt;/framework:messenger&gt;</span>
    <span class="nt">&lt;/framework:config&gt;</span>
<span class="nt">&lt;/container&gt;</span>
</pre></div>
</td></tr></table></div>
</p></li>
<li><p><em>PHP</em><div class="highlight-php notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1">// config/packages/messenger.php</span>
<span class="nv">$container</span><span class="o">-&gt;</span><span class="na">loadFromExtension</span><span class="p">(</span><span class="s1">&#39;framework&#39;</span><span class="p">,</span> <span class="p">[</span>
    <span class="s1">&#39;messenger&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
        <span class="c1">// The bus that is going to be injected when injecting MessageBusInterface</span>
        <span class="s1">&#39;default_bus&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;command.bus&#39;</span><span class="p">,</span>
        <span class="s1">&#39;buses&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
            <span class="s1">&#39;command.bus&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
                <span class="s1">&#39;middleware&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
                    <span class="s1">&#39;validation&#39;</span><span class="p">,</span>
                    <span class="s1">&#39;doctrine_transaction&#39;</span><span class="p">,</span>
                <span class="p">],</span>
            <span class="p">],</span>
            <span class="s1">&#39;query.bus&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
                <span class="s1">&#39;middleware&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
                    <span class="s1">&#39;validation&#39;</span><span class="p">,</span>
                <span class="p">],</span>
            <span class="p">],</span>
            <span class="s1">&#39;event.bus&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
                <span class="s1">&#39;default_middleware&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;allow_no_handlers&#39;</span><span class="p">,</span>
                <span class="s1">&#39;middleware&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
                    <span class="s1">&#39;validation&#39;</span><span class="p">,</span>
                <span class="p">],</span>
            <span class="p">],</span>
        <span class="p">],</span>
    <span class="p">],</span>
<span class="p">]);</span>
</pre></div>
</td></tr></table></div>
</p></li>
</ul>
</div>
<p>This will create three new services:</p>
<ul class="simple">
<li><p><code class="docutils literal notranslate"><span class="pre">command.bus</span></code>: autowireable with the <code class="docutils literal notranslate"><a class="reference external" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Messenger/MessageBusInterface.php" title="Symfony\Component\Messenger\MessageBusInterface"><span class="pre">MessageBusInterface</span></a><span class="link-target"> <span class="pre">[https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Messenger/MessageBusInterface.php]</span></span></code>
type-hint (because this is the <code class="docutils literal notranslate"><span class="pre">default_bus</span></code>);</p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">query.bus</span></code>: autowireable with <code class="docutils literal notranslate"><span class="pre">MessageBusInterface</span> <span class="pre">$queryBus</span></code>;</p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">event.bus</span></code>: autowireable with <code class="docutils literal notranslate"><span class="pre">MessageBusInterface</span> <span class="pre">$eventBus</span></code>.</p></li>
</ul>
<div class="section" id="restrict-handlers-per-bus">
<h2>Restrict Handlers per Bus</h2>
<p>By default, each handler will be available to handle messages on <em>all</em>
of your buses. To prevent dispatching a message to the wrong bus without an error,
you can restrict each handler to a specific bus using the <code class="docutils literal notranslate"><span class="pre">messenger.message_handler</span></code> tag:</p>
<div class="configuration-block">
<ul class="simple">
<li><p><em>YAML</em><div class="highlight-yaml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6
7</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1"># config/services.yaml</span>
<span class="l l-Scalar l-Scalar-Plain">services</span><span class="p p-Indicator">:</span>
    <span class="l l-Scalar l-Scalar-Plain">App\MessageHandler\SomeCommandHandler</span><span class="p p-Indicator">:</span>
        <span class="l l-Scalar l-Scalar-Plain">tags</span><span class="p p-Indicator">:</span> <span class="p p-Indicator">[{</span> <span class="nv">name</span><span class="p p-Indicator">:</span> <span class="nv">messenger.message_handler</span><span class="p p-Indicator">,</span> <span class="nv">bus</span><span class="p p-Indicator">:</span> <span class="nv">command.bus</span> <span class="p p-Indicator">}]</span>
        <span class="c1"># prevent handlers from being registered twice (or you can remove</span>
        <span class="c1"># the MessageHandlerInterface that autoconfigure uses to find handlers)</span>
        <span class="l l-Scalar l-Scalar-Plain">autoconfigure</span><span class="p p-Indicator">:</span> <span class="l l-Scalar l-Scalar-Plain">false</span>
</pre></div>
</td></tr></table></div>
</p></li>
<li><p><em>XML</em><div class="highlight-xml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c">&lt;!-- config/services.xml --&gt;</span>
<span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span>
<span class="nt">&lt;container</span> <span class="na">xmlns=</span><span class="s">&quot;http://symfony.com/schema/dic/services&quot;</span>
    <span class="na">xmlns:xsi=</span><span class="s">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span>
    <span class="na">xsi:schemaLocation=</span><span class="s">&quot;http://symfony.com/schema/dic/services</span>
<span class="s">        https://symfony.com/schema/dic/services/services-1.0.xsd&quot;</span><span class="nt">&gt;</span>

    <span class="nt">&lt;services&gt;</span>
        <span class="nt">&lt;service</span> <span class="na">id=</span><span class="s">&quot;App\MessageHandler\SomeCommandHandler&quot;</span><span class="nt">&gt;</span>
            <span class="nt">&lt;tag</span> <span class="na">name=</span><span class="s">&quot;messenger.message_handler&quot;</span> <span class="na">bus=</span><span class="s">&quot;command.bus&quot;</span><span class="nt">/&gt;</span>
        <span class="nt">&lt;/service&gt;</span>
    <span class="nt">&lt;/services&gt;</span>
<span class="nt">&lt;/container&gt;</span>
</pre></div>
</td></tr></table></div>
</p></li>
<li><p><em>PHP</em><div class="highlight-php notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1">// config/services.php</span>
<span class="nv">$container</span><span class="o">-&gt;</span><span class="na">services</span><span class="p">()</span>
    <span class="o">-&gt;</span><span class="na">set</span><span class="p">(</span><span class="nx">App\MessageHandler\SomeCommandHandler</span><span class="o">::</span><span class="na">class</span><span class="p">)</span>
    <span class="o">-&gt;</span><span class="na">tag</span><span class="p">(</span><span class="s1">&#39;messenger.message_handler&#39;</span><span class="p">,</span> <span class="p">[</span><span class="s1">&#39;bus&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;command.bus&#39;</span><span class="p">]);</span>
</pre></div>
</td></tr></table></div>
</p></li>
</ul>
</div>
<p>This way, the <code class="docutils literal notranslate"><span class="pre">App\MessageHandler\SomeCommandHandler</span></code> handler will only be
known by the <code class="docutils literal notranslate"><span class="pre">command.bus</span></code> bus.</p>
<p>You can also automatically add this tag to a number of classes by using
the <a class="reference internal" href="../service_container/tags.xhtml#di-instanceof"><span class="std std-ref">_instanceof service configuration</span></a>. Using this,
you can determine the message bus based on an implemented interface:</p>
<div class="configuration-block">
<ul class="simple">
<li><p><em>YAML</em><div class="highlight-yaml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1"># config/services.yaml</span>
<span class="l l-Scalar l-Scalar-Plain">services</span><span class="p p-Indicator">:</span>
    <span class="c1"># ...</span>

    <span class="l l-Scalar l-Scalar-Plain">_instanceof</span><span class="p p-Indicator">:</span>
        <span class="c1"># all services implementing the CommandHandlerInterface</span>
        <span class="c1"># will be registered on the command.bus bus</span>
        <span class="l l-Scalar l-Scalar-Plain">App\MessageHandler\CommandHandlerInterface</span><span class="p p-Indicator">:</span>
            <span class="l l-Scalar l-Scalar-Plain">tags</span><span class="p p-Indicator">:</span>
                <span class="p p-Indicator">-</span> <span class="p p-Indicator">{</span> <span class="nv">name</span><span class="p p-Indicator">:</span> <span class="nv">messenger.message_handler</span><span class="p p-Indicator">,</span> <span class="nv">bus</span><span class="p p-Indicator">:</span> <span class="nv">command.bus</span> <span class="p p-Indicator">}</span>

        <span class="c1"># while those implementing QueryHandlerInterface will be</span>
        <span class="c1"># registered on the query.bus bus</span>
        <span class="l l-Scalar l-Scalar-Plain">App\MessageHandler\QueryHandlerInterface</span><span class="p p-Indicator">:</span>
            <span class="l l-Scalar l-Scalar-Plain">tags</span><span class="p p-Indicator">:</span>
                <span class="p p-Indicator">-</span> <span class="p p-Indicator">{</span> <span class="nv">name</span><span class="p p-Indicator">:</span> <span class="nv">messenger.message_handler</span><span class="p p-Indicator">,</span> <span class="nv">bus</span><span class="p p-Indicator">:</span> <span class="nv">query.bus</span> <span class="p p-Indicator">}</span>
</pre></div>
</td></tr></table></div>
</p></li>
<li><p><em>XML</em><div class="highlight-xml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c">&lt;!-- config/services.xml --&gt;</span>
<span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span>
<span class="nt">&lt;container</span> <span class="na">xmlns=</span><span class="s">&quot;http://symfony.com/schema/dic/services&quot;</span>
    <span class="na">xmlns:xsi=</span><span class="s">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span>
    <span class="na">xsi:schemaLocation=</span><span class="s">&quot;http://symfony.com/schema/dic/services</span>
<span class="s">        https://symfony.com/schema/dic/services/services-1.0.xsd&quot;</span><span class="nt">&gt;</span>

    <span class="nt">&lt;services&gt;</span>
        <span class="c">&lt;!-- ... --&gt;</span>

        <span class="c">&lt;!-- all services implementing the CommandHandlerInterface</span>
<span class="c">             will be registered on the command.bus bus --&gt;</span>
        <span class="nt">&lt;instanceof</span> <span class="na">id=</span><span class="s">&quot;App\MessageHandler\CommandHandlerInterface&quot;</span><span class="nt">&gt;</span>
            <span class="nt">&lt;tag</span> <span class="na">name=</span><span class="s">&quot;messenger.message_handler&quot;</span> <span class="na">bus=</span><span class="s">&quot;command.bus&quot;</span><span class="nt">/&gt;</span>
        <span class="nt">&lt;/instanceof&gt;</span>

        <span class="c">&lt;!-- while those implementing QueryHandlerInterface will be</span>
<span class="c">             registered on the query.bus bus --&gt;</span>
        <span class="nt">&lt;instanceof</span> <span class="na">id=</span><span class="s">&quot;App\MessageHandler\QueryHandlerInterface&quot;</span><span class="nt">&gt;</span>
            <span class="nt">&lt;tag</span> <span class="na">name=</span><span class="s">&quot;messenger.message_handler&quot;</span> <span class="na">bus=</span><span class="s">&quot;query.bus&quot;</span><span class="nt">/&gt;</span>
        <span class="nt">&lt;/instanceof&gt;</span>
    <span class="nt">&lt;/services&gt;</span>
<span class="nt">&lt;/container&gt;</span>
</pre></div>
</td></tr></table></div>
</p></li>
<li><p><em>PHP</em><div class="highlight-php notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1">// config/services.php</span>
<span class="k">namespace</span> <span class="nx">Symfony\Component\DependencyInjection\Loader\Configurator</span><span class="p">;</span>

<span class="k">use</span> <span class="nx">App\MessageHandler\CommandHandlerInterface</span><span class="p">;</span>
<span class="k">use</span> <span class="nx">App\MessageHandler\QueryHandlerInterface</span><span class="p">;</span>

<span class="k">return</span> <span class="k">function</span><span class="p">(</span><span class="nx">ContainerConfigurator</span> <span class="nv">$configurator</span><span class="p">)</span> <span class="p">{</span>
    <span class="nv">$services</span> <span class="o">=</span> <span class="nv">$configurator</span><span class="o">-&gt;</span><span class="na">services</span><span class="p">();</span>

    <span class="c1">// ...</span>

    <span class="c1">// all services implementing the CommandHandlerInterface</span>
    <span class="c1">// will be registered on the command.bus bus</span>
    <span class="nv">$services</span><span class="o">-&gt;</span><span class="na">instanceof</span><span class="p">(</span><span class="nx">CommandHandlerInterface</span><span class="o">::</span><span class="na">class</span><span class="p">)</span>
        <span class="o">-&gt;</span><span class="na">tag</span><span class="p">(</span><span class="s1">&#39;messenger.message_handler&#39;</span><span class="p">,</span> <span class="p">[</span><span class="s1">&#39;bus&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;command.bus&#39;</span><span class="p">]);</span>

    <span class="c1">// while those implementing QueryHandlerInterface will be</span>
    <span class="c1">// registered on the query.bus bus</span>
    <span class="nv">$services</span><span class="o">-&gt;</span><span class="na">instanceof</span><span class="p">(</span><span class="nx">QueryHandlerInterface</span><span class="o">::</span><span class="na">class</span><span class="p">)</span>
        <span class="o">-&gt;</span><span class="na">tag</span><span class="p">(</span><span class="s1">&#39;messenger.message_handler&#39;</span><span class="p">,</span> <span class="p">[</span><span class="s1">&#39;bus&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;query.bus&#39;</span><span class="p">]);</span>
<span class="p">};</span>
</pre></div>
</td></tr></table></div>
</p></li>
</ul>
</div>
</div>
<div class="section" id="debugging-the-buses">
<h2>Debugging the Buses</h2>
<p>The <code class="docutils literal notranslate"><span class="pre">debug:messenger</span></code> command lists available messages &amp; handlers per bus.
You can also restrict the list to a specific bus by providing its name as argument.</p>
<div class="highlight-terminal notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="gp">$</span> php bin/console debug:messenger

<span class="go">  Messenger</span>
<span class="go">  =========</span>

<span class="go">  command.bus</span>
<span class="go">  -----------</span>

<span class="go">   The following messages can be dispatched:</span>

<span class="go">   ---------------------------------------------------------------------------------------</span>
<span class="go">    App\Message\DummyCommand</span>
<span class="go">        handled by App\MessageHandler\DummyCommandHandler</span>
<span class="go">    App\Message\MultipleBusesMessage</span>
<span class="go">        handled by App\MessageHandler\MultipleBusesMessageHandler</span>
<span class="go">   ---------------------------------------------------------------------------------------</span>

<span class="go">  query.bus</span>
<span class="go">  ---------</span>

<span class="go">   The following messages can be dispatched:</span>

<span class="go">   ---------------------------------------------------------------------------------------</span>
<span class="go">    App\Message\DummyQuery</span>
<span class="go">        handled by App\MessageHandler\DummyQueryHandler</span>
<span class="go">    App\Message\MultipleBusesMessage</span>
<span class="go">        handled by App\MessageHandler\MultipleBusesMessageHandler</span>
<span class="go">   ---------------------------------------------------------------------------------------</span>
</pre></div>
</td></tr></table></div>
</div>
</div>


          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>