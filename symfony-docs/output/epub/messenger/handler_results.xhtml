<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <title>Getting Results from your Handler</title>
    <link rel="stylesheet" href="../_static/epub.css" type="text/css" />
    <link rel="stylesheet" href="../_static/pygments.css" type="text/css" />
    <link rel="stylesheet" type="text/css" href="../_static/rtd_custom.css" /> 
  </head><body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <div class="section" id="getting-results-from-your-handler">
<span id="index-0"></span><h1>Getting Results from your Handler</h1>
<p>When a message is handled, the <code class="docutils literal notranslate"><a class="reference external" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Messenger/Middleware/HandleMessageMiddleware.php" title="Symfony\Component\Messenger\Middleware\HandleMessageMiddleware"><span class="pre">HandleMessageMiddleware</span></a><span class="link-target"> <span class="pre">[https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Messenger/Middleware/HandleMessageMiddleware.php]</span></span></code>
adds a <code class="docutils literal notranslate"><a class="reference external" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Messenger/Stamp/HandledStamp.php" title="Symfony\Component\Messenger\Stamp\HandledStamp"><span class="pre">HandledStamp</span></a><span class="link-target"> <span class="pre">[https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Messenger/Stamp/HandledStamp.php]</span></span></code> for each object that handled the message.
You can use this to get the value returned by the handler(s):</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="k">use</span> <span class="nx">Symfony\Component\Messenger\MessageBusInterface</span><span class="p">;</span>
<span class="k">use</span> <span class="nx">Symfony\Component\Messenger\Stamp\HandledStamp</span><span class="p">;</span>

<span class="nv">$envelope</span> <span class="o">=</span> <span class="nv">$messageBus</span><span class="o">-&gt;</span><span class="na">dispatch</span><span class="p">(</span><span class="nx">SomeMessage</span><span class="p">());</span>

<span class="c1">// get the value that was returned by the last message handler</span>
<span class="nv">$handledStamp</span> <span class="o">=</span> <span class="nv">$envelope</span><span class="o">-&gt;</span><span class="na">last</span><span class="p">(</span><span class="nx">HandledStamp</span><span class="o">::</span><span class="na">class</span><span class="p">);</span>
<span class="nv">$handledStamp</span><span class="o">-&gt;</span><span class="na">getResult</span><span class="p">();</span>

<span class="c1">// or get info about all of handlers</span>
<span class="nv">$handledStamps</span> <span class="o">=</span> <span class="nv">$envelope</span><span class="o">-&gt;</span><span class="na">all</span><span class="p">(</span><span class="nx">HandledStamp</span><span class="o">::</span><span class="na">class</span><span class="p">);</span>
</pre></div>
</div>
<div class="section" id="working-with-command-query-buses">
<h2>Working with Command &amp; Query Buses</h2>
<p>The Messenger component can be used in CQRS architectures where command &amp; query
buses are central pieces of the application. Read Martin Fowlerâ€™s
<a class="reference external" href="https://martinfowler.com/bliki/CQRS.html">article about CQRS</a><span class="link-target"> [https://martinfowler.com/bliki/CQRS.html]</span> to learn more and
<a class="reference internal" href="multiple_buses.xhtml"><span class="doc">how to configure multiple buses</span></a>.</p>
<p>As queries are usually synchronous and expected to be handled once,
getting the result from the handler is a common need.</p>
<p>A <code class="docutils literal notranslate"><a class="reference external" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Messenger/HandleTrait.php" title="Symfony\Component\Messenger\HandleTrait"><span class="pre">HandleTrait</span></a><span class="link-target"> <span class="pre">[https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Messenger/HandleTrait.php]</span></span></code> exists to get the result
of the handler when processing synchronously. It also ensures that exactly one
handler is registered. The <code class="docutils literal notranslate"><span class="pre">HandleTrait</span></code> can be used in any class that has a
<code class="docutils literal notranslate"><span class="pre">$messageBus</span></code> property:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="c1">// src/Action/ListItems.php</span>
<span class="k">namespace</span> <span class="nx">App\Action</span><span class="p">;</span>

<span class="k">use</span> <span class="nx">App\Message\ListItemsQuery</span><span class="p">;</span>
<span class="k">use</span> <span class="nx">App\MessageHandler\ListItemsQueryResult</span><span class="p">;</span>
<span class="k">use</span> <span class="nx">Symfony\Component\Messenger\HandleTrait</span><span class="p">;</span>
<span class="k">use</span> <span class="nx">Symfony\Component\Messenger\MessageBusInterface</span><span class="p">;</span>

<span class="k">class</span> <span class="nc">ListItems</span>
<span class="p">{</span>
    <span class="k">use</span> <span class="nx">HandleTrait</span><span class="p">;</span>

    <span class="k">public</span> <span class="k">function</span> <span class="fm">__construct</span><span class="p">(</span><span class="nx">MessageBusInterface</span> <span class="nv">$messageBus</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">messageBus</span> <span class="o">=</span> <span class="nv">$messageBus</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="k">public</span> <span class="k">function</span> <span class="fm">__invoke</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="nv">$result</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">query</span><span class="p">(</span><span class="k">new</span> <span class="nx">ListItemsQuery</span><span class="p">(</span><span class="cm">/* ... */</span><span class="p">));</span>

        <span class="c1">// Do something with the result</span>
        <span class="c1">// ...</span>
    <span class="p">}</span>

    <span class="c1">// Creating such a method is optional, but allows type-hinting the result</span>
    <span class="k">private</span> <span class="k">function</span> <span class="nf">query</span><span class="p">(</span><span class="nx">ListItemsQuery</span> <span class="nv">$query</span><span class="p">)</span><span class="o">:</span> <span class="nx">ListItemsQueryResult</span>
    <span class="p">{</span>
        <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">handle</span><span class="p">(</span><span class="nv">$query</span><span class="p">);</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>
</div>
<p>Hence, you can use the trait to create command &amp; query bus classes.
For example, you could create a special <code class="docutils literal notranslate"><span class="pre">QueryBus</span></code> class and inject it
wherever you need a query bus behavior instead of the <code class="docutils literal notranslate"><span class="pre">MessageBusInterface</span></code>:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="c1">// src/MessageBus/QueryBus.php</span>
<span class="k">namespace</span> <span class="nx">App\MessageBus</span><span class="p">;</span>

<span class="k">use</span> <span class="nx">Symfony\Component\Messenger\Envelope</span><span class="p">;</span>
<span class="k">use</span> <span class="nx">Symfony\Component\Messenger\HandleTrait</span><span class="p">;</span>
<span class="k">use</span> <span class="nx">Symfony\Component\Messenger\MessageBusInterface</span><span class="p">;</span>

<span class="k">class</span> <span class="nc">QueryBus</span>
<span class="p">{</span>
    <span class="k">use</span> <span class="nx">HandleTrait</span><span class="p">;</span>

    <span class="k">public</span> <span class="k">function</span> <span class="fm">__construct</span><span class="p">(</span><span class="nx">MessageBusInterface</span> <span class="nv">$messageBus</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">messageBus</span> <span class="o">=</span> <span class="nv">$messageBus</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="sd">/**</span>
<span class="sd">     * @param object|Envelope $query</span>
<span class="sd">     *</span>
<span class="sd">     * @return mixed The handler returned value</span>
<span class="sd">     */</span>
    <span class="k">public</span> <span class="k">function</span> <span class="nf">query</span><span class="p">(</span><span class="nv">$query</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">handle</span><span class="p">(</span><span class="nv">$query</span><span class="p">);</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>
</div>
</div>
</div>


          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>