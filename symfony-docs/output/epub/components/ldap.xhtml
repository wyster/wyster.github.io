<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <title>The Ldap Component</title>
    <link rel="stylesheet" href="../_static/epub.css" type="text/css" />
    <link rel="stylesheet" href="../_static/pygments.css" type="text/css" />
    <link rel="stylesheet" type="text/css" href="../_static/rtd_custom.css" /> 
  </head><body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <div class="section" id="the-ldap-component">
<span id="index-0"></span><h1>The Ldap Component</h1>
<blockquote>
<div><p>The Ldap component provides a means to connect to an LDAP server (OpenLDAP or Active Directory).</p>
</div></blockquote>
<div class="section" id="installation">
<h2>Installation</h2>
<div class="highlight-terminal notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre>1</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="gp">$</span> composer require symfony/ldap
</pre></div>
</td></tr></table></div>
<div class="admonition note">
<p class="admonition-title">Note</p>
<p>If you install this component outside of a Symfony application, you must
require the <code class="docutils literal notranslate"><span class="pre">vendor/autoload.php</span></code> file in your code to enable the class
autoloading mechanism provided by Composer. Read
<a class="reference internal" href="using_components.xhtml"><span class="doc">this article</span></a> for more details.</p>
</div>
</div>
<div class="section" id="usage">
<h2>Usage</h2>
<p>The <code class="docutils literal notranslate"><a class="reference external" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Ldap/Ldap.php" title="Symfony\Component\Ldap\Ldap"><span class="pre">Ldap</span></a><span class="link-target"> <span class="pre">[https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Ldap/Ldap.php]</span></span></code> class provides methods to authenticate
and query against an LDAP server.</p>
<p>The <code class="docutils literal notranslate"><span class="pre">Ldap</span></code> class uses an <code class="docutils literal notranslate"><a class="reference external" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Ldap/Adapter/AdapterInterface.php" title="Symfony\Component\Ldap\Adapter\AdapterInterface"><span class="pre">AdapterInterface</span></a><span class="link-target"> <span class="pre">[https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Ldap/Adapter/AdapterInterface.php]</span></span></code>
to communicate with an LDAP server. The <code class="docutils literal notranslate"><a class="reference external" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Ldap/Adapter/ExtLdap/Adapter.php" title="Symfony\Component\Ldap\Adapter\ExtLdap\Adapter"><span class="pre">adapter</span></a><span class="link-target"> <span class="pre">[https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Ldap/Adapter/ExtLdap/Adapter.php]</span></span></code>
for PHP’s built-in LDAP extension, for example, can be configured using the
following options:</p>
<dl class="simple">
<dt><code class="docutils literal notranslate"><span class="pre">host</span></code></dt>
<dd><p>IP or hostname of the LDAP server</p>
</dd>
<dt><code class="docutils literal notranslate"><span class="pre">port</span></code></dt>
<dd><p>Port used to access the LDAP server</p>
</dd>
<dt><code class="docutils literal notranslate"><span class="pre">version</span></code></dt>
<dd><p>The version of the LDAP protocol to use</p>
</dd>
<dt><code class="docutils literal notranslate"><span class="pre">encryption</span></code></dt>
<dd><p>The encryption protocol: <code class="docutils literal notranslate"><span class="pre">ssl</span></code>, <code class="docutils literal notranslate"><span class="pre">tls</span></code> or <code class="docutils literal notranslate"><span class="pre">none</span></code> (default)</p>
</dd>
<dt><code class="docutils literal notranslate"><span class="pre">connection_string</span></code></dt>
<dd><p>You may use this option instead of <code class="docutils literal notranslate"><span class="pre">host</span></code> and <code class="docutils literal notranslate"><span class="pre">port</span></code> to connect to the
LDAP server</p>
</dd>
<dt><code class="docutils literal notranslate"><span class="pre">optReferrals</span></code></dt>
<dd><p>Specifies whether to automatically follow referrals returned by the LDAP server</p>
</dd>
<dt><code class="docutils literal notranslate"><span class="pre">options</span></code></dt>
<dd><p>LDAP server’s options as defined in
<code class="docutils literal notranslate"><a class="reference external" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Ldap/Adapter/ExtLdap/ConnectionOptions.php" title="Symfony\Component\Ldap\Adapter\ExtLdap\ConnectionOptions"><span class="pre">ConnectionOptions</span></a><span class="link-target"> <span class="pre">[https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Ldap/Adapter/ExtLdap/ConnectionOptions.php]</span></span></code></p>
</dd>
</dl>
<p>For example, to connect to a start-TLS secured LDAP server:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="k">use</span> <span class="nx">Symfony\Component\Ldap\Ldap</span><span class="p">;</span>

<span class="nv">$ldap</span> <span class="o">=</span> <span class="nx">Ldap</span><span class="o">::</span><span class="na">create</span><span class="p">(</span><span class="s1">&#39;ext_ldap&#39;</span><span class="p">,</span> <span class="p">[</span>
    <span class="s1">&#39;host&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;my-server&#39;</span><span class="p">,</span>
    <span class="s1">&#39;encryption&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;ssl&#39;</span><span class="p">,</span>
<span class="p">]);</span>
</pre></div>
</div>
<p>Or you could directly specify a connection string:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="k">use</span> <span class="nx">Symfony\Component\Ldap\Ldap</span><span class="p">;</span>

<span class="nv">$ldap</span> <span class="o">=</span> <span class="nx">Ldap</span><span class="o">::</span><span class="na">create</span><span class="p">(</span><span class="s1">&#39;ext_ldap&#39;</span><span class="p">,</span> <span class="p">[</span><span class="s1">&#39;connection_string&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;ldaps://my-server:636&#39;</span><span class="p">]);</span>
</pre></div>
</div>
<p>The <code class="docutils literal notranslate"><a class="reference external" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Ldap/Ldap.php" title="Symfony\Component\Ldap\Ldap::bind()"><span class="pre">bind()</span></a><span class="link-target"> <span class="pre">[https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Ldap/Ldap.php]</span></span></code> method
authenticates a previously configured connection using both the
distinguished name (DN) and the password of a user:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="k">use</span> <span class="nx">Symfony\Component\Ldap\Ldap</span><span class="p">;</span>
<span class="c1">// ...</span>

<span class="nv">$ldap</span><span class="o">-&gt;</span><span class="na">bind</span><span class="p">(</span><span class="nv">$dn</span><span class="p">,</span> <span class="nv">$password</span><span class="p">);</span>
</pre></div>
</div>
<div class="admonition caution">
<p class="admonition-title">Caution</p>
<p>When the LDAP server allows unauthenticated binds, a blank password will always be valid.</p>
</div>
<p>Once bound (or if you enabled anonymous authentication on your
LDAP server), you may query the LDAP server using the
<code class="docutils literal notranslate"><a class="reference external" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Ldap/Ldap.php" title="Symfony\Component\Ldap\Ldap::query()"><span class="pre">query()</span></a><span class="link-target"> <span class="pre">[https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Ldap/Ldap.php]</span></span></code> method:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="k">use</span> <span class="nx">Symfony\Component\Ldap\Ldap</span><span class="p">;</span>
<span class="c1">// ...</span>

<span class="nv">$query</span> <span class="o">=</span> <span class="nv">$ldap</span><span class="o">-&gt;</span><span class="na">query</span><span class="p">(</span><span class="s1">&#39;dc=symfony,dc=com&#39;</span><span class="p">,</span> <span class="s1">&#39;(&amp;(objectclass=person)(ou=Maintainers))&#39;</span><span class="p">);</span>
<span class="nv">$results</span> <span class="o">=</span> <span class="nv">$query</span><span class="o">-&gt;</span><span class="na">execute</span><span class="p">();</span>

<span class="k">foreach</span> <span class="p">(</span><span class="nv">$results</span> <span class="k">as</span> <span class="nv">$entry</span><span class="p">)</span> <span class="p">{</span>
    <span class="c1">// Do something with the results</span>
<span class="p">}</span>
</pre></div>
</div>
<p>By default, LDAP entries are lazy-loaded. If you wish to fetch
all entries in a single call and do something with the results’
array, you may use the
<code class="docutils literal notranslate"><a class="reference external" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Ldap/Adapter/ExtLdap/Collection.php" title="Symfony\Component\Ldap\Adapter\ExtLdap\Collection::toArray()"><span class="pre">toArray()</span></a><span class="link-target"> <span class="pre">[https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Ldap/Adapter/ExtLdap/Collection.php]</span></span></code> method:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="k">use</span> <span class="nx">Symfony\Component\Ldap\Ldap</span><span class="p">;</span>
<span class="c1">// ...</span>

<span class="nv">$query</span> <span class="o">=</span> <span class="nv">$ldap</span><span class="o">-&gt;</span><span class="na">query</span><span class="p">(</span><span class="s1">&#39;dc=symfony,dc=com&#39;</span><span class="p">,</span> <span class="s1">&#39;(&amp;(objectclass=person)(ou=Maintainers))&#39;</span><span class="p">);</span>
<span class="nv">$results</span> <span class="o">=</span> <span class="nv">$query</span><span class="o">-&gt;</span><span class="na">execute</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">toArray</span><span class="p">();</span>

<span class="c1">// Do something with the results array</span>
</pre></div>
</div>
<p>By default, LDAP queries use the <code class="docutils literal notranslate"><span class="pre">Symfony\Component\Ldap\Adapter\QueryInterface::SCOPE_SUB</span></code>
scope, which corresponds to the <code class="docutils literal notranslate"><span class="pre">LDAP_SCOPE_SUBTREE</span></code> scope of the
<code class="docutils literal notranslate"><a class="reference external" href="https://www.php.net/manual/en/function.ldap-search.php" title="ldap_search"><span class="pre">ldap_search</span></a><span class="link-target"> <span class="pre">[https://www.php.net/manual/en/function.ldap-search.php]</span></span></code> function. You can also use <code class="docutils literal notranslate"><span class="pre">SCOPE_BASE</span></code> (related
to the <code class="docutils literal notranslate"><span class="pre">LDAP_SCOPE_BASE</span></code> scope of <code class="docutils literal notranslate"><a class="reference external" href="https://www.php.net/manual/en/function.ldap-read.php" title="ldap_read"><span class="pre">ldap_read</span></a><span class="link-target"> <span class="pre">[https://www.php.net/manual/en/function.ldap-read.php]</span></span></code>) and <code class="docutils literal notranslate"><span class="pre">SCOPE_ONE</span></code>
(related to the <code class="docutils literal notranslate"><span class="pre">LDAP_SCOPE_ONELEVEL</span></code> scope of <code class="docutils literal notranslate"><a class="reference external" href="https://www.php.net/manual/en/function.ldap-list.php" title="ldap_list"><span class="pre">ldap_list</span></a><span class="link-target"> <span class="pre">[https://www.php.net/manual/en/function.ldap-list.php]</span></span></code>):</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="k">use</span> <span class="nx">Symfony\Component\Ldap\Adapter\QueryInterface</span><span class="p">;</span>

<span class="nv">$query</span> <span class="o">=</span> <span class="nv">$ldap</span><span class="o">-&gt;</span><span class="na">query</span><span class="p">(</span><span class="s1">&#39;dc=symfony,dc=com&#39;</span><span class="p">,</span> <span class="s1">&#39;...&#39;</span><span class="p">,</span> <span class="p">[</span><span class="s1">&#39;scope&#39;</span> <span class="o">=&gt;</span> <span class="nx">QueryInterface</span><span class="o">::</span><span class="na">SCOPE_ONE</span><span class="p">]);</span>
</pre></div>
</div>
</div>
<div class="section" id="creating-or-updating-entries">
<h2>Creating or Updating Entries</h2>
<p>The Ldap component provides means to create new LDAP entries, update or even
delete existing ones:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="k">use</span> <span class="nx">Symfony\Component\Ldap\Entry</span><span class="p">;</span>
<span class="k">use</span> <span class="nx">Symfony\Component\Ldap\Ldap</span><span class="p">;</span>
<span class="c1">// ...</span>

<span class="nv">$entry</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Entry</span><span class="p">(</span><span class="s1">&#39;cn=Fabien Potencier,dc=symfony,dc=com&#39;</span><span class="p">,</span> <span class="p">[</span>
    <span class="s1">&#39;sn&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span><span class="s1">&#39;fabpot&#39;</span><span class="p">],</span>
    <span class="s1">&#39;objectClass&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span><span class="s1">&#39;inetOrgPerson&#39;</span><span class="p">],</span>
<span class="p">]);</span>

<span class="nv">$entryManager</span> <span class="o">=</span> <span class="nv">$ldap</span><span class="o">-&gt;</span><span class="na">getEntryManager</span><span class="p">();</span>

<span class="c1">// Creating a new entry</span>
<span class="nv">$entryManager</span><span class="o">-&gt;</span><span class="na">add</span><span class="p">(</span><span class="nv">$entry</span><span class="p">);</span>

<span class="c1">// Finding and updating an existing entry</span>
<span class="nv">$query</span> <span class="o">=</span> <span class="nv">$ldap</span><span class="o">-&gt;</span><span class="na">query</span><span class="p">(</span><span class="s1">&#39;dc=symfony,dc=com&#39;</span><span class="p">,</span> <span class="s1">&#39;(&amp;(objectclass=person)(ou=Maintainers))&#39;</span><span class="p">);</span>
<span class="nv">$result</span> <span class="o">=</span> <span class="nv">$query</span><span class="o">-&gt;</span><span class="na">execute</span><span class="p">();</span>
<span class="nv">$entry</span> <span class="o">=</span> <span class="nv">$result</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span>
<span class="nv">$entry</span><span class="o">-&gt;</span><span class="na">setAttribute</span><span class="p">(</span><span class="s1">&#39;email&#39;</span><span class="p">,</span> <span class="p">[</span><span class="s1">&#39;fabpot@symfony.com&#39;</span><span class="p">]);</span>
<span class="nv">$entryManager</span><span class="o">-&gt;</span><span class="na">update</span><span class="p">(</span><span class="nv">$entry</span><span class="p">);</span>

<span class="c1">// Adding or removing values to a multi-valued attribute is more efficient than using update()</span>
<span class="nv">$entryManager</span><span class="o">-&gt;</span><span class="na">addAttributeValues</span><span class="p">(</span><span class="nv">$entry</span><span class="p">,</span> <span class="s1">&#39;telephoneNumber&#39;</span><span class="p">,</span> <span class="p">[</span><span class="s1">&#39;+1.111.222.3333&#39;</span><span class="p">,</span> <span class="s1">&#39;+1.222.333.4444&#39;</span><span class="p">]);</span>
<span class="nv">$entryManager</span><span class="o">-&gt;</span><span class="na">removeAttributeValues</span><span class="p">(</span><span class="nv">$entry</span><span class="p">,</span> <span class="s1">&#39;telephoneNumber&#39;</span><span class="p">,</span> <span class="p">[</span><span class="s1">&#39;+1.111.222.3333&#39;</span><span class="p">,</span> <span class="s1">&#39;+1.222.333.4444&#39;</span><span class="p">]);</span>

<span class="c1">// Removing an existing entry</span>
<span class="nv">$entryManager</span><span class="o">-&gt;</span><span class="na">remove</span><span class="p">(</span><span class="k">new</span> <span class="nx">Entry</span><span class="p">(</span><span class="s1">&#39;cn=Test User,dc=symfony,dc=com&#39;</span><span class="p">));</span>
</pre></div>
</div>
<div class="section" id="batch-updating">
<h3>Batch Updating</h3>
<p>Use the entry manager’s <code class="docutils literal notranslate"><a class="reference external" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Ldap/Adapter/ExtLdap/EntryManager.php" title="Symfony\Component\Ldap\Adapter\ExtLdap\EntryManager::applyOperations()"><span class="pre">applyOperations()</span></a><span class="link-target"> <span class="pre">[https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Ldap/Adapter/ExtLdap/EntryManager.php]</span></span></code>
method to update multiple attributes at once:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="k">use</span> <span class="nx">Symfony\Component\Ldap\Entry</span><span class="p">;</span>
<span class="k">use</span> <span class="nx">Symfony\Component\Ldap\Ldap</span><span class="p">;</span>
<span class="c1">// ...</span>

<span class="nv">$entry</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Entry</span><span class="p">(</span><span class="s1">&#39;cn=Fabien Potencier,dc=symfony,dc=com&#39;</span><span class="p">,</span> <span class="p">[</span>
    <span class="s1">&#39;sn&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span><span class="s1">&#39;fabpot&#39;</span><span class="p">],</span>
    <span class="s1">&#39;objectClass&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span><span class="s1">&#39;inetOrgPerson&#39;</span><span class="p">],</span>
<span class="p">]);</span>

<span class="nv">$entryManager</span> <span class="o">=</span> <span class="nv">$ldap</span><span class="o">-&gt;</span><span class="na">getEntryManager</span><span class="p">();</span>

<span class="c1">// Adding multiple email addresses at once</span>
<span class="nv">$entryManager</span><span class="o">-&gt;</span><span class="na">applyOperations</span><span class="p">(</span><span class="nv">$entry</span><span class="o">-&gt;</span><span class="na">getDn</span><span class="p">(),</span> <span class="p">[</span>
    <span class="k">new</span> <span class="nx">UpdateOperation</span><span class="p">(</span><span class="nx">LDAP_MODIFY_BATCH_ADD</span><span class="p">,</span> <span class="s1">&#39;mail&#39;</span><span class="p">,</span> <span class="s1">&#39;new1@example.com&#39;</span><span class="p">),</span>
    <span class="k">new</span> <span class="nx">UpdateOperation</span><span class="p">(</span><span class="nx">LDAP_MODIFY_BATCH_ADD</span><span class="p">,</span> <span class="s1">&#39;mail&#39;</span><span class="p">,</span> <span class="s1">&#39;new2@example.com&#39;</span><span class="p">),</span>
<span class="p">]);</span>
</pre></div>
</div>
<p>Possible operation types are <code class="docutils literal notranslate"><span class="pre">LDAP_MODIFY_BATCH_ADD</span></code>, <code class="docutils literal notranslate"><span class="pre">LDAP_MODIFY_BATCH_REMOVE</span></code>,
<code class="docutils literal notranslate"><span class="pre">LDAP_MODIFY_BATCH_REMOVE_ALL</span></code>, <code class="docutils literal notranslate"><span class="pre">LDAP_MODIFY_BATCH_REPLACE</span></code>. Parameter
<code class="docutils literal notranslate"><span class="pre">$values</span></code> must be <code class="docutils literal notranslate"><span class="pre">NULL</span></code> when using <code class="docutils literal notranslate"><span class="pre">LDAP_MODIFY_BATCH_REMOVE_ALL</span></code>
operation type.</p>
</div>
</div>
</div>


          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>