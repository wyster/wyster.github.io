<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <title>Testing with Sessions</title>
    <link rel="stylesheet" href="../../_static/epub.css" type="text/css" />
    <link rel="stylesheet" href="../../_static/pygments.css" type="text/css" />
    <link rel="stylesheet" type="text/css" href="../../_static/rtd_custom.css" /> 
  </head><body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <div class="section" id="testing-with-sessions">
<span id="index-0"></span><h1>Testing with Sessions</h1>
<p>Symfony is designed from the ground up with code-testability in mind. In order
to test your code which utilizes sessions, we provide two separate mock storage
mechanisms for both unit testing and functional testing.</p>
<p>Testing code using real sessions is tricky because PHPâ€™s workflow state is global
and it is not possible to have multiple concurrent sessions in the same PHP
process.</p>
<p>The mock storage engines simulate the PHP session workflow without actually
starting one allowing you to test your code without complications. You may also
run multiple instances in the same PHP process.</p>
<p>The mock storage drivers do not read or write the system globals
<code class="docutils literal notranslate"><span class="pre">session_id()</span></code> or <code class="docutils literal notranslate"><span class="pre">session_name()</span></code>. Methods are provided to simulate this if
required:</p>
<ul class="simple">
<li><p><code class="docutils literal notranslate"><a class="reference external" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Component/HttpFoundation/Session/Storage/SessionStorageInterface.php" title="Symfony\Component\HttpFoundation\Session\Storage\SessionStorageInterface::getId()"><span class="pre">getId()</span></a><span class="link-target"> <span class="pre">[https://github.com/symfony/symfony/blob/master/src/Symfony/Component/HttpFoundation/Session/Storage/SessionStorageInterface.php]</span></span></code>: Gets the
session ID.</p></li>
<li><p><code class="docutils literal notranslate"><a class="reference external" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Component/HttpFoundation/Session/Storage/SessionStorageInterface.php" title="Symfony\Component\HttpFoundation\Session\Storage\SessionStorageInterface::setId()"><span class="pre">setId()</span></a><span class="link-target"> <span class="pre">[https://github.com/symfony/symfony/blob/master/src/Symfony/Component/HttpFoundation/Session/Storage/SessionStorageInterface.php]</span></span></code>: Sets the
session ID.</p></li>
<li><p><code class="docutils literal notranslate"><a class="reference external" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Component/HttpFoundation/Session/Storage/SessionStorageInterface.php" title="Symfony\Component\HttpFoundation\Session\Storage\SessionStorageInterface::getName()"><span class="pre">getName()</span></a><span class="link-target"> <span class="pre">[https://github.com/symfony/symfony/blob/master/src/Symfony/Component/HttpFoundation/Session/Storage/SessionStorageInterface.php]</span></span></code>: Gets the
session name.</p></li>
<li><p><code class="docutils literal notranslate"><a class="reference external" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Component/HttpFoundation/Session/Storage/SessionStorageInterface.php" title="Symfony\Component\HttpFoundation\Session\Storage\SessionStorageInterface::setName()"><span class="pre">setName()</span></a><span class="link-target"> <span class="pre">[https://github.com/symfony/symfony/blob/master/src/Symfony/Component/HttpFoundation/Session/Storage/SessionStorageInterface.php]</span></span></code>: Sets the
session name.</p></li>
</ul>
<div class="section" id="unit-testing">
<h2>Unit Testing</h2>
<p>For unit testing where it is not necessary to persist the session, you should
swap out the default storage engine with
<code class="docutils literal notranslate"><a class="reference external" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Component/HttpFoundation/Session/Storage/MockArraySessionStorage.php" title="Symfony\Component\HttpFoundation\Session\Storage\MockArraySessionStorage"><span class="pre">MockArraySessionStorage</span></a><span class="link-target"> <span class="pre">[https://github.com/symfony/symfony/blob/master/src/Symfony/Component/HttpFoundation/Session/Storage/MockArraySessionStorage.php]</span></span></code>:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="k">use</span> <span class="nx">Symfony\Component\HttpFoundation\Session\Session</span><span class="p">;</span>
<span class="k">use</span> <span class="nx">Symfony\Component\HttpFoundation\Session\Storage\MockArraySessionStorage</span><span class="p">;</span>

<span class="nv">$session</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Session</span><span class="p">(</span><span class="k">new</span> <span class="nx">MockArraySessionStorage</span><span class="p">());</span>
</pre></div>
</div>
</div>
<div class="section" id="functional-testing">
<h2>Functional Testing</h2>
<p>For functional testing where you may need to persist session data across
separate PHP processes, change the storage engine to
<code class="docutils literal notranslate"><a class="reference external" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Component/HttpFoundation/Session/Storage/MockFileSessionStorage.php" title="Symfony\Component\HttpFoundation\Session\Storage\MockFileSessionStorage"><span class="pre">MockFileSessionStorage</span></a><span class="link-target"> <span class="pre">[https://github.com/symfony/symfony/blob/master/src/Symfony/Component/HttpFoundation/Session/Storage/MockFileSessionStorage.php]</span></span></code>:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="k">use</span> <span class="nx">Symfony\Component\HttpFoundation\Session\Session</span><span class="p">;</span>
<span class="k">use</span> <span class="nx">Symfony\Component\HttpFoundation\Session\Storage\MockFileSessionStorage</span><span class="p">;</span>

<span class="nv">$session</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Session</span><span class="p">(</span><span class="k">new</span> <span class="nx">MockFileSessionStorage</span><span class="p">());</span>
</pre></div>
</div>
</div>
</div>


          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>