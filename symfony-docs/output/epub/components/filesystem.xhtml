<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <title>The Filesystem Component</title>
    <link rel="stylesheet" href="../_static/epub.css" type="text/css" />
    <link rel="stylesheet" href="../_static/pygments.css" type="text/css" />
    <link rel="stylesheet" type="text/css" href="../_static/rtd_custom.css" /> 
  </head><body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <div class="section" id="the-filesystem-component">
<span id="index-0"></span><h1>The Filesystem Component</h1>
<blockquote>
<div><p>The Filesystem component provides basic utilities for the filesystem.</p>
</div></blockquote>
<div class="section" id="installation">
<h2>Installation</h2>
<div class="highlight-terminal notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre>1</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="gp">$</span> composer require symfony/filesystem
</pre></div>
</td></tr></table></div>
<div class="admonition note">
<p class="admonition-title">Note</p>
<p>If you install this component outside of a Symfony application, you must
require the <code class="docutils literal notranslate"><span class="pre">vendor/autoload.php</span></code> file in your code to enable the class
autoloading mechanism provided by Composer. Read
<a class="reference internal" href="using_components.xhtml"><span class="doc">this article</span></a> for more details.</p>
</div>
</div>
<div class="section" id="usage">
<h2>Usage</h2>
<p>The <code class="docutils literal notranslate"><a class="reference external" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Filesystem/Filesystem.php" title="Symfony\Component\Filesystem\Filesystem"><span class="pre">Filesystem</span></a><span class="link-target"> <span class="pre">[https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Filesystem/Filesystem.php]</span></span></code> class is the unique
endpoint for filesystem operations:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="k">use</span> <span class="nx">Symfony\Component\Filesystem\Exception\IOExceptionInterface</span><span class="p">;</span>
<span class="k">use</span> <span class="nx">Symfony\Component\Filesystem\Filesystem</span><span class="p">;</span>

<span class="nv">$filesystem</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Filesystem</span><span class="p">();</span>

<span class="k">try</span> <span class="p">{</span>
    <span class="nv">$filesystem</span><span class="o">-&gt;</span><span class="na">mkdir</span><span class="p">(</span><span class="nb">sys_get_temp_dir</span><span class="p">()</span><span class="o">.</span><span class="s1">&#39;/&#39;</span><span class="o">.</span><span class="nx">random_int</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1000</span><span class="p">));</span>
<span class="p">}</span> <span class="k">catch</span> <span class="p">(</span><span class="nx">IOExceptionInterface</span> <span class="nv">$exception</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">echo</span> <span class="s2">&quot;An error occurred while creating your directory at &quot;</span><span class="o">.</span><span class="nv">$exception</span><span class="o">-&gt;</span><span class="na">getPath</span><span class="p">();</span>
<span class="p">}</span>
</pre></div>
</div>
<div class="admonition note">
<p class="admonition-title">Note</p>
<p>Methods <code class="docutils literal notranslate"><a class="reference external" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Filesystem/Filesystem.php" title="Symfony\Component\Filesystem\Filesystem::mkdir()"><span class="pre">mkdir()</span></a><span class="link-target"> <span class="pre">[https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Filesystem/Filesystem.php]</span></span></code>,
<code class="docutils literal notranslate"><a class="reference external" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Filesystem/Filesystem.php" title="Symfony\Component\Filesystem\Filesystem::exists()"><span class="pre">exists()</span></a><span class="link-target"> <span class="pre">[https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Filesystem/Filesystem.php]</span></span></code>,
<code class="docutils literal notranslate"><a class="reference external" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Filesystem/Filesystem.php" title="Symfony\Component\Filesystem\Filesystem::touch()"><span class="pre">touch()</span></a><span class="link-target"> <span class="pre">[https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Filesystem/Filesystem.php]</span></span></code>,
<code class="docutils literal notranslate"><a class="reference external" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Filesystem/Filesystem.php" title="Symfony\Component\Filesystem\Filesystem::remove()"><span class="pre">remove()</span></a><span class="link-target"> <span class="pre">[https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Filesystem/Filesystem.php]</span></span></code>,
<code class="docutils literal notranslate"><a class="reference external" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Filesystem/Filesystem.php" title="Symfony\Component\Filesystem\Filesystem::chmod()"><span class="pre">chmod()</span></a><span class="link-target"> <span class="pre">[https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Filesystem/Filesystem.php]</span></span></code>,
<code class="docutils literal notranslate"><a class="reference external" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Filesystem/Filesystem.php" title="Symfony\Component\Filesystem\Filesystem::chown()"><span class="pre">chown()</span></a><span class="link-target"> <span class="pre">[https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Filesystem/Filesystem.php]</span></span></code> and
<code class="docutils literal notranslate"><a class="reference external" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Filesystem/Filesystem.php" title="Symfony\Component\Filesystem\Filesystem::chgrp()"><span class="pre">chgrp()</span></a><span class="link-target"> <span class="pre">[https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Filesystem/Filesystem.php]</span></span></code> can receive a
string, an array or any object implementing <code class="docutils literal notranslate"><a class="reference external" href="https://www.php.net/manual/en/class.traversable.php" title="Traversable"><span class="pre">Traversable</span></a><span class="link-target"> <span class="pre">[https://www.php.net/manual/en/class.traversable.php]</span></span></code> as
the target argument.</p>
</div>
<div class="section" id="mkdir">
<h3><code class="docutils literal notranslate"><span class="pre">mkdir</span></code></h3>
<p><code class="docutils literal notranslate"><a class="reference external" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Filesystem/Filesystem.php" title="Symfony\Component\Filesystem\Filesystem::mkdir()"><span class="pre">mkdir()</span></a><span class="link-target"> <span class="pre">[https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Filesystem/Filesystem.php]</span></span></code> creates a directory recursively.
On POSIX filesystems, directories are created with a default mode value
<cite>0777</cite>. You can use the second argument to set your own mode:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="nv">$filesystem</span><span class="o">-&gt;</span><span class="na">mkdir</span><span class="p">(</span><span class="s1">&#39;/tmp/photos&#39;</span><span class="p">,</span> <span class="mo">0700</span><span class="p">);</span>
</pre></div>
</div>
<div class="admonition note">
<p class="admonition-title">Note</p>
<p>You can pass an array or any <code class="docutils literal notranslate"><a class="reference external" href="https://www.php.net/manual/en/class.traversable.php" title="Traversable"><span class="pre">Traversable</span></a><span class="link-target"> <span class="pre">[https://www.php.net/manual/en/class.traversable.php]</span></span></code> object as the first
argument.</p>
</div>
<div class="admonition note">
<p class="admonition-title">Note</p>
<p>This function ignores already existing directories.</p>
</div>
<div class="admonition note">
<p class="admonition-title">Note</p>
<p>The directory permissions are affected by the current <a class="reference external" href="https://en.wikipedia.org/wiki/Umask">umask</a><span class="link-target"> [https://en.wikipedia.org/wiki/Umask]</span>.
Set the <code class="docutils literal notranslate"><span class="pre">umask</span></code> for your webserver, use PHPâ€™s <code class="docutils literal notranslate"><a class="reference external" href="https://www.php.net/manual/en/function.umask.php" title="umask"><span class="pre">umask</span></a><span class="link-target"> <span class="pre">[https://www.php.net/manual/en/function.umask.php]</span></span></code>
function or use the <code class="docutils literal notranslate"><a class="reference external" href="https://www.php.net/manual/en/function.chmod.php" title="chmod"><span class="pre">chmod</span></a><span class="link-target"> <span class="pre">[https://www.php.net/manual/en/function.chmod.php]</span></span></code> function after the
directory has been created.</p>
</div>
</div>
<div class="section" id="exists">
<h3><code class="docutils literal notranslate"><span class="pre">exists</span></code></h3>
<p><code class="docutils literal notranslate"><a class="reference external" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Filesystem/Filesystem.php" title="Symfony\Component\Filesystem\Filesystem::exists()"><span class="pre">exists()</span></a><span class="link-target"> <span class="pre">[https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Filesystem/Filesystem.php]</span></span></code> checks for the
presence of one or more files or directories and returns <code class="docutils literal notranslate"><span class="pre">false</span></code> if any of
them is missing:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="c1">// if this absolute directory exists, returns true</span>
<span class="nv">$filesystem</span><span class="o">-&gt;</span><span class="na">exists</span><span class="p">(</span><span class="s1">&#39;/tmp/photos&#39;</span><span class="p">);</span>

<span class="c1">// if rabbit.jpg exists and bottle.png does not exist, returns false</span>
<span class="c1">// non-absolute paths are relative to the directory where the running PHP script is stored</span>
<span class="nv">$filesystem</span><span class="o">-&gt;</span><span class="na">exists</span><span class="p">([</span><span class="s1">&#39;rabbit.jpg&#39;</span><span class="p">,</span> <span class="s1">&#39;bottle.png&#39;</span><span class="p">]);</span>
</pre></div>
</div>
<div class="admonition note">
<p class="admonition-title">Note</p>
<p>You can pass an array or any <code class="docutils literal notranslate"><a class="reference external" href="https://www.php.net/manual/en/class.traversable.php" title="Traversable"><span class="pre">Traversable</span></a><span class="link-target"> <span class="pre">[https://www.php.net/manual/en/class.traversable.php]</span></span></code> object as the first
argument.</p>
</div>
</div>
<div class="section" id="copy">
<h3><code class="docutils literal notranslate"><span class="pre">copy</span></code></h3>
<p><code class="docutils literal notranslate"><a class="reference external" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Filesystem/Filesystem.php" title="Symfony\Component\Filesystem\Filesystem::copy()"><span class="pre">copy()</span></a><span class="link-target"> <span class="pre">[https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Filesystem/Filesystem.php]</span></span></code> makes a copy of a
single file (use <code class="docutils literal notranslate"><a class="reference external" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Filesystem/Filesystem.php" title="Symfony\Component\Filesystem\Filesystem::mirror()"><span class="pre">mirror()</span></a><span class="link-target"> <span class="pre">[https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Filesystem/Filesystem.php]</span></span></code> to
copy directories). If the target already exists, the file is copied only if the
source modification date is later than the target. This behavior can be overridden
by the third boolean argument:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="c1">// works only if image-ICC has been modified after image.jpg</span>
<span class="nv">$filesystem</span><span class="o">-&gt;</span><span class="na">copy</span><span class="p">(</span><span class="s1">&#39;image-ICC.jpg&#39;</span><span class="p">,</span> <span class="s1">&#39;image.jpg&#39;</span><span class="p">);</span>

<span class="c1">// image.jpg will be overridden</span>
<span class="nv">$filesystem</span><span class="o">-&gt;</span><span class="na">copy</span><span class="p">(</span><span class="s1">&#39;image-ICC.jpg&#39;</span><span class="p">,</span> <span class="s1">&#39;image.jpg&#39;</span><span class="p">,</span> <span class="k">true</span><span class="p">);</span>
</pre></div>
</div>
</div>
<div class="section" id="touch">
<h3><code class="docutils literal notranslate"><span class="pre">touch</span></code></h3>
<p><code class="docutils literal notranslate"><a class="reference external" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Filesystem/Filesystem.php" title="Symfony\Component\Filesystem\Filesystem::touch()"><span class="pre">touch()</span></a><span class="link-target"> <span class="pre">[https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Filesystem/Filesystem.php]</span></span></code> sets access and
modification time for a file. The current time is used by default. You can set
your own with the second argument. The third argument is the access time:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="c1">// sets modification time to the current timestamp</span>
<span class="nv">$filesystem</span><span class="o">-&gt;</span><span class="na">touch</span><span class="p">(</span><span class="s1">&#39;file.txt&#39;</span><span class="p">);</span>
<span class="c1">// sets modification time 10 seconds in the future</span>
<span class="nv">$filesystem</span><span class="o">-&gt;</span><span class="na">touch</span><span class="p">(</span><span class="s1">&#39;file.txt&#39;</span><span class="p">,</span> <span class="nb">time</span><span class="p">()</span> <span class="o">+</span> <span class="mi">10</span><span class="p">);</span>
<span class="c1">// sets access time 10 seconds in the past</span>
<span class="nv">$filesystem</span><span class="o">-&gt;</span><span class="na">touch</span><span class="p">(</span><span class="s1">&#39;file.txt&#39;</span><span class="p">,</span> <span class="nb">time</span><span class="p">(),</span> <span class="nb">time</span><span class="p">()</span> <span class="o">-</span> <span class="mi">10</span><span class="p">);</span>
</pre></div>
</div>
<div class="admonition note">
<p class="admonition-title">Note</p>
<p>You can pass an array or any <code class="docutils literal notranslate"><a class="reference external" href="https://www.php.net/manual/en/class.traversable.php" title="Traversable"><span class="pre">Traversable</span></a><span class="link-target"> <span class="pre">[https://www.php.net/manual/en/class.traversable.php]</span></span></code> object as the first
argument.</p>
</div>
</div>
<div class="section" id="chown">
<h3><code class="docutils literal notranslate"><span class="pre">chown</span></code></h3>
<p><code class="docutils literal notranslate"><a class="reference external" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Filesystem/Filesystem.php" title="Symfony\Component\Filesystem\Filesystem::chown()"><span class="pre">chown()</span></a><span class="link-target"> <span class="pre">[https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Filesystem/Filesystem.php]</span></span></code> changes the owner of
a file. The third argument is a boolean recursive option:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="c1">// sets the owner of the lolcat video to www-data</span>
<span class="nv">$filesystem</span><span class="o">-&gt;</span><span class="na">chown</span><span class="p">(</span><span class="s1">&#39;lolcat.mp4&#39;</span><span class="p">,</span> <span class="s1">&#39;www-data&#39;</span><span class="p">);</span>
<span class="c1">// changes the owner of the video directory recursively</span>
<span class="nv">$filesystem</span><span class="o">-&gt;</span><span class="na">chown</span><span class="p">(</span><span class="s1">&#39;/video&#39;</span><span class="p">,</span> <span class="s1">&#39;www-data&#39;</span><span class="p">,</span> <span class="k">true</span><span class="p">);</span>
</pre></div>
</div>
<div class="admonition note">
<p class="admonition-title">Note</p>
<p>You can pass an array or any <code class="docutils literal notranslate"><a class="reference external" href="https://www.php.net/manual/en/class.traversable.php" title="Traversable"><span class="pre">Traversable</span></a><span class="link-target"> <span class="pre">[https://www.php.net/manual/en/class.traversable.php]</span></span></code> object as the first
argument.</p>
</div>
</div>
<div class="section" id="chgrp">
<h3><code class="docutils literal notranslate"><span class="pre">chgrp</span></code></h3>
<p><code class="docutils literal notranslate"><a class="reference external" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Filesystem/Filesystem.php" title="Symfony\Component\Filesystem\Filesystem::chgrp()"><span class="pre">chgrp()</span></a><span class="link-target"> <span class="pre">[https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Filesystem/Filesystem.php]</span></span></code> changes the group of
a file. The third argument is a boolean recursive option:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="c1">// sets the group of the lolcat video to nginx</span>
<span class="nv">$filesystem</span><span class="o">-&gt;</span><span class="na">chgrp</span><span class="p">(</span><span class="s1">&#39;lolcat.mp4&#39;</span><span class="p">,</span> <span class="s1">&#39;nginx&#39;</span><span class="p">);</span>
<span class="c1">// changes the group of the video directory recursively</span>
<span class="nv">$filesystem</span><span class="o">-&gt;</span><span class="na">chgrp</span><span class="p">(</span><span class="s1">&#39;/video&#39;</span><span class="p">,</span> <span class="s1">&#39;nginx&#39;</span><span class="p">,</span> <span class="k">true</span><span class="p">);</span>
</pre></div>
</div>
<div class="admonition note">
<p class="admonition-title">Note</p>
<p>You can pass an array or any <code class="docutils literal notranslate"><a class="reference external" href="https://www.php.net/manual/en/class.traversable.php" title="Traversable"><span class="pre">Traversable</span></a><span class="link-target"> <span class="pre">[https://www.php.net/manual/en/class.traversable.php]</span></span></code> object as the first
argument.</p>
</div>
</div>
<div class="section" id="chmod">
<h3><code class="docutils literal notranslate"><span class="pre">chmod</span></code></h3>
<p><code class="docutils literal notranslate"><a class="reference external" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Filesystem/Filesystem.php" title="Symfony\Component\Filesystem\Filesystem::chmod()"><span class="pre">chmod()</span></a><span class="link-target"> <span class="pre">[https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Filesystem/Filesystem.php]</span></span></code> changes the mode or
permissions of a file. The fourth argument is a boolean recursive option:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="c1">// sets the mode of the video to 0600</span>
<span class="nv">$filesystem</span><span class="o">-&gt;</span><span class="na">chmod</span><span class="p">(</span><span class="s1">&#39;video.ogg&#39;</span><span class="p">,</span> <span class="mo">0600</span><span class="p">);</span>
<span class="c1">// changes the mod of the src directory recursively</span>
<span class="nv">$filesystem</span><span class="o">-&gt;</span><span class="na">chmod</span><span class="p">(</span><span class="s1">&#39;src&#39;</span><span class="p">,</span> <span class="mo">0700</span><span class="p">,</span> <span class="mo">0000</span><span class="p">,</span> <span class="k">true</span><span class="p">);</span>
</pre></div>
</div>
<div class="admonition note">
<p class="admonition-title">Note</p>
<p>You can pass an array or any <code class="docutils literal notranslate"><a class="reference external" href="https://www.php.net/manual/en/class.traversable.php" title="Traversable"><span class="pre">Traversable</span></a><span class="link-target"> <span class="pre">[https://www.php.net/manual/en/class.traversable.php]</span></span></code> object as the first
argument.</p>
</div>
</div>
<div class="section" id="remove">
<h3><code class="docutils literal notranslate"><span class="pre">remove</span></code></h3>
<p><code class="docutils literal notranslate"><a class="reference external" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Filesystem/Filesystem.php" title="Symfony\Component\Filesystem\Filesystem::remove()"><span class="pre">remove()</span></a><span class="link-target"> <span class="pre">[https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Filesystem/Filesystem.php]</span></span></code> deletes files,
directories and symlinks:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="nv">$filesystem</span><span class="o">-&gt;</span><span class="na">remove</span><span class="p">([</span><span class="s1">&#39;symlink&#39;</span><span class="p">,</span> <span class="s1">&#39;/path/to/directory&#39;</span><span class="p">,</span> <span class="s1">&#39;activity.log&#39;</span><span class="p">]);</span>
</pre></div>
</div>
<div class="admonition note">
<p class="admonition-title">Note</p>
<p>You can pass an array or any <code class="docutils literal notranslate"><a class="reference external" href="https://www.php.net/manual/en/class.traversable.php" title="Traversable"><span class="pre">Traversable</span></a><span class="link-target"> <span class="pre">[https://www.php.net/manual/en/class.traversable.php]</span></span></code> object as the first
argument.</p>
</div>
</div>
<div class="section" id="rename">
<h3><code class="docutils literal notranslate"><span class="pre">rename</span></code></h3>
<p><code class="docutils literal notranslate"><a class="reference external" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Filesystem/Filesystem.php" title="Symfony\Component\Filesystem\Filesystem::rename()"><span class="pre">rename()</span></a><span class="link-target"> <span class="pre">[https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Filesystem/Filesystem.php]</span></span></code> changes the name
of a single file or directory:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="c1">// renames a file</span>
<span class="nv">$filesystem</span><span class="o">-&gt;</span><span class="na">rename</span><span class="p">(</span><span class="s1">&#39;/tmp/processed_video.ogg&#39;</span><span class="p">,</span> <span class="s1">&#39;/path/to/store/video_647.ogg&#39;</span><span class="p">);</span>
<span class="c1">// renames a directory</span>
<span class="nv">$filesystem</span><span class="o">-&gt;</span><span class="na">rename</span><span class="p">(</span><span class="s1">&#39;/tmp/files&#39;</span><span class="p">,</span> <span class="s1">&#39;/path/to/store/files&#39;</span><span class="p">);</span>
<span class="c1">// if the target already exists, a third boolean argument is available to overwrite.</span>
<span class="nv">$filesystem</span><span class="o">-&gt;</span><span class="na">rename</span><span class="p">(</span><span class="s1">&#39;/tmp/processed_video2.ogg&#39;</span><span class="p">,</span> <span class="s1">&#39;/path/to/store/video_647.ogg&#39;</span><span class="p">,</span> <span class="k">true</span><span class="p">);</span>
</pre></div>
</div>
</div>
<div class="section" id="symlink">
<h3><code class="docutils literal notranslate"><span class="pre">symlink</span></code></h3>
<p><code class="docutils literal notranslate"><a class="reference external" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Filesystem/Filesystem.php" title="Symfony\Component\Filesystem\Filesystem::symlink()"><span class="pre">symlink()</span></a><span class="link-target"> <span class="pre">[https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Filesystem/Filesystem.php]</span></span></code> creates a
symbolic link from the target to the destination. If the filesystem does not
support symbolic links, a third boolean argument is available:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="c1">// creates a symbolic link</span>
<span class="nv">$filesystem</span><span class="o">-&gt;</span><span class="na">symlink</span><span class="p">(</span><span class="s1">&#39;/path/to/source&#39;</span><span class="p">,</span> <span class="s1">&#39;/path/to/destination&#39;</span><span class="p">);</span>
<span class="c1">// duplicates the source directory if the filesystem</span>
<span class="c1">// does not support symbolic links</span>
<span class="nv">$filesystem</span><span class="o">-&gt;</span><span class="na">symlink</span><span class="p">(</span><span class="s1">&#39;/path/to/source&#39;</span><span class="p">,</span> <span class="s1">&#39;/path/to/destination&#39;</span><span class="p">,</span> <span class="k">true</span><span class="p">);</span>
</pre></div>
</div>
</div>
<div class="section" id="readlink">
<h3><code class="docutils literal notranslate"><span class="pre">readlink</span></code></h3>
<p><code class="docutils literal notranslate"><a class="reference external" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Filesystem/Filesystem.php" title="Symfony\Component\Filesystem\Filesystem::readlink()"><span class="pre">readlink()</span></a><span class="link-target"> <span class="pre">[https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Filesystem/Filesystem.php]</span></span></code> read links targets.</p>
<p>PHPâ€™s <code class="docutils literal notranslate"><a class="reference external" href="https://www.php.net/manual/en/function.readlink.php" title="readlink"><span class="pre">readlink</span></a><span class="link-target"> <span class="pre">[https://www.php.net/manual/en/function.readlink.php]</span></span></code> function returns the target of a symbolic link. However, its behavior
is completely different under Windows and Unix. On Windows systems, <code class="docutils literal notranslate"><span class="pre">readlink()</span></code>
resolves recursively the children links of a link until a final target is found. On
Unix-based systems <code class="docutils literal notranslate"><span class="pre">readlink()</span></code> only resolves the next link.</p>
<p>The <code class="docutils literal notranslate"><a class="reference external" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Filesystem/Filesystem.php" title="Symfony\Component\Filesystem\Filesystem::readlink()"><span class="pre">readlink()</span></a><span class="link-target"> <span class="pre">[https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Filesystem/Filesystem.php]</span></span></code> method provided
by the Filesystem component always behaves in the same way:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="c1">// returns the next direct target of the link without considering the existence of the target</span>
<span class="nv">$filesystem</span><span class="o">-&gt;</span><span class="na">readlink</span><span class="p">(</span><span class="s1">&#39;/path/to/link&#39;</span><span class="p">);</span>

<span class="c1">// returns its absolute fully resolved final version of the target (if there are nested links, they are resolved)</span>
<span class="nv">$filesystem</span><span class="o">-&gt;</span><span class="na">readlink</span><span class="p">(</span><span class="s1">&#39;/path/to/link&#39;</span><span class="p">,</span> <span class="k">true</span><span class="p">);</span>
</pre></div>
</div>
<p>Its behavior is the following:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="k">public</span> <span class="k">function</span> <span class="nf">readlink</span><span class="p">(</span><span class="nv">$path</span><span class="p">,</span> <span class="nv">$canonicalize</span> <span class="o">=</span> <span class="k">false</span><span class="p">)</span>
</pre></div>
</div>
<ul class="simple">
<li><dl class="simple">
<dt>When <code class="docutils literal notranslate"><span class="pre">$canonicalize</span></code> is <code class="docutils literal notranslate"><span class="pre">false</span></code>:</dt>
<dd><ul>
<li><p>if <code class="docutils literal notranslate"><span class="pre">$path</span></code> does not exist or is not a link, it returns <code class="docutils literal notranslate"><span class="pre">null</span></code>.</p></li>
<li><p>if <code class="docutils literal notranslate"><span class="pre">$path</span></code> is a link, it returns the next direct target of the link without considering the existence of the target.</p></li>
</ul>
</dd>
</dl>
</li>
<li><dl class="simple">
<dt>When <code class="docutils literal notranslate"><span class="pre">$canonicalize</span></code> is <code class="docutils literal notranslate"><span class="pre">true</span></code>:</dt>
<dd><ul>
<li><p>if <code class="docutils literal notranslate"><span class="pre">$path</span></code> does not exist, it returns null.</p></li>
<li><p>if <code class="docutils literal notranslate"><span class="pre">$path</span></code> exists, it returns its absolute fully resolved final version.</p></li>
</ul>
</dd>
</dl>
</li>
</ul>
</div>
<div class="section" id="makepathrelative">
<h3><code class="docutils literal notranslate"><span class="pre">makePathRelative</span></code></h3>
<p><code class="docutils literal notranslate"><a class="reference external" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Filesystem/Filesystem.php" title="Symfony\Component\Filesystem\Filesystem::makePathRelative()"><span class="pre">makePathRelative()</span></a><span class="link-target"> <span class="pre">[https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Filesystem/Filesystem.php]</span></span></code> takes two
absolute paths and returns the relative path from the second path to the first one:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="c1">// returns &#39;../&#39;</span>
<span class="nv">$filesystem</span><span class="o">-&gt;</span><span class="na">makePathRelative</span><span class="p">(</span>
    <span class="s1">&#39;/var/lib/symfony/src/Symfony/&#39;</span><span class="p">,</span>
    <span class="s1">&#39;/var/lib/symfony/src/Symfony/Component&#39;</span>
<span class="p">);</span>
<span class="c1">// returns &#39;videos/&#39;</span>
<span class="nv">$filesystem</span><span class="o">-&gt;</span><span class="na">makePathRelative</span><span class="p">(</span><span class="s1">&#39;/tmp/videos&#39;</span><span class="p">,</span> <span class="s1">&#39;/tmp&#39;</span><span class="p">)</span>
</pre></div>
</div>
</div>
<div class="section" id="mirror">
<h3><code class="docutils literal notranslate"><span class="pre">mirror</span></code></h3>
<p><code class="docutils literal notranslate"><a class="reference external" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Filesystem/Filesystem.php" title="Symfony\Component\Filesystem\Filesystem::mirror()"><span class="pre">mirror()</span></a><span class="link-target"> <span class="pre">[https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Filesystem/Filesystem.php]</span></span></code> copies all the
contents of the source directory into the target one (use the
<code class="docutils literal notranslate"><a class="reference external" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Filesystem/Filesystem.php" title="Symfony\Component\Filesystem\Filesystem::copy()"><span class="pre">copy()</span></a><span class="link-target"> <span class="pre">[https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Filesystem/Filesystem.php]</span></span></code> method to copy single
files):</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="nv">$filesystem</span><span class="o">-&gt;</span><span class="na">mirror</span><span class="p">(</span><span class="s1">&#39;/path/to/source&#39;</span><span class="p">,</span> <span class="s1">&#39;/path/to/target&#39;</span><span class="p">);</span>
</pre></div>
</div>
</div>
<div class="section" id="isabsolutepath">
<h3><code class="docutils literal notranslate"><span class="pre">isAbsolutePath</span></code></h3>
<p><code class="docutils literal notranslate"><a class="reference external" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Filesystem/Filesystem.php" title="Symfony\Component\Filesystem\Filesystem::isAbsolutePath()"><span class="pre">isAbsolutePath()</span></a><span class="link-target"> <span class="pre">[https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Filesystem/Filesystem.php]</span></span></code> returns
<code class="docutils literal notranslate"><span class="pre">true</span></code> if the given path is absolute, <code class="docutils literal notranslate"><span class="pre">false</span></code> otherwise:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="c1">// returns true</span>
<span class="nv">$filesystem</span><span class="o">-&gt;</span><span class="na">isAbsolutePath</span><span class="p">(</span><span class="s1">&#39;/tmp&#39;</span><span class="p">);</span>
<span class="c1">// returns true</span>
<span class="nv">$filesystem</span><span class="o">-&gt;</span><span class="na">isAbsolutePath</span><span class="p">(</span><span class="s1">&#39;c:\\Windows&#39;</span><span class="p">);</span>
<span class="c1">// returns false</span>
<span class="nv">$filesystem</span><span class="o">-&gt;</span><span class="na">isAbsolutePath</span><span class="p">(</span><span class="s1">&#39;tmp&#39;</span><span class="p">);</span>
<span class="c1">// returns false</span>
<span class="nv">$filesystem</span><span class="o">-&gt;</span><span class="na">isAbsolutePath</span><span class="p">(</span><span class="s1">&#39;../dir&#39;</span><span class="p">);</span>
</pre></div>
</div>
</div>
<div class="section" id="tempnam">
<h3><code class="docutils literal notranslate"><span class="pre">tempnam</span></code></h3>
<p><code class="docutils literal notranslate"><a class="reference external" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Filesystem/Filesystem.php" title="Symfony\Component\Filesystem\Filesystem::tempnam()"><span class="pre">tempnam()</span></a><span class="link-target"> <span class="pre">[https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Filesystem/Filesystem.php]</span></span></code> creates a
temporary file with a unique filename, and returns its path, or throw an
exception on failure:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="c1">// returns a path like : /tmp/prefix_wyjgtF</span>
<span class="nv">$filesystem</span><span class="o">-&gt;</span><span class="na">tempnam</span><span class="p">(</span><span class="s1">&#39;/tmp&#39;</span><span class="p">,</span> <span class="s1">&#39;prefix_&#39;</span><span class="p">);</span>
</pre></div>
</div>
</div>
<div class="section" id="dumpfile">
<h3><code class="docutils literal notranslate"><span class="pre">dumpFile</span></code></h3>
<p><code class="docutils literal notranslate"><a class="reference external" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Filesystem/Filesystem.php" title="Symfony\Component\Filesystem\Filesystem::dumpFile()"><span class="pre">dumpFile()</span></a><span class="link-target"> <span class="pre">[https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Filesystem/Filesystem.php]</span></span></code> saves the given
contents into a file. It does this in an atomic manner: it writes a temporary
file first and then moves it to the new file location when itâ€™s finished.
This means that the user will always see either the complete old file or
complete new file (but never a partially-written file):</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="nv">$filesystem</span><span class="o">-&gt;</span><span class="na">dumpFile</span><span class="p">(</span><span class="s1">&#39;file.txt&#39;</span><span class="p">,</span> <span class="s1">&#39;Hello World&#39;</span><span class="p">);</span>
</pre></div>
</div>
<p>The <code class="docutils literal notranslate"><span class="pre">file.txt</span></code> file contains <code class="docutils literal notranslate"><span class="pre">Hello</span> <span class="pre">World</span></code> now.</p>
</div>
<div class="section" id="appendtofile">
<h3><code class="docutils literal notranslate"><span class="pre">appendToFile</span></code></h3>
<p><code class="docutils literal notranslate"><a class="reference external" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Filesystem/Filesystem.php" title="Symfony\Component\Filesystem\Filesystem::appendToFile()"><span class="pre">appendToFile()</span></a><span class="link-target"> <span class="pre">[https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Filesystem/Filesystem.php]</span></span></code> adds new
contents at the end of some file:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="nv">$filesystem</span><span class="o">-&gt;</span><span class="na">appendToFile</span><span class="p">(</span><span class="s1">&#39;logs.txt&#39;</span><span class="p">,</span> <span class="s1">&#39;Email sent to user@example.com&#39;</span><span class="p">);</span>
</pre></div>
</div>
<p>If either the file or its containing directory doesnâ€™t exist, this method
creates them before appending the contents.</p>
</div>
</div>
<div class="section" id="error-handling">
<h2>Error Handling</h2>
<p>Whenever something wrong happens, an exception implementing
<code class="docutils literal notranslate"><a class="reference external" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Filesystem/Exception/ExceptionInterface.php" title="Symfony\Component\Filesystem\Exception\ExceptionInterface"><span class="pre">ExceptionInterface</span></a><span class="link-target"> <span class="pre">[https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Filesystem/Exception/ExceptionInterface.php]</span></span></code> or
<code class="docutils literal notranslate"><a class="reference external" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Filesystem/Exception/IOExceptionInterface.php" title="Symfony\Component\Filesystem\Exception\IOExceptionInterface"><span class="pre">IOExceptionInterface</span></a><span class="link-target"> <span class="pre">[https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Filesystem/Exception/IOExceptionInterface.php]</span></span></code> is thrown.</p>
<div class="admonition note">
<p class="admonition-title">Note</p>
<p>An <code class="docutils literal notranslate"><a class="reference external" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Filesystem/Exception/IOException.php" title="Symfony\Component\Filesystem\Exception\IOException"><span class="pre">IOException</span></a><span class="link-target"> <span class="pre">[https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Filesystem/Exception/IOException.php]</span></span></code> is
thrown if directory creation fails.</p>
</div>
</div>
</div>


          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>