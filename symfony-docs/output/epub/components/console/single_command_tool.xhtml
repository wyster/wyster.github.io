<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <title>Building a single Command Application</title>
    <link rel="stylesheet" href="../../_static/epub.css" type="text/css" />
    <link rel="stylesheet" href="../../_static/pygments.css" type="text/css" />
    <link rel="stylesheet" type="text/css" href="../../_static/rtd_custom.css" /> 
  </head><body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <div class="section" id="building-a-single-command-application">
<span id="index-0"></span><h1>Building a single Command Application</h1>
<p>When building a command line tool, you may not need to provide several commands.
In such case, having to pass the command name each time is tedious.</p>
<div class="versionadded">
<p><span class="versionmodified">New in version 5.1: </span>The <code class="docutils literal notranslate"><a class="reference external" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Console/SingleCommandApplication.php" title="Symfony\Component\Console\SingleCommandApplication"><span class="pre">SingleCommandApplication</span></a><span class="link-target"> <span class="pre">[https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Console/SingleCommandApplication.php]</span></span></code> class was
introduced in Symfony 5.1.</p>
</div>
<p>Fortunately, it is possible to remove this need by declaring a single command
application:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="c1">#!/usr/bin/env php</span>
<span class="o">&lt;?</span><span class="nx">php</span>
<span class="k">require</span> <span class="no">__DIR__</span><span class="o">.</span><span class="s1">&#39;/vendor/autoload.php&#39;</span><span class="p">;</span>

<span class="k">use</span> <span class="nx">Symfony\Component\Console\Input\InputArgument</span><span class="p">;</span>
<span class="k">use</span> <span class="nx">Symfony\Component\Console\Input\InputInterface</span><span class="p">;</span>
<span class="k">use</span> <span class="nx">Symfony\Component\Console\Input\InputOption</span><span class="p">;</span>
<span class="k">use</span> <span class="nx">Symfony\Component\Console\Output\OutputInterface</span><span class="p">;</span>
<span class="k">use</span> <span class="nx">Symfony\Component\Console\SingleCommandApplication</span><span class="p">;</span>

<span class="p">(</span><span class="k">new</span> <span class="nx">SingleCommandApplication</span><span class="p">())</span>
    <span class="o">-&gt;</span><span class="na">setName</span><span class="p">(</span><span class="s1">&#39;My Super Command&#39;</span><span class="p">)</span> <span class="c1">// Optional</span>
    <span class="o">-&gt;</span><span class="na">setVersion</span><span class="p">(</span><span class="s1">&#39;1.0.0&#39;</span><span class="p">)</span> <span class="c1">// Optional</span>
    <span class="o">-&gt;</span><span class="na">addArgument</span><span class="p">(</span><span class="s1">&#39;foo&#39;</span><span class="p">,</span> <span class="nx">InputArgument</span><span class="o">::</span><span class="na">OPTIONAL</span><span class="p">,</span> <span class="s1">&#39;The directory&#39;</span><span class="p">)</span>
    <span class="o">-&gt;</span><span class="na">addOption</span><span class="p">(</span><span class="s1">&#39;bar&#39;</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="nx">InputOption</span><span class="o">::</span><span class="na">VALUE_REQUIRED</span><span class="p">)</span>
    <span class="o">-&gt;</span><span class="na">setCode</span><span class="p">(</span><span class="k">function</span> <span class="p">(</span><span class="nx">InputInterface</span> <span class="nv">$input</span><span class="p">,</span> <span class="nx">OutputInterface</span> <span class="nv">$output</span><span class="p">)</span> <span class="p">{</span>
        <span class="c1">// output arguments and options</span>
    <span class="p">})</span>
    <span class="o">-&gt;</span><span class="na">run</span><span class="p">();</span>
</pre></div>
</div>
<p>You can still register a command as usual:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="c1">#!/usr/bin/env php</span>
<span class="o">&lt;?</span><span class="nx">php</span>
<span class="k">require</span> <span class="no">__DIR__</span><span class="o">.</span><span class="s1">&#39;/vendor/autoload.php&#39;</span><span class="p">;</span>

<span class="k">use</span> <span class="nx">Acme\Command\DefaultCommand</span><span class="p">;</span>
<span class="k">use</span> <span class="nx">Symfony\Component\Console\Application</span><span class="p">;</span>

<span class="nv">$application</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Application</span><span class="p">(</span><span class="s1">&#39;echo&#39;</span><span class="p">,</span> <span class="s1">&#39;1.0.0&#39;</span><span class="p">);</span>
<span class="nv">$command</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">DefaultCommand</span><span class="p">();</span>

<span class="nv">$application</span><span class="o">-&gt;</span><span class="na">add</span><span class="p">(</span><span class="nv">$command</span><span class="p">);</span>

<span class="nv">$application</span><span class="o">-&gt;</span><span class="na">setDefaultCommand</span><span class="p">(</span><span class="nv">$command</span><span class="o">-&gt;</span><span class="na">getName</span><span class="p">(),</span> <span class="k">true</span><span class="p">);</span>
<span class="nv">$application</span><span class="o">-&gt;</span><span class="na">run</span><span class="p">();</span>
</pre></div>
</div>
<p>The <code class="docutils literal notranslate"><a class="reference external" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Console/Application.php" title="Symfony\Component\Console\Application::setDefaultCommand()"><span class="pre">setDefaultCommand()</span></a><span class="link-target"> <span class="pre">[https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Console/Application.php]</span></span></code> method
accepts a boolean as second parameter. If true, the command <code class="docutils literal notranslate"><span class="pre">echo</span></code> will then
always be used, without having to pass its name.</p>
</div>


          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>