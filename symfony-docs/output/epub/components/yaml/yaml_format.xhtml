<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <title>The YAML Format</title>
    <link rel="stylesheet" href="../../_static/epub.css" type="text/css" />
    <link rel="stylesheet" href="../../_static/pygments.css" type="text/css" />
    <link rel="stylesheet" type="text/css" href="../../_static/rtd_custom.css" /> 
  </head><body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <div class="section" id="the-yaml-format">
<span id="index-0"></span><h1>The YAML Format</h1>
<p>According to the official <a class="reference external" href="https://yaml.org/">YAML website</a><span class="link-target"> [https://yaml.org/]</span>, YAML is “a human friendly data
serialization standard for all programming languages”. The Symfony Yaml
component implements a subset of the <a class="reference external" href="https://www.yaml.org/spec/1.2/spec.html">YAML specification</a><span class="link-target"> [https://www.yaml.org/spec/1.2/spec.html]</span>. Specifically, it
implements the minimum set of features needed to use YAML as a configuration
file format.</p>
<div class="section" id="scalars">
<h2>Scalars</h2>
<p>The syntax for scalars is similar to the PHP syntax.</p>
<div class="section" id="strings">
<h3>Strings</h3>
<p>Strings in YAML can be wrapped both in single and double quotes. In some cases,
they can also be unquoted:</p>
<div class="highlight-yaml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="l l-Scalar l-Scalar-Plain">A string in YAML</span>

<span class="l l-Scalar l-Scalar-Plain">&#39;A singled-quoted string in YAML&#39;</span>

<span class="l l-Scalar l-Scalar-Plain">&quot;A double-quoted string in YAML&quot;</span>
</pre></div>
</td></tr></table></div>
<p>Quoted styles are useful when a string starts or end with one or more relevant
spaces, because unquoted strings are trimmed on both end when parsing their
contents. Quotes are required when the string contains special or reserved characters.</p>
<p>When using single-quoted strings, any single quote <code class="docutils literal notranslate"><span class="pre">'</span></code> inside its contents
must be doubled to escape it:</p>
<div class="highlight-yaml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre>1</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="s">&#39;A</span><span class="nv"> </span><span class="s">single</span><span class="nv"> </span><span class="s">quote</span><span class="nv"> </span><span class="se">&#39;&#39;</span><span class="nv"> </span><span class="s">inside</span><span class="nv"> </span><span class="s">a</span><span class="nv"> </span><span class="s">single-quoted</span><span class="nv"> </span><span class="s">string&#39;</span>
</pre></div>
</td></tr></table></div>
<p>Strings containing any of the following characters must be quoted. Although you
can use double quotes, for these characters it is more convenient to use single
quotes, which avoids having to escape any backslash <code class="docutils literal notranslate"><span class="pre">\</span></code>:</p>
<ul class="simple">
<li><p><code class="docutils literal notranslate"><span class="pre">:</span></code>, <code class="docutils literal notranslate"><span class="pre">{</span></code>, <code class="docutils literal notranslate"><span class="pre">}</span></code>, <code class="docutils literal notranslate"><span class="pre">[</span></code>, <code class="docutils literal notranslate"><span class="pre">]</span></code>, <code class="docutils literal notranslate"><span class="pre">,</span></code>, <code class="docutils literal notranslate"><span class="pre">&amp;</span></code>, <code class="docutils literal notranslate"><span class="pre">*</span></code>, <code class="docutils literal notranslate"><span class="pre">#</span></code>, <code class="docutils literal notranslate"><span class="pre">?</span></code>, <code class="docutils literal notranslate"><span class="pre">|</span></code>,
<code class="docutils literal notranslate"><span class="pre">-</span></code>, <code class="docutils literal notranslate"><span class="pre">&lt;</span></code>, <code class="docutils literal notranslate"><span class="pre">&gt;</span></code>, <code class="docutils literal notranslate"><span class="pre">=</span></code>, <code class="docutils literal notranslate"><span class="pre">!</span></code>, <code class="docutils literal notranslate"><span class="pre">%</span></code>, <code class="docutils literal notranslate"><span class="pre">&#64;</span></code>, <code class="docutils literal notranslate"><span class="pre">`</span></code></p></li>
</ul>
<p>The double-quoted style provides a way to express arbitrary strings, by
using <code class="docutils literal notranslate"><span class="pre">\</span></code> to escape characters and sequences. For instance, it is very useful
when you need to embed a <code class="docutils literal notranslate"><span class="pre">\n</span></code> or a Unicode character in a string.</p>
<div class="highlight-yaml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre>1</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="s">&quot;A</span><span class="nv"> </span><span class="s">double-quoted</span><span class="nv"> </span><span class="s">string</span><span class="nv"> </span><span class="s">in</span><span class="nv"> </span><span class="s">YAML\n&quot;</span>
</pre></div>
</td></tr></table></div>
<p>If the string contains any of the following control characters, it must be
escaped with double quotes:</p>
<ul class="simple">
<li><p><code class="docutils literal notranslate"><span class="pre">\0</span></code>, <code class="docutils literal notranslate"><span class="pre">\x01</span></code>, <code class="docutils literal notranslate"><span class="pre">\x02</span></code>, <code class="docutils literal notranslate"><span class="pre">\x03</span></code>, <code class="docutils literal notranslate"><span class="pre">\x04</span></code>, <code class="docutils literal notranslate"><span class="pre">\x05</span></code>, <code class="docutils literal notranslate"><span class="pre">\x06</span></code>, <code class="docutils literal notranslate"><span class="pre">\a</span></code>,
<code class="docutils literal notranslate"><span class="pre">\b</span></code>, <code class="docutils literal notranslate"><span class="pre">\t</span></code>, <code class="docutils literal notranslate"><span class="pre">\n</span></code>, <code class="docutils literal notranslate"><span class="pre">\v</span></code>, <code class="docutils literal notranslate"><span class="pre">\f</span></code>, <code class="docutils literal notranslate"><span class="pre">\r</span></code>, <code class="docutils literal notranslate"><span class="pre">\x0e</span></code>, <code class="docutils literal notranslate"><span class="pre">\x0f</span></code>, <code class="docutils literal notranslate"><span class="pre">\x10</span></code>,
<code class="docutils literal notranslate"><span class="pre">\x11</span></code>, <code class="docutils literal notranslate"><span class="pre">\x12</span></code>, <code class="docutils literal notranslate"><span class="pre">\x13</span></code>, <code class="docutils literal notranslate"><span class="pre">\x14</span></code>, <code class="docutils literal notranslate"><span class="pre">\x15</span></code>, <code class="docutils literal notranslate"><span class="pre">\x16</span></code>, <code class="docutils literal notranslate"><span class="pre">\x17</span></code>, <code class="docutils literal notranslate"><span class="pre">\x18</span></code>,
<code class="docutils literal notranslate"><span class="pre">\x19</span></code>, <code class="docutils literal notranslate"><span class="pre">\x1a</span></code>, <code class="docutils literal notranslate"><span class="pre">\e</span></code>, <code class="docutils literal notranslate"><span class="pre">\x1c</span></code>, <code class="docutils literal notranslate"><span class="pre">\x1d</span></code>, <code class="docutils literal notranslate"><span class="pre">\x1e</span></code>, <code class="docutils literal notranslate"><span class="pre">\x1f</span></code>, <code class="docutils literal notranslate"><span class="pre">\N</span></code>,
<code class="docutils literal notranslate"><span class="pre">\_</span></code>, <code class="docutils literal notranslate"><span class="pre">\L</span></code>, <code class="docutils literal notranslate"><span class="pre">\P</span></code></p></li>
</ul>
<p>Finally, there are other cases when the strings must be quoted, no matter if
you’re using single or double quotes:</p>
<ul class="simple">
<li><p>When the string is <code class="docutils literal notranslate"><span class="pre">true</span></code> or <code class="docutils literal notranslate"><span class="pre">false</span></code> (otherwise, it would be treated as a
boolean value);</p></li>
<li><p>When the string is <code class="docutils literal notranslate"><span class="pre">null</span></code> or <code class="docutils literal notranslate"><span class="pre">~</span></code> (otherwise, it would be considered as a
<code class="docutils literal notranslate"><span class="pre">null</span></code> value);</p></li>
<li><p>When the string looks like a number, such as integers (e.g. <code class="docutils literal notranslate"><span class="pre">2</span></code>, <code class="docutils literal notranslate"><span class="pre">14</span></code>, etc.),
floats (e.g. <code class="docutils literal notranslate"><span class="pre">2.6</span></code>, <code class="docutils literal notranslate"><span class="pre">14.9</span></code>) and exponential numbers (e.g. <code class="docutils literal notranslate"><span class="pre">12e7</span></code>, etc.)
(otherwise, it would be treated as a numeric value);</p></li>
<li><p>When the string looks like a date (e.g. <code class="docutils literal notranslate"><span class="pre">2014-12-31</span></code>) (otherwise it would be
automatically converted into a Unix timestamp).</p></li>
</ul>
<p>When a string contains line breaks, you can use the literal style, indicated
by the pipe (<code class="docutils literal notranslate"><span class="pre">|</span></code>), to indicate that the string will span several lines. In
literals, newlines are preserved:</p>
<div class="highlight-yaml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="p p-Indicator">|</span>
  <span class="no">\/ /| |\/| |</span>
  <span class="no">/ / | |  | |__</span>
</pre></div>
</td></tr></table></div>
<p>Alternatively, strings can be written with the folded style, denoted by <code class="docutils literal notranslate"><span class="pre">&gt;</span></code>,
where each line break is replaced by a space:</p>
<div class="highlight-yaml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="p p-Indicator">&gt;</span>
  <span class="no">This is a very long sentence</span>
  <span class="no">that spans several lines in the YAML.</span>

<span class="c1"># This will be parsed as follows: (notice the trailing \n)</span>
<span class="c1"># &quot;This is a very long sentence that spans several lines in the YAML.\n&quot;</span>

<span class="p p-Indicator">&gt;-</span>
  <span class="no">This is a very long sentence</span>
  <span class="no">that spans several lines in the YAML.</span>

<span class="c1"># This will be parsed as follows: (without a trailing \n)</span>
<span class="c1"># &quot;This is a very long sentence that spans several lines in the YAML.&quot;</span>
</pre></div>
</td></tr></table></div>
<div class="admonition note">
<p class="admonition-title">Note</p>
<p>Notice the two spaces before each line in the previous examples. They
won’t appear in the resulting PHP strings.</p>
</div>
</div>
<div class="section" id="numbers">
<h3>Numbers</h3>
<div class="highlight-yaml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre>1
2</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1"># an integer</span>
<span class="l l-Scalar l-Scalar-Plain">12</span>
</pre></div>
</td></tr></table></div>
<div class="highlight-yaml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre>1
2</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1"># an octal</span>
<span class="l l-Scalar l-Scalar-Plain">014</span>
</pre></div>
</td></tr></table></div>
<div class="highlight-yaml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre>1
2</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1"># an hexadecimal</span>
<span class="l l-Scalar l-Scalar-Plain">0xC</span>
</pre></div>
</td></tr></table></div>
<div class="highlight-yaml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre>1
2</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1"># a float</span>
<span class="l l-Scalar l-Scalar-Plain">13.4</span>
</pre></div>
</td></tr></table></div>
<div class="highlight-yaml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre>1
2</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1"># an exponential number</span>
<span class="l l-Scalar l-Scalar-Plain">1.2e+34</span>
</pre></div>
</td></tr></table></div>
<div class="highlight-yaml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre>1
2</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1"># infinity</span>
<span class="l l-Scalar l-Scalar-Plain">.inf</span>
</pre></div>
</td></tr></table></div>
</div>
<div class="section" id="nulls">
<h3>Nulls</h3>
<p>Nulls in YAML can be expressed with <code class="docutils literal notranslate"><span class="pre">null</span></code> or <code class="docutils literal notranslate"><span class="pre">~</span></code>.</p>
</div>
<div class="section" id="booleans">
<h3>Booleans</h3>
<p>Booleans in YAML are expressed with <code class="docutils literal notranslate"><span class="pre">true</span></code> and <code class="docutils literal notranslate"><span class="pre">false</span></code>.</p>
</div>
<div class="section" id="dates">
<h3>Dates</h3>
<p>YAML uses the <a class="reference external" href="https://www.iso.org/iso-8601-date-and-time-format.html">ISO-8601</a><span class="link-target"> [https://www.iso.org/iso-8601-date-and-time-format.html]</span> standard to express dates:</p>
<div class="highlight-yaml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre>1</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="l l-Scalar l-Scalar-Plain">2001-12-14T21:59:43.10-05:00</span>
</pre></div>
</td></tr></table></div>
<div class="highlight-yaml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre>1
2</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1"># simple date</span>
<span class="l l-Scalar l-Scalar-Plain">2002-12-14</span>
</pre></div>
</td></tr></table></div>
</div>
</div>
<div class="section" id="collections">
<span id="yaml-format-collections"></span><h2>Collections</h2>
<p>A YAML file is rarely used to describe a simple scalar. Most of the time, it
describes a collection. YAML collections can be a sequence (indexed arrays in PHP)
or a mapping of elements (associative arrays in PHP).</p>
<p>Sequences use a dash followed by a space:</p>
<div class="highlight-yaml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="p p-Indicator">-</span> <span class="l l-Scalar l-Scalar-Plain">PHP</span>
<span class="p p-Indicator">-</span> <span class="l l-Scalar l-Scalar-Plain">Perl</span>
<span class="p p-Indicator">-</span> <span class="l l-Scalar l-Scalar-Plain">Python</span>
</pre></div>
</td></tr></table></div>
<p>The previous YAML file is equivalent to the following PHP code:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="p">[</span><span class="s1">&#39;PHP&#39;</span><span class="p">,</span> <span class="s1">&#39;Perl&#39;</span><span class="p">,</span> <span class="s1">&#39;Python&#39;</span><span class="p">];</span>
</pre></div>
</div>
<p>Mappings use a colon followed by a space (<code class="docutils literal notranslate"><span class="pre">:</span></code> ) to mark each key/value pair:</p>
<div class="highlight-yaml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="l l-Scalar l-Scalar-Plain">PHP</span><span class="p p-Indicator">:</span> <span class="l l-Scalar l-Scalar-Plain">5.2</span>
<span class="l l-Scalar l-Scalar-Plain">MySQL</span><span class="p p-Indicator">:</span> <span class="l l-Scalar l-Scalar-Plain">5.1</span>
<span class="l l-Scalar l-Scalar-Plain">Apache</span><span class="p p-Indicator">:</span> <span class="l l-Scalar l-Scalar-Plain">2.2.20</span>
</pre></div>
</td></tr></table></div>
<p>which is equivalent to this PHP code:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="p">[</span><span class="s1">&#39;PHP&#39;</span> <span class="o">=&gt;</span> <span class="mf">5.2</span><span class="p">,</span> <span class="s1">&#39;MySQL&#39;</span> <span class="o">=&gt;</span> <span class="mf">5.1</span><span class="p">,</span> <span class="s1">&#39;Apache&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;2.2.20&#39;</span><span class="p">];</span>
</pre></div>
</div>
<div class="admonition note">
<p class="admonition-title">Note</p>
<p>In a mapping, a key can be any valid scalar.</p>
</div>
<p>The number of spaces between the colon and the value does not matter:</p>
<div class="highlight-yaml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="l l-Scalar l-Scalar-Plain">PHP</span><span class="p p-Indicator">:</span>    <span class="l l-Scalar l-Scalar-Plain">5.2</span>
<span class="l l-Scalar l-Scalar-Plain">MySQL</span><span class="p p-Indicator">:</span>  <span class="l l-Scalar l-Scalar-Plain">5.1</span>
<span class="l l-Scalar l-Scalar-Plain">Apache</span><span class="p p-Indicator">:</span> <span class="l l-Scalar l-Scalar-Plain">2.2.20</span>
</pre></div>
</td></tr></table></div>
<p>YAML uses indentation with one or more spaces to describe nested collections:</p>
<div class="highlight-yaml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="s">&#39;symfony</span><span class="nv"> </span><span class="s">1.0&#39;</span><span class="p p-Indicator">:</span>
  <span class="l l-Scalar l-Scalar-Plain">PHP</span><span class="p p-Indicator">:</span>    <span class="l l-Scalar l-Scalar-Plain">5.0</span>
  <span class="l l-Scalar l-Scalar-Plain">Propel</span><span class="p p-Indicator">:</span> <span class="l l-Scalar l-Scalar-Plain">1.2</span>
<span class="s">&#39;symfony</span><span class="nv"> </span><span class="s">1.2&#39;</span><span class="p p-Indicator">:</span>
  <span class="l l-Scalar l-Scalar-Plain">PHP</span><span class="p p-Indicator">:</span>    <span class="l l-Scalar l-Scalar-Plain">5.2</span>
  <span class="l l-Scalar l-Scalar-Plain">Propel</span><span class="p p-Indicator">:</span> <span class="l l-Scalar l-Scalar-Plain">1.3</span>
</pre></div>
</td></tr></table></div>
<p>The above YAML is equivalent to the following PHP code:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="p">[</span>
    <span class="s1">&#39;symfony 1.0&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
        <span class="s1">&#39;PHP&#39;</span>    <span class="o">=&gt;</span> <span class="mf">5.0</span><span class="p">,</span>
        <span class="s1">&#39;Propel&#39;</span> <span class="o">=&gt;</span> <span class="mf">1.2</span><span class="p">,</span>
    <span class="p">],</span>
    <span class="s1">&#39;symfony 1.2&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
        <span class="s1">&#39;PHP&#39;</span>    <span class="o">=&gt;</span> <span class="mf">5.2</span><span class="p">,</span>
        <span class="s1">&#39;Propel&#39;</span> <span class="o">=&gt;</span> <span class="mf">1.3</span><span class="p">,</span>
    <span class="p">],</span>
<span class="p">];</span>
</pre></div>
</div>
<p>There is one important thing you need to remember when using indentation in a
YAML file: <em>Indentation must be done with one or more spaces, but never with
tabulators</em>.</p>
<p>You can nest sequences and mappings as you like:</p>
<div class="highlight-yaml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="s">&#39;Chapter</span><span class="nv"> </span><span class="s">1&#39;</span><span class="p p-Indicator">:</span>
  <span class="p p-Indicator">-</span> <span class="l l-Scalar l-Scalar-Plain">Introduction</span>
  <span class="p p-Indicator">-</span> <span class="l l-Scalar l-Scalar-Plain">Event Types</span>
<span class="s">&#39;Chapter</span><span class="nv"> </span><span class="s">2&#39;</span><span class="p p-Indicator">:</span>
  <span class="p p-Indicator">-</span> <span class="l l-Scalar l-Scalar-Plain">Introduction</span>
  <span class="p p-Indicator">-</span> <span class="l l-Scalar l-Scalar-Plain">Helpers</span>
</pre></div>
</td></tr></table></div>
<p>YAML can also use flow styles for collections, using explicit indicators
rather than indentation to denote scope.</p>
<p>A sequence can be written as a comma separated list within square brackets
(<code class="docutils literal notranslate"><span class="pre">[]</span></code>):</p>
<div class="highlight-yaml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre>1</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="p p-Indicator">[</span><span class="nv">PHP</span><span class="p p-Indicator">,</span> <span class="nv">Perl</span><span class="p p-Indicator">,</span> <span class="nv">Python</span><span class="p p-Indicator">]</span>
</pre></div>
</td></tr></table></div>
<p>A mapping can be written as a comma separated list of key/values within curly
braces (<code class="docutils literal notranslate"><span class="pre">{}</span></code>):</p>
<div class="highlight-yaml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre>1</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="p p-Indicator">{</span> <span class="nv">PHP</span><span class="p p-Indicator">:</span> <span class="nv">5.2</span><span class="p p-Indicator">,</span> <span class="nv">MySQL</span><span class="p p-Indicator">:</span> <span class="nv">5.1</span><span class="p p-Indicator">,</span> <span class="nv">Apache</span><span class="p p-Indicator">:</span> <span class="nv">2.2.20</span> <span class="p p-Indicator">}</span>
</pre></div>
</td></tr></table></div>
<p>You can mix and match styles to achieve a better readability:</p>
<div class="highlight-yaml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre>1
2</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="s">&#39;Chapter</span><span class="nv"> </span><span class="s">1&#39;</span><span class="p p-Indicator">:</span> <span class="p p-Indicator">[</span><span class="nv">Introduction</span><span class="p p-Indicator">,</span> <span class="nv">Event Types</span><span class="p p-Indicator">]</span>
<span class="s">&#39;Chapter</span><span class="nv"> </span><span class="s">2&#39;</span><span class="p p-Indicator">:</span> <span class="p p-Indicator">[</span><span class="nv">Introduction</span><span class="p p-Indicator">,</span> <span class="nv">Helpers</span><span class="p p-Indicator">]</span>
</pre></div>
</td></tr></table></div>
<div class="highlight-yaml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre>1
2</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="s">&#39;symfony</span><span class="nv"> </span><span class="s">1.0&#39;</span><span class="p p-Indicator">:</span> <span class="p p-Indicator">{</span> <span class="nv">PHP</span><span class="p p-Indicator">:</span> <span class="nv">5.0</span><span class="p p-Indicator">,</span> <span class="nv">Propel</span><span class="p p-Indicator">:</span> <span class="nv">1.2</span> <span class="p p-Indicator">}</span>
<span class="s">&#39;symfony</span><span class="nv"> </span><span class="s">1.2&#39;</span><span class="p p-Indicator">:</span> <span class="p p-Indicator">{</span> <span class="nv">PHP</span><span class="p p-Indicator">:</span> <span class="nv">5.2</span><span class="p p-Indicator">,</span> <span class="nv">Propel</span><span class="p p-Indicator">:</span> <span class="nv">1.3</span> <span class="p p-Indicator">}</span>
</pre></div>
</td></tr></table></div>
</div>
<div class="section" id="comments">
<h2>Comments</h2>
<p>Comments can be added in YAML by prefixing them with a hash mark (<code class="docutils literal notranslate"><span class="pre">#</span></code>):</p>
<div class="highlight-yaml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1"># Comment on a line</span>
<span class="s">&quot;symfony</span><span class="nv"> </span><span class="s">1.0&quot;</span><span class="p p-Indicator">:</span> <span class="p p-Indicator">{</span> <span class="nv">PHP</span><span class="p p-Indicator">:</span> <span class="nv">5.0</span><span class="p p-Indicator">,</span> <span class="nv">Propel</span><span class="p p-Indicator">:</span> <span class="nv">1.2</span> <span class="p p-Indicator">}</span> <span class="c1"># Comment at the end of a line</span>
<span class="s">&quot;symfony</span><span class="nv"> </span><span class="s">1.2&quot;</span><span class="p p-Indicator">:</span> <span class="p p-Indicator">{</span> <span class="nv">PHP</span><span class="p p-Indicator">:</span> <span class="nv">5.2</span><span class="p p-Indicator">,</span> <span class="nv">Propel</span><span class="p p-Indicator">:</span> <span class="nv">1.3</span> <span class="p p-Indicator">}</span>
</pre></div>
</td></tr></table></div>
<div class="admonition note">
<p class="admonition-title">Note</p>
<p>Comments are ignored by the YAML parser and do not need to be indented
according to the current level of nesting in a collection.</p>
</div>
</div>
<div class="section" id="explicit-typing">
<h2>Explicit Typing</h2>
<p>The YAML specification defines some tags to set the type of any data explicitly:</p>
<div class="highlight-yaml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="l l-Scalar l-Scalar-Plain">data</span><span class="p p-Indicator">:</span>
    <span class="c1"># this value is parsed as a string (it&#39;s not transformed into a DateTime)</span>
    <span class="l l-Scalar l-Scalar-Plain">start_date</span><span class="p p-Indicator">:</span> <span class="kt">!!str</span> <span class="l l-Scalar l-Scalar-Plain">2002-12-14</span>

    <span class="c1"># this value is parsed as a float number (it will be 3.0 instead of 3)</span>
    <span class="l l-Scalar l-Scalar-Plain">price</span><span class="p p-Indicator">:</span> <span class="kt">!!float</span> <span class="l l-Scalar l-Scalar-Plain">3</span>

    <span class="c1"># this value is parsed as binary data encoded in base64</span>
    <span class="l l-Scalar l-Scalar-Plain">picture</span><span class="p p-Indicator">:</span> <span class="kt">!!binary</span> <span class="p p-Indicator">|</span>
        <span class="no">R0lGODlhDAAMAIQAAP//9/X</span>
        <span class="no">17unp5WZmZgAAAOfn515eXv</span>
        <span class="no">Pz7Y6OjuDg4J+fn5OTk6enp</span>
        <span class="no">56enmleECcgggoBADs=</span>
</pre></div>
</td></tr></table></div>
</div>
<div class="section" id="unsupported-yaml-features">
<h2>Unsupported YAML Features</h2>
<p>The following YAML features are not supported by the Symfony Yaml component:</p>
<ul class="simple">
<li><p>Multi-documents (<code class="docutils literal notranslate"><span class="pre">---</span></code> and <code class="docutils literal notranslate"><span class="pre">...</span></code> markers);</p></li>
<li><p>Complex mapping keys and complex values starting with <code class="docutils literal notranslate"><span class="pre">?</span></code>;</p></li>
<li><p>Tagged values as keys;</p></li>
<li><p>The following tags and types: <code class="docutils literal notranslate"><span class="pre">!!set</span></code>, <code class="docutils literal notranslate"><span class="pre">!!omap</span></code>, <code class="docutils literal notranslate"><span class="pre">!!pairs</span></code>, <code class="docutils literal notranslate"><span class="pre">!!seq</span></code>,
<code class="docutils literal notranslate"><span class="pre">!!bool</span></code>, <code class="docutils literal notranslate"><span class="pre">!!int</span></code>, <code class="docutils literal notranslate"><span class="pre">!!merge</span></code>, <code class="docutils literal notranslate"><span class="pre">!!null</span></code>, <code class="docutils literal notranslate"><span class="pre">!!timestamp</span></code>, <code class="docutils literal notranslate"><span class="pre">!!value</span></code>, <code class="docutils literal notranslate"><span class="pre">!!yaml</span></code>;</p></li>
<li><p>Tags (<code class="docutils literal notranslate"><span class="pre">TAG</span></code> directive; example: <code class="docutils literal notranslate"><span class="pre">%TAG</span> <span class="pre">!</span> <span class="pre">tag:example.com,2000:app/</span></code>)
and tag references (example: <code class="docutils literal notranslate"><span class="pre">!&lt;tag:example.com,2000:app/foo&gt;</span></code>);</p></li>
<li><p>Using sequence-like syntax for mapping elements (example: <code class="docutils literal notranslate"><span class="pre">{foo,</span> <span class="pre">bar}</span></code>; use
<code class="docutils literal notranslate"><span class="pre">{foo:</span> <span class="pre">~,</span> <span class="pre">bar:</span> <span class="pre">~}</span></code> instead).</p></li>
</ul>
</div>
</div>


          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>