<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <title>How to Apply only a Subset of all Your Validation Constraints (Validation Groups)</title>
    <link rel="stylesheet" href="../_static/epub.css" type="text/css" />
    <link rel="stylesheet" href="../_static/pygments.css" type="text/css" />
    <link rel="stylesheet" type="text/css" href="../_static/rtd_custom.css" /> 
  </head><body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <div class="section" id="how-to-apply-only-a-subset-of-all-your-validation-constraints-validation-groups">
<span id="index-0"></span><h1>How to Apply only a Subset of all Your Validation Constraints (Validation Groups)</h1>
<p>By default, when validating an object all constraints of this class will
be checked whether or not they actually pass. In some cases, however, you
will need to validate an object against only <em>some</em> constraints on that class.
To do this, you can organize each constraint into one or more “validation
groups” and then apply validation against one group of constraints.</p>
<p>For example, suppose you have a <code class="docutils literal notranslate"><span class="pre">User</span></code> class, which is used both when a
user registers and when a user updates their contact information later:</p>
<div class="configuration-block">
<ul class="simple">
<li><p><em>Annotations</em><div class="highlight-php-annotations notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1">// src/Entity/User.php</span>
<span class="k">namespace</span> <span class="nx">App\Entity</span><span class="p">;</span>

<span class="k">use</span> <span class="nx">Symfony\Component\Security\Core\User\UserInterface</span><span class="p">;</span>
<span class="k">use</span> <span class="nx">Symfony\Component\Validator\Constraints</span> <span class="k">as</span> <span class="nx">Assert</span><span class="p">;</span>

<span class="k">class</span> <span class="nc">User</span> <span class="k">implements</span> <span class="nx">UserInterface</span>
<span class="p">{</span>
    <span class="sd">/**</span>
<span class="sd">     * @Assert\Email(groups={&quot;registration&quot;})</span>
<span class="sd">     */</span>
    <span class="k">private</span> <span class="nv">$email</span><span class="p">;</span>

    <span class="sd">/**</span>
<span class="sd">     * @Assert\NotBlank(groups={&quot;registration&quot;})</span>
<span class="sd">     * @Assert\Length(min=7, groups={&quot;registration&quot;})</span>
<span class="sd">     */</span>
    <span class="k">private</span> <span class="nv">$password</span><span class="p">;</span>

    <span class="sd">/**</span>
<span class="sd">     * @Assert\Length(min=2)</span>
<span class="sd">     */</span>
    <span class="k">private</span> <span class="nv">$city</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>
</td></tr></table></div>
</p></li>
<li><p><em>YAML</em><div class="highlight-yaml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1"># config/validator/validation.yaml</span>
<span class="l l-Scalar l-Scalar-Plain">App\Entity\User</span><span class="p p-Indicator">:</span>
    <span class="l l-Scalar l-Scalar-Plain">properties</span><span class="p p-Indicator">:</span>
        <span class="l l-Scalar l-Scalar-Plain">email</span><span class="p p-Indicator">:</span>
            <span class="p p-Indicator">-</span> <span class="l l-Scalar l-Scalar-Plain">Email</span><span class="p p-Indicator">:</span> <span class="p p-Indicator">{</span> <span class="nv">groups</span><span class="p p-Indicator">:</span> <span class="p p-Indicator">[</span><span class="nv">registration</span><span class="p p-Indicator">]</span> <span class="p p-Indicator">}</span>
        <span class="l l-Scalar l-Scalar-Plain">password</span><span class="p p-Indicator">:</span>
            <span class="p p-Indicator">-</span> <span class="l l-Scalar l-Scalar-Plain">NotBlank</span><span class="p p-Indicator">:</span> <span class="p p-Indicator">{</span> <span class="nv">groups</span><span class="p p-Indicator">:</span> <span class="p p-Indicator">[</span><span class="nv">registration</span><span class="p p-Indicator">]</span> <span class="p p-Indicator">}</span>
            <span class="p p-Indicator">-</span> <span class="l l-Scalar l-Scalar-Plain">Length</span><span class="p p-Indicator">:</span> <span class="p p-Indicator">{</span> <span class="nv">min</span><span class="p p-Indicator">:</span> <span class="nv">7</span><span class="p p-Indicator">,</span> <span class="nv">groups</span><span class="p p-Indicator">:</span> <span class="p p-Indicator">[</span><span class="nv">registration</span><span class="p p-Indicator">]</span> <span class="p p-Indicator">}</span>
        <span class="l l-Scalar l-Scalar-Plain">city</span><span class="p p-Indicator">:</span>
            <span class="p p-Indicator">-</span> <span class="l l-Scalar l-Scalar-Plain">Length</span><span class="p p-Indicator">:</span>
                <span class="l l-Scalar l-Scalar-Plain">min</span><span class="p p-Indicator">:</span> <span class="l l-Scalar l-Scalar-Plain">2</span>
</pre></div>
</td></tr></table></div>
</p></li>
<li><p><em>XML</em><div class="highlight-xml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c">&lt;!-- config/validator/validation.xml --&gt;</span>
<span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span>
<span class="nt">&lt;constraint-mapping</span> <span class="na">xmlns=</span><span class="s">&quot;http://symfony.com/schema/dic/constraint-mapping&quot;</span>
    <span class="na">xmlns:xsi=</span><span class="s">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span>
    <span class="na">xsi:schemaLocation=</span><span class="s">&quot;</span>
<span class="s">        http://symfony.com/schema/dic/constraint-mapping</span>
<span class="s">        https://symfony.com/schema/dic/constraint-mapping/constraint-mapping-1.0.xsd</span>
<span class="s">    &quot;</span><span class="nt">&gt;</span>

    <span class="nt">&lt;class</span> <span class="na">name=</span><span class="s">&quot;App\Entity\User&quot;</span><span class="nt">&gt;</span>
        <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;email&quot;</span><span class="nt">&gt;</span>
            <span class="nt">&lt;constraint</span> <span class="na">name=</span><span class="s">&quot;Email&quot;</span><span class="nt">&gt;</span>
                <span class="nt">&lt;option</span> <span class="na">name=</span><span class="s">&quot;groups&quot;</span><span class="nt">&gt;</span>
                    <span class="nt">&lt;value&gt;</span>registration<span class="nt">&lt;/value&gt;</span>
                <span class="nt">&lt;/option&gt;</span>
            <span class="nt">&lt;/constraint&gt;</span>
        <span class="nt">&lt;/property&gt;</span>

        <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;password&quot;</span><span class="nt">&gt;</span>
            <span class="nt">&lt;constraint</span> <span class="na">name=</span><span class="s">&quot;NotBlank&quot;</span><span class="nt">&gt;</span>
                <span class="nt">&lt;option</span> <span class="na">name=</span><span class="s">&quot;groups&quot;</span><span class="nt">&gt;</span>
                    <span class="nt">&lt;value&gt;</span>registration<span class="nt">&lt;/value&gt;</span>
                <span class="nt">&lt;/option&gt;</span>
            <span class="nt">&lt;/constraint&gt;</span>
            <span class="nt">&lt;constraint</span> <span class="na">name=</span><span class="s">&quot;Length&quot;</span><span class="nt">&gt;</span>
                <span class="nt">&lt;option</span> <span class="na">name=</span><span class="s">&quot;min&quot;</span><span class="nt">&gt;</span>7<span class="nt">&lt;/option&gt;</span>
                <span class="nt">&lt;option</span> <span class="na">name=</span><span class="s">&quot;groups&quot;</span><span class="nt">&gt;</span>
                    <span class="nt">&lt;value&gt;</span>registration<span class="nt">&lt;/value&gt;</span>
                <span class="nt">&lt;/option&gt;</span>
            <span class="nt">&lt;/constraint&gt;</span>
        <span class="nt">&lt;/property&gt;</span>

        <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;city&quot;</span><span class="nt">&gt;</span>
            <span class="nt">&lt;constraint</span> <span class="na">name=</span><span class="s">&quot;Length&quot;</span><span class="nt">&gt;</span>
                <span class="nt">&lt;option</span> <span class="na">name=</span><span class="s">&quot;min&quot;</span><span class="nt">&gt;</span>2<span class="nt">&lt;/option&gt;</span>
            <span class="nt">&lt;/constraint&gt;</span>
        <span class="nt">&lt;/property&gt;</span>
    <span class="nt">&lt;/class&gt;</span>
<span class="nt">&lt;/constraint-mapping&gt;</span>
</pre></div>
</td></tr></table></div>
</p></li>
<li><p><em>PHP</em><div class="highlight-php notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1">// src/Entity/User.php</span>
<span class="k">namespace</span> <span class="nx">App\Entity</span><span class="p">;</span>

<span class="k">use</span> <span class="nx">Symfony\Component\Validator\Constraints</span> <span class="k">as</span> <span class="nx">Assert</span><span class="p">;</span>
<span class="k">use</span> <span class="nx">Symfony\Component\Validator\Mapping\ClassMetadata</span><span class="p">;</span>

<span class="k">class</span> <span class="nc">User</span>
<span class="p">{</span>
    <span class="k">public</span> <span class="k">static</span> <span class="k">function</span> <span class="nf">loadValidatorMetadata</span><span class="p">(</span><span class="nx">ClassMetadata</span> <span class="nv">$metadata</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="nv">$metadata</span><span class="o">-&gt;</span><span class="na">addPropertyConstraint</span><span class="p">(</span><span class="s1">&#39;email&#39;</span><span class="p">,</span> <span class="k">new</span> <span class="nx">Assert\Email</span><span class="p">([</span>
            <span class="s1">&#39;groups&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span><span class="s1">&#39;registration&#39;</span><span class="p">],</span>
        <span class="p">]));</span>

        <span class="nv">$metadata</span><span class="o">-&gt;</span><span class="na">addPropertyConstraint</span><span class="p">(</span><span class="s1">&#39;password&#39;</span><span class="p">,</span> <span class="k">new</span> <span class="nx">Assert\NotBlank</span><span class="p">([</span>
            <span class="s1">&#39;groups&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span><span class="s1">&#39;registration&#39;</span><span class="p">],</span>
        <span class="p">]));</span>
        <span class="nv">$metadata</span><span class="o">-&gt;</span><span class="na">addPropertyConstraint</span><span class="p">(</span><span class="s1">&#39;password&#39;</span><span class="p">,</span> <span class="k">new</span> <span class="nx">Assert\Length</span><span class="p">([</span>
            <span class="s1">&#39;min&#39;</span>    <span class="o">=&gt;</span> <span class="mi">7</span><span class="p">,</span>
            <span class="s1">&#39;groups&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span><span class="s1">&#39;registration&#39;</span><span class="p">],</span>
        <span class="p">]));</span>

        <span class="nv">$metadata</span><span class="o">-&gt;</span><span class="na">addPropertyConstraint</span><span class="p">(</span><span class="s1">&#39;city&#39;</span><span class="p">,</span> <span class="k">new</span> <span class="nx">Assert\Length</span><span class="p">([</span>
            <span class="s2">&quot;min&quot;</span> <span class="o">=&gt;</span> <span class="mi">2</span><span class="p">,</span>
        <span class="p">]));</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>
</td></tr></table></div>
</p></li>
</ul>
</div>
<p>With this configuration, there are three validation groups:</p>
<dl class="simple">
<dt><code class="docutils literal notranslate"><span class="pre">Default</span></code></dt>
<dd><p>Contains the constraints in the current class and all referenced classes
that belong to no other group. In this example, it only contains the
<code class="docutils literal notranslate"><span class="pre">city</span></code> field.</p>
</dd>
<dt><code class="docutils literal notranslate"><span class="pre">User</span></code></dt>
<dd><p>Equivalent to all constraints of the <code class="docutils literal notranslate"><span class="pre">User</span></code> object in the <code class="docutils literal notranslate"><span class="pre">Default</span></code>
group. This is always the name of the class. The difference between this
and <code class="docutils literal notranslate"><span class="pre">Default</span></code> is explained in <a class="reference internal" href="sequence_provider.xhtml"><span class="doc">How to Sequentially Apply Validation Groups</span></a>.</p>
</dd>
<dt><code class="docutils literal notranslate"><span class="pre">registration</span></code></dt>
<dd><p>This is a custom validation group, so it only contains the constraints
explicitly associated to it. In this example, only the <code class="docutils literal notranslate"><span class="pre">email</span></code> and
<code class="docutils literal notranslate"><span class="pre">password</span></code> fields.</p>
</dd>
</dl>
<p>Constraints in the <code class="docutils literal notranslate"><span class="pre">Default</span></code> group of a class are the constraints that have
either no explicit group configured or that are configured to a group equal to
the class name or the string <code class="docutils literal notranslate"><span class="pre">Default</span></code>.</p>
<div class="admonition caution">
<p class="admonition-title">Caution</p>
<p>When validating <em>just</em> the User object, there is no difference between the
<code class="docutils literal notranslate"><span class="pre">Default</span></code> group and the <code class="docutils literal notranslate"><span class="pre">User</span></code> group. But, there is a difference if
<code class="docutils literal notranslate"><span class="pre">User</span></code> has embedded objects. For example, imagine <code class="docutils literal notranslate"><span class="pre">User</span></code> has an
<code class="docutils literal notranslate"><span class="pre">address</span></code> property that contains some <code class="docutils literal notranslate"><span class="pre">Address</span></code> object and that you’ve
added the <a class="reference internal" href="../reference/constraints/Valid.xhtml"><span class="doc">Valid</span></a> constraint to this property
so that it’s validated when you validate the <code class="docutils literal notranslate"><span class="pre">User</span></code> object.</p>
<p>If you validate <code class="docutils literal notranslate"><span class="pre">User</span></code> using the <code class="docutils literal notranslate"><span class="pre">Default</span></code> group, then any constraints
on the <code class="docutils literal notranslate"><span class="pre">Address</span></code> class that are in the <code class="docutils literal notranslate"><span class="pre">Default</span></code> group <em>will</em> be used.
But, if you validate <code class="docutils literal notranslate"><span class="pre">User</span></code> using the <code class="docutils literal notranslate"><span class="pre">User</span></code> validation group, then
only constraints on the <code class="docutils literal notranslate"><span class="pre">Address</span></code> class with the <code class="docutils literal notranslate"><span class="pre">User</span></code> group will be
validated.</p>
<p>In other words, the <code class="docutils literal notranslate"><span class="pre">Default</span></code> group and the class name group (e.g.
<code class="docutils literal notranslate"><span class="pre">User</span></code>) are identical, except when the class is embedded in another
object that’s actually the one being validated.</p>
<p>If you have inheritance (e.g. <code class="docutils literal notranslate"><span class="pre">User</span> <span class="pre">extends</span> <span class="pre">BaseUser</span></code>) and you validate
with the class name of the subclass (i.e. <code class="docutils literal notranslate"><span class="pre">User</span></code>), then all constraints
in the <code class="docutils literal notranslate"><span class="pre">User</span></code> and <code class="docutils literal notranslate"><span class="pre">BaseUser</span></code> will be validated. However, if you
validate using the base class (i.e. <code class="docutils literal notranslate"><span class="pre">BaseUser</span></code>), then only the default
constraints in the <code class="docutils literal notranslate"><span class="pre">BaseUser</span></code> class will be validated.</p>
</div>
<p>To tell the validator to use a specific group, pass one or more group names
as the third argument to the <code class="docutils literal notranslate"><span class="pre">validate()</span></code> method:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="nv">$errors</span> <span class="o">=</span> <span class="nv">$validator</span><span class="o">-&gt;</span><span class="na">validate</span><span class="p">(</span><span class="nv">$author</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="p">[</span><span class="s1">&#39;registration&#39;</span><span class="p">]);</span>
</pre></div>
</div>
<p>If no groups are specified, all constraints that belong to the group <code class="docutils literal notranslate"><span class="pre">Default</span></code>
will be applied.</p>
<p>In a full stack Symfony project, you’ll usually work with validation indirectly
through the form library. For information on how to use validation groups inside
forms, see <a class="reference internal" href="../form/validation_groups.xhtml"><span class="doc">How to Define the Validation Groups to Use</span></a>.</p>
</div>


          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>