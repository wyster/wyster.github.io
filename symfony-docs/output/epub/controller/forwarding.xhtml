<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <title>How to Forward Requests to another Controller</title>
    <link rel="stylesheet" href="../_static/epub.css" type="text/css" />
    <link rel="stylesheet" href="../_static/pygments.css" type="text/css" />
    <link rel="stylesheet" type="text/css" href="../_static/rtd_custom.css" /> 
  </head><body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <div class="section" id="how-to-forward-requests-to-another-controller">
<span id="index-0"></span><h1>How to Forward Requests to another Controller</h1>
<p>Though not very common, you can also forward to another controller internally
with the <code class="docutils literal notranslate"><span class="pre">forward()</span></code> method provided by the
<code class="docutils literal notranslate"><a class="reference external" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Bundle/FrameworkBundle/Controller/AbstractController.php" title="Symfony\Bundle\FrameworkBundle\Controller\AbstractController"><span class="pre">AbstractController</span></a><span class="link-target"> <span class="pre">[https://github.com/symfony/symfony/blob/master/src/Symfony/Bundle/FrameworkBundle/Controller/AbstractController.php]</span></span></code>
class.</p>
<p>Instead of redirecting the user’s browser, this makes an “internal” sub-request
and calls the defined controller. The <code class="docutils literal notranslate"><span class="pre">forward()</span></code> method returns the
<code class="docutils literal notranslate"><a class="reference external" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Component/HttpFoundation/Response.php" title="Symfony\Component\HttpFoundation\Response"><span class="pre">Response</span></a><span class="link-target"> <span class="pre">[https://github.com/symfony/symfony/blob/master/src/Symfony/Component/HttpFoundation/Response.php]</span></span></code> object that is returned
from <em>that</em> controller:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="k">public</span> <span class="k">function</span> <span class="nf">index</span><span class="p">(</span><span class="nv">$name</span><span class="p">)</span>
<span class="p">{</span>
    <span class="nv">$response</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">forward</span><span class="p">(</span><span class="s1">&#39;App\Controller\OtherController::fancy&#39;</span><span class="p">,</span> <span class="p">[</span>
        <span class="s1">&#39;name&#39;</span>  <span class="o">=&gt;</span> <span class="nv">$name</span><span class="p">,</span>
        <span class="s1">&#39;color&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;green&#39;</span><span class="p">,</span>
    <span class="p">]);</span>

    <span class="c1">// ... further modify the response or return it directly</span>

    <span class="k">return</span> <span class="nv">$response</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>
</div>
<p>The array passed to the method becomes the arguments for the resulting controller.
The target controller method might look something like this:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="k">public</span> <span class="k">function</span> <span class="nf">fancy</span><span class="p">(</span><span class="nv">$name</span><span class="p">,</span> <span class="nv">$color</span><span class="p">)</span>
<span class="p">{</span>
    <span class="c1">// ... create and return a Response object</span>
<span class="p">}</span>
</pre></div>
</div>
<p>Like when creating a controller for a route, the order of the arguments of the
<code class="docutils literal notranslate"><span class="pre">fancy()</span></code> method doesn’t matter: the matching is done by name.</p>
</div>


          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>