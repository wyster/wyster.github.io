<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <title>The Bundle System</title>
    <link rel="stylesheet" href="_static/epub.css" type="text/css" />
    <link rel="stylesheet" href="_static/pygments.css" type="text/css" />
    <link rel="stylesheet" type="text/css" href="_static/rtd_custom.css" /> 
  </head><body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <div class="section" id="the-bundle-system">
<span id="page-creation-bundles"></span><span id="index-0"></span><h1>The Bundle System</h1>
<div class="admonition caution">
<p class="admonition-title">Caution</p>
<p>In Symfony versions prior to 4.0, it was recommended to organize your own
application code using bundles. This is no longer recommended and bundles
should only be used to share code and features between multiple applications.</p>
</div>
<p>A bundle is similar to a plugin in other software, but even better. The core
features of Symfony framework are implemented with bundles (FrameworkBundle,
SecurityBundle, DebugBundle, etc.) They are also used to add new features in
your application via <a class="reference external" href="https://github.com/search?q=topic%3Asymfony-bundle&amp;type=Repositories">third-party bundles</a><span class="link-target"> [https://github.com/search?q=topic%3Asymfony-bundle&amp;type=Repositories]</span>.</p>
<p>Bundles used in your applications must be enabled per
<a class="reference internal" href="configuration.xhtml#configuration-environments"><span class="std std-ref">environment</span></a> in the <code class="docutils literal notranslate"><span class="pre">config/bundles.php</span></code>
file:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="c1">// config/bundles.php</span>
<span class="k">return</span> <span class="p">[</span>
    <span class="c1">// &#39;all&#39; means that the bundle is enabled for any Symfony environment</span>
    <span class="nx">Symfony\Bundle\FrameworkBundle\FrameworkBundle</span><span class="o">::</span><span class="na">class</span> <span class="o">=&gt;</span> <span class="p">[</span><span class="s1">&#39;all&#39;</span> <span class="o">=&gt;</span> <span class="k">true</span><span class="p">],</span>
    <span class="nx">Symfony\Bundle\SecurityBundle\SecurityBundle</span><span class="o">::</span><span class="na">class</span> <span class="o">=&gt;</span> <span class="p">[</span><span class="s1">&#39;all&#39;</span> <span class="o">=&gt;</span> <span class="k">true</span><span class="p">],</span>
    <span class="nx">Symfony\Bundle\TwigBundle\TwigBundle</span><span class="o">::</span><span class="na">class</span> <span class="o">=&gt;</span> <span class="p">[</span><span class="s1">&#39;all&#39;</span> <span class="o">=&gt;</span> <span class="k">true</span><span class="p">],</span>
    <span class="nx">Symfony\Bundle\MonologBundle\MonologBundle</span><span class="o">::</span><span class="na">class</span> <span class="o">=&gt;</span> <span class="p">[</span><span class="s1">&#39;all&#39;</span> <span class="o">=&gt;</span> <span class="k">true</span><span class="p">],</span>
    <span class="nx">Symfony\Bundle\SwiftmailerBundle\SwiftmailerBundle</span><span class="o">::</span><span class="na">class</span> <span class="o">=&gt;</span> <span class="p">[</span><span class="s1">&#39;all&#39;</span> <span class="o">=&gt;</span> <span class="k">true</span><span class="p">],</span>
    <span class="nx">Doctrine\Bundle\DoctrineBundle\DoctrineBundle</span><span class="o">::</span><span class="na">class</span> <span class="o">=&gt;</span> <span class="p">[</span><span class="s1">&#39;all&#39;</span> <span class="o">=&gt;</span> <span class="k">true</span><span class="p">],</span>
    <span class="nx">Sensio\Bundle\FrameworkExtraBundle\SensioFrameworkExtraBundle</span><span class="o">::</span><span class="na">class</span> <span class="o">=&gt;</span> <span class="p">[</span><span class="s1">&#39;all&#39;</span> <span class="o">=&gt;</span> <span class="k">true</span><span class="p">],</span>
    <span class="c1">// this bundle is enabled only in &#39;dev&#39; and &#39;test&#39;, so you can&#39;t use it in &#39;prod&#39;</span>
    <span class="nx">Symfony\Bundle\WebProfilerBundle\WebProfilerBundle</span><span class="o">::</span><span class="na">class</span> <span class="o">=&gt;</span> <span class="p">[</span><span class="s1">&#39;dev&#39;</span> <span class="o">=&gt;</span> <span class="k">true</span><span class="p">,</span> <span class="s1">&#39;test&#39;</span> <span class="o">=&gt;</span> <span class="k">true</span><span class="p">],</span>
<span class="p">];</span>
</pre></div>
</div>
<div class="admonition tip">
<p class="admonition-title">Tip</p>
<p>In a default Symfony application that uses <a class="reference internal" href="setup.xhtml#symfony-flex"><span class="std std-ref">Symfony Flex</span></a>,
bundles are enabled/disabled automatically for you when installing/removing
them, so you don’t need to look at or edit this <code class="docutils literal notranslate"><span class="pre">bundles.php</span></code> file.</p>
</div>
<div class="section" id="creating-a-bundle">
<h2>Creating a Bundle</h2>
<p>This section creates and enables a new bundle to show there are only a few steps required.
The new bundle is called AcmeTestBundle, where the <code class="docutils literal notranslate"><span class="pre">Acme</span></code> portion is an example
name that should be replaced by some “vendor” name that represents you or your
organization (e.g. ABCTestBundle for some company named <code class="docutils literal notranslate"><span class="pre">ABC</span></code>).</p>
<p>Start by creating a <code class="docutils literal notranslate"><span class="pre">src/Acme/TestBundle/</span></code> directory and adding a new file
called <code class="docutils literal notranslate"><span class="pre">AcmeTestBundle.php</span></code>:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="c1">// src/Acme/TestBundle/AcmeTestBundle.php</span>
<span class="k">namespace</span> <span class="nx">App\Acme\TestBundle</span><span class="p">;</span>

<span class="k">use</span> <span class="nx">Symfony\Component\HttpKernel\Bundle\Bundle</span><span class="p">;</span>

<span class="k">class</span> <span class="nc">AcmeTestBundle</span> <span class="k">extends</span> <span class="nx">Bundle</span>
<span class="p">{</span>
<span class="p">}</span>
</pre></div>
</div>
<div class="admonition tip">
<p class="admonition-title">Tip</p>
<p>The name AcmeTestBundle follows the standard
<a class="reference internal" href="bundles/best_practices.xhtml#bundles-naming-conventions"><span class="std std-ref">Bundle naming conventions</span></a>. You could
also choose to shorten the name of the bundle to simply TestBundle by naming
this class TestBundle (and naming the file <code class="docutils literal notranslate"><span class="pre">TestBundle.php</span></code>).</p>
</div>
<p>This empty class is the only piece you need to create the new bundle. Though
commonly empty, this class is powerful and can be used to customize the behavior
of the bundle. Now that you’ve created the bundle, enable it:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="c1">// config/bundles.php</span>
<span class="k">return</span> <span class="p">[</span>
    <span class="c1">// ...</span>
    <span class="nx">App\Acme\TestBundle\AcmeTestBundle</span><span class="o">::</span><span class="na">class</span> <span class="o">=&gt;</span> <span class="p">[</span><span class="s1">&#39;all&#39;</span> <span class="o">=&gt;</span> <span class="k">true</span><span class="p">],</span>
<span class="p">];</span>
</pre></div>
</div>
<p>And while it doesn’t do anything yet, AcmeTestBundle is now ready to be used.</p>
</div>
<div class="section" id="bundle-directory-structure">
<h2>Bundle Directory Structure</h2>
<p>The directory structure of a bundle is meant to help to keep code consistent
between all Symfony bundles. It follows a set of conventions, but is flexible
to be adjusted if needed:</p>
<dl class="simple">
<dt><code class="docutils literal notranslate"><span class="pre">Controller/</span></code></dt>
<dd><p>Contains the controllers of the bundle (e.g. <code class="docutils literal notranslate"><span class="pre">RandomController.php</span></code>).</p>
</dd>
<dt><code class="docutils literal notranslate"><span class="pre">DependencyInjection/</span></code></dt>
<dd><p>Holds certain Dependency Injection Extension classes, which may import service
configuration, register compiler passes or more (this directory is not
necessary).</p>
</dd>
<dt><code class="docutils literal notranslate"><span class="pre">Resources/config/</span></code></dt>
<dd><p>Houses configuration, including routing configuration (e.g. <code class="docutils literal notranslate"><span class="pre">routing.yaml</span></code>).</p>
</dd>
<dt><code class="docutils literal notranslate"><span class="pre">Resources/views/</span></code></dt>
<dd><p>Holds templates organized by controller name (e.g. <code class="docutils literal notranslate"><span class="pre">Random/index.html.twig</span></code>).</p>
</dd>
<dt><code class="docutils literal notranslate"><span class="pre">Resources/public/</span></code></dt>
<dd><p>Contains web assets (images, stylesheets, etc) and is copied or symbolically
linked into the project <code class="docutils literal notranslate"><span class="pre">public/</span></code> directory via the <code class="docutils literal notranslate"><span class="pre">assets:install</span></code> console
command.</p>
</dd>
<dt><code class="docutils literal notranslate"><span class="pre">Tests/</span></code></dt>
<dd><p>Holds all tests for the bundle.</p>
</dd>
</dl>
<p>A bundle can be as small or large as the feature it implements. It contains
only the files you need and nothing else.</p>
<p>As you move through the guides, you’ll learn how to persist objects to a
database, create and validate forms, create translations for your application,
write tests and much more. Each of these has their own place and role within
the bundle.</p>
</div>
<div class="section" id="learn-more">
<h2>Learn more</h2>
<ul class="simple">
<li><p><a class="reference internal" href="bundles/override.xhtml"><span class="doc">How to Override any Part of a Bundle</span></a></p></li>
<li><p><a class="reference internal" href="bundles/best_practices.xhtml"><span class="doc">Best Practices for Reusable Bundles</span></a></p></li>
<li><p><a class="reference internal" href="bundles/configuration.xhtml"><span class="doc">How to Create Friendly Configuration for a Bundle</span></a></p></li>
<li><p><a class="reference internal" href="bundles/extension.xhtml"><span class="doc">How to Load Service Configuration inside a Bundle</span></a></p></li>
<li><p><a class="reference internal" href="bundles/prepend_extension.xhtml"><span class="doc">How to Simplify Configuration of Multiple Bundles</span></a></p></li>
</ul>
</div>
</div>


          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>