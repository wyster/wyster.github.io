<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <title>How to use Passwordless Login Link Authentication</title>
    <link rel="stylesheet" href="../_static/epub.css" type="text/css" />
    <link rel="stylesheet" href="../_static/pygments.css" type="text/css" />
    <link rel="stylesheet" type="text/css" href="../_static/rtd_custom.css" /> 
  </head><body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <div class="section" id="how-to-use-passwordless-login-link-authentication">
<span id="index-0"></span><h1>How to use Passwordless Login Link Authentication</h1>
<p>Login links, also called “magic links”, are a passwordless authentication
mechanism. Whenever a user wants to login, a new link is generated and sent to
them (e.g. using an email). The link fully authenticates the user in the
application when clicking on it.</p>
<p>This authentication method can help you eliminate most of the customer support
related to authentication (e.g. I forgot my password, how can I change or reset
my password, etc.)</p>
<p>Login links are supported by Symfony when using the experimental
authenticator system. You must
<a class="reference internal" href="experimental_authenticators.xhtml#security-enable-authenticator-manager"><span class="std std-ref">enable the authenticator system</span></a>
in your configuration to use this feature.</p>
<div class="section" id="using-the-login-link-authenticator">
<h2>Using the Login Link Authenticator</h2>
<p>This guide assumes you have setup security and have created a user object
in your application. Follow <a class="reference internal" href="../security.xhtml"><span class="doc">the main security guide</span></a> if
this is not yet the case.</p>
<div class="section" id="configure-the-login-link-authenticator">
<h3>1) Configure the Login Link Authenticator</h3>
<p>The login link authenticator is configured using the <code class="docutils literal notranslate"><span class="pre">login_link</span></code> option
under the firewall. You must configure a <code class="docutils literal notranslate"><span class="pre">check_route</span></code> and
<code class="docutils literal notranslate"><span class="pre">signature_properties</span></code> when enabling this authenticator:</p>
<div class="configuration-block">
<ul class="simple">
<li><p><em>YAML</em><div class="highlight-yaml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6
7</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1"># config/packages/security.yaml</span>
<span class="l l-Scalar l-Scalar-Plain">security</span><span class="p p-Indicator">:</span>
    <span class="l l-Scalar l-Scalar-Plain">firewalls</span><span class="p p-Indicator">:</span>
        <span class="l l-Scalar l-Scalar-Plain">main</span><span class="p p-Indicator">:</span>
            <span class="l l-Scalar l-Scalar-Plain">login_link</span><span class="p p-Indicator">:</span>
                <span class="l l-Scalar l-Scalar-Plain">check_route</span><span class="p p-Indicator">:</span> <span class="l l-Scalar l-Scalar-Plain">login_check</span>
                <span class="l l-Scalar l-Scalar-Plain">signature_properties</span><span class="p p-Indicator">:</span> <span class="p p-Indicator">[</span><span class="s">&#39;id&#39;</span><span class="p p-Indicator">]</span>
</pre></div>
</td></tr></table></div>
</p></li>
<li><p><em>XML</em><div class="highlight-xml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c">&lt;!-- config/packages/security.xml --&gt;</span>
<span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>
<span class="nt">&lt;srv:container</span> <span class="na">xmlns=</span><span class="s">&quot;http://symfony.com/schema/dic/security&quot;</span>
    <span class="na">xmlns:srv=</span><span class="s">&quot;http://symfony.com/schema/dic/services&quot;</span>
    <span class="na">xmlns:xsi=</span><span class="s">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span>
    <span class="na">xsi:schemaLocation=</span><span class="s">&quot;http://symfony.com/schema/dic/services</span>
<span class="s">        https://symfony.com/schema/dic/services/services-1.0.xsd</span>
<span class="s">        http://symfony.com/schema/dic/security</span>
<span class="s">        https://symfony.com/schema/dic/security/security-1.0.xsd&quot;</span><span class="nt">&gt;</span>

    <span class="nt">&lt;config&gt;</span>
        <span class="nt">&lt;firewall</span> <span class="na">name=</span><span class="s">&quot;main&quot;</span><span class="nt">&gt;</span>
            <span class="nt">&lt;login-link</span> <span class="na">check-route=</span><span class="s">&quot;login_check&quot;</span><span class="nt">/&gt;</span>
        <span class="nt">&lt;/firewall&gt;</span>
    <span class="nt">&lt;/config&gt;</span>
<span class="nt">&lt;/srv:container&gt;</span>
</pre></div>
</td></tr></table></div>
</p></li>
<li><p><em>PHP</em><div class="highlight-php notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1">// config/packages/security.php</span>
<span class="nv">$container</span><span class="o">-&gt;</span><span class="na">loadFromExtension</span><span class="p">(</span><span class="s1">&#39;security&#39;</span><span class="p">,</span> <span class="p">[</span>
    <span class="s1">&#39;firewalls&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
        <span class="s1">&#39;main&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
            <span class="s1">&#39;login_link&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
                <span class="s1">&#39;check_route&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;login_check&#39;</span><span class="p">,</span>
            <span class="p">],</span>
        <span class="p">],</span>
    <span class="p">],</span>
<span class="p">]);</span>
</pre></div>
</td></tr></table></div>
</p></li>
</ul>
</div>
<p>The <code class="docutils literal notranslate"><span class="pre">signature_properties</span></code> are used to create a signed URL. This must
contain at least one property of your <code class="docutils literal notranslate"><span class="pre">User</span></code> object that uniquely
identifies this user (e.g. the user ID). Read more about this setting
<a class="reference internal" href="#security-login-link-signature"><span class="std std-ref">further down below</span></a>.</p>
<p>The <code class="docutils literal notranslate"><span class="pre">check_route</span></code> must be an existing route and it will be used to
generate the login link that will authenticate the user. You don’t need a
controller (or it can be empty) because the login link authenticator will
intercept requests to this route:</p>
<div class="configuration-block">
<ul class="simple">
<li><p><em>Annotations</em><div class="highlight-php-annotations notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1">// src/Controller/SecurityController.php</span>
<span class="k">namespace</span> <span class="nx">App\Controller</span><span class="p">;</span>

<span class="k">use</span> <span class="nx">Symfony\Bundle\FrameworkBundle\Controller\AbstractController</span><span class="p">;</span>
<span class="k">use</span> <span class="nx">Symfony\Component\Routing\Annotation\Route</span><span class="p">;</span>

<span class="k">class</span> <span class="nc">SecurityController</span> <span class="k">extends</span> <span class="nx">AbstractController</span>
<span class="p">{</span>
    <span class="sd">/**</span>
<span class="sd">     * @Route(&quot;/login_check&quot;, name=&quot;login_check&quot;)</span>
<span class="sd">     */</span>
    <span class="k">public</span> <span class="k">function</span> <span class="nf">check</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="k">throw</span> <span class="k">new</span> <span class="nx">\LogicException</span><span class="p">(</span><span class="s1">&#39;This code should never be reached&#39;</span><span class="p">);</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>
</td></tr></table></div>
</p></li>
<li><p><em>YAML</em><div class="highlight-yaml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1"># config/routes.yaml</span>

<span class="c1"># ...</span>
<span class="l l-Scalar l-Scalar-Plain">login_check</span><span class="p p-Indicator">:</span>
    <span class="l l-Scalar l-Scalar-Plain">path</span><span class="p p-Indicator">:</span> <span class="l l-Scalar l-Scalar-Plain">/login_check</span>
</pre></div>
</td></tr></table></div>
</p></li>
<li><p><em>XML</em><div class="highlight-xml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c">&lt;!-- config/routes.xml --&gt;</span>
<span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span>
<span class="nt">&lt;routes</span> <span class="na">xmlns=</span><span class="s">&quot;http://symfony.com/schema/routing&quot;</span>
    <span class="na">xmlns:xsi=</span><span class="s">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span>
    <span class="na">xsi:schemaLocation=</span><span class="s">&quot;http://symfony.com/schema/routing</span>
<span class="s">        https://symfony.com/schema/routing/routing-1.0.xsd&quot;</span><span class="nt">&gt;</span>

    <span class="c">&lt;!-- ... --&gt;</span>
    <span class="nt">&lt;route</span> <span class="na">id=</span><span class="s">&quot;login_check&quot;</span> <span class="na">path=</span><span class="s">&quot;/login_check&quot;</span><span class="nt">/&gt;</span>
<span class="nt">&lt;/routes&gt;</span>
</pre></div>
</td></tr></table></div>
</p></li>
<li><p><em>PHP</em><div class="highlight-php notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6
7
8</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1">// config/routes.php</span>
<span class="k">use</span> <span class="nx">App\Controller\DefaultController</span><span class="p">;</span>
<span class="k">use</span> <span class="nx">Symfony\Component\Routing\Loader\Configurator\RoutingConfigurator</span><span class="p">;</span>

<span class="k">return</span> <span class="k">function</span> <span class="p">(</span><span class="nx">RoutingConfigurator</span> <span class="nv">$routes</span><span class="p">)</span> <span class="p">{</span>
    <span class="c1">// ...</span>
    <span class="nv">$routes</span><span class="o">-&gt;</span><span class="na">add</span><span class="p">(</span><span class="s1">&#39;login_check&#39;</span><span class="p">,</span> <span class="s1">&#39;/login_check&#39;</span><span class="p">);</span>
<span class="p">};</span>
</pre></div>
</td></tr></table></div>
</p></li>
</ul>
</div>
</div>
<div class="section" id="generate-the-login-link">
<h3>2) Generate the Login Link</h3>
<p>Now that the authenticator is able to check the login links, you must
create a page where a user can request a login link and log in to your
website.</p>
<p>The login link can be generated using the
<code class="docutils literal notranslate"><a class="reference external" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Security/Http/LoginLink/LoginLinkHandlerInterface.php" title="Symfony\Component\Security\Http\LoginLink\LoginLinkHandlerInterface"><span class="pre">LoginLinkHandlerInterface</span></a><span class="link-target"> <span class="pre">[https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Security/Http/LoginLink/LoginLinkHandlerInterface.php]</span></span></code>.
The correct login link handler is autowired for you when type-hinting for
this interface:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="c1">// src/Controller/SecurityController.php</span>
<span class="k">namespace</span> <span class="nx">App\Controller</span><span class="p">;</span>

<span class="k">use</span> <span class="nx">App\Repository\UserRepository</span><span class="p">;</span>
<span class="k">use</span> <span class="nx">Symfony\Bundle\FrameworkBundle\Controller\AbstractController</span><span class="p">;</span>
<span class="k">use</span> <span class="nx">Symfony\Component\HttpFoundation\Request</span><span class="p">;</span>
<span class="k">use</span> <span class="nx">Symfony\Component\Routing\Annotation\Route</span><span class="p">;</span>
<span class="k">use</span> <span class="nx">Symfony\Component\Security\Http\LoginLink\LoginLinkHandlerInterface</span><span class="p">;</span>

<span class="k">class</span> <span class="nc">SecurityController</span> <span class="k">extends</span> <span class="nx">AbstractController</span>
<span class="p">{</span>
    <span class="sd">/**</span>
<span class="sd">     * @Route(&quot;/login&quot;, name=&quot;login&quot;)</span>
<span class="sd">     */</span>
    <span class="k">public</span> <span class="k">function</span> <span class="nf">requestLoginLink</span><span class="p">(</span><span class="nx">LoginLinkHandlerInterface</span> <span class="nv">$loginLinkHandler</span><span class="p">,</span> <span class="nx">UserRepository</span> <span class="nv">$userRepository</span><span class="p">,</span> <span class="nx">Request</span> <span class="nv">$request</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="c1">// check if login form is submitted</span>
        <span class="k">if</span> <span class="p">(</span><span class="nv">$request</span><span class="o">-&gt;</span><span class="na">isMethod</span><span class="p">(</span><span class="s1">&#39;POST&#39;</span><span class="p">))</span> <span class="p">{</span>
            <span class="c1">// load the user in some way (e.g. using the form input)</span>
            <span class="nv">$email</span> <span class="o">=</span> <span class="nv">$request</span><span class="o">-&gt;</span><span class="na">request</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">(</span><span class="s1">&#39;email&#39;</span><span class="p">);</span>
            <span class="nv">$user</span> <span class="o">=</span> <span class="nv">$userRepository</span><span class="o">-&gt;</span><span class="na">findOneBy</span><span class="p">([</span><span class="s1">&#39;email&#39;</span> <span class="o">=&gt;</span> <span class="nv">$email</span><span class="p">]);</span>

            <span class="c1">// create a login link for $user this returns an instance</span>
            <span class="c1">// of LoginLinkDetails</span>
            <span class="nv">$loginLinkDetails</span> <span class="o">=</span> <span class="nv">$loginLinkHandler</span><span class="o">-&gt;</span><span class="na">createLoginLink</span><span class="p">(</span><span class="nv">$user</span><span class="p">);</span>
            <span class="nv">$loginLink</span> <span class="o">=</span> <span class="nv">$loginLinkDetails</span><span class="o">-&gt;</span><span class="na">getUrl</span><span class="p">();</span>

            <span class="c1">// ... send the link and return a response (see next section)</span>
        <span class="p">}</span>

        <span class="c1">// if it&#39;s not submitted, render the &quot;login&quot; form</span>
        <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">render</span><span class="p">(</span><span class="s1">&#39;security/login.html.twig&#39;</span><span class="p">);</span>
    <span class="p">}</span>

    <span class="c1">// ...</span>
<span class="p">}</span>
</pre></div>
</div>
<div class="highlight-html+twig notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6
7
8
9</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c">{# templates/security/login.html.twig #}</span>
<span class="cp">{%</span> <span class="k">extends</span> <span class="s1">&#39;base.html.twig&#39;</span> <span class="cp">%}</span>

<span class="cp">{%</span> <span class="k">block</span> <span class="nv">body</span> <span class="cp">%}</span>
<span class="p">&lt;</span><span class="nt">form</span> <span class="na">action</span><span class="o">=</span><span class="s">&quot;</span><span class="cp">{{</span> <span class="nv">path</span><span class="o">(</span><span class="s1">&#39;login&#39;</span><span class="o">)</span> <span class="cp">}}</span><span class="s">&quot;</span> <span class="na">method</span><span class="o">=</span><span class="s">&quot;POST&quot;</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="nt">input</span> <span class="na">type</span><span class="o">=</span><span class="s">&quot;email&quot;</span> <span class="na">name</span><span class="o">=</span><span class="s">&quot;email&quot;</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="nt">button</span> <span class="na">type</span><span class="o">=</span><span class="s">&quot;submit&quot;</span><span class="p">&gt;</span>Send Login Link<span class="p">&lt;/</span><span class="nt">button</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">form</span><span class="p">&gt;</span>
<span class="cp">{%</span> <span class="k">endblock</span> <span class="cp">%}</span>
</pre></div>
</td></tr></table></div>
<p>In this controller, the user is submitting their e-mail address to the
controller. Based on this property, the correct user is loaded and a login
link is created using
<code class="docutils literal notranslate"><a class="reference external" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Security/Http/LoginLink/LoginLinkHandlerInterface.php" title="Symfony\Component\Security\Http\LoginLink\LoginLinkHandlerInterface::createLoginLink()"><span class="pre">createLoginLink()</span></a><span class="link-target"> <span class="pre">[https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Security/Http/LoginLink/LoginLinkHandlerInterface.php]</span></span></code>.</p>
<div class="admonition caution">
<p class="admonition-title">Caution</p>
<p>It is important to send this link to the user and <strong>not show it directly</strong>,
as that would allow anyone to login. For instance, use the
<a class="reference internal" href="../mailer.xhtml"><span class="doc">mailer</span></a> component to mail the login link to the user.
Or use the  component to send an SMS to the
user’s device.</p>
</div>
</div>
<div class="section" id="send-the-login-link-to-the-user">
<h3>3) Send the Login Link to the User</h3>
<p>Now the link is created, it needs to be send to the user. Anyone with the
link is able to login as this user, so you need to make sure to send it to
a known device of them (e.g. using e-mail or SMS).</p>
<p>You can send the link using any library or method. However the login link
authenticator provides integration with the <a class="reference internal" href="../notifier.xhtml"><span class="doc">Notifier component</span></a>.
Use the special <code class="docutils literal notranslate"><a class="reference external" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Security/Http/LoginLink/LoginLinkNotification.php" title="Symfony\Component\Security\Http\LoginLink\LoginLinkNotification"><span class="pre">LoginLinkNotification</span></a><span class="link-target"> <span class="pre">[https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Security/Http/LoginLink/LoginLinkNotification.php]</span></span></code>
to create a notification and send it to the user’s email address or phone
number:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="c1">// src/Controller/SecurityController.php</span>

<span class="c1">// ...</span>
<span class="k">use</span> <span class="nx">Symfony\Component\Notifier\NotifierInterface</span><span class="p">;</span>
<span class="k">use</span> <span class="nx">Symfony\Component\Notifier\Recipient\Recipient</span><span class="p">;</span>
<span class="k">use</span> <span class="nx">Symfony\Component\Security\Http\LoginLink\LoginLinkNotification</span><span class="p">;</span>

<span class="k">class</span> <span class="nc">SecurityController</span> <span class="k">extends</span> <span class="nx">AbstractController</span>
<span class="p">{</span>
    <span class="sd">/**</span>
<span class="sd">     * @Route(&quot;/login&quot;, name=&quot;login&quot;)</span>
<span class="sd">     */</span>
    <span class="k">public</span> <span class="k">function</span> <span class="nf">requestLoginLink</span><span class="p">(</span><span class="nx">NotifierInterface</span> <span class="nv">$notifier</span><span class="p">,</span> <span class="nx">LoginLinkHandlerInterface</span> <span class="nv">$loginLinkHandler</span><span class="p">,</span> <span class="nx">UserRepository</span> <span class="nv">$userRepository</span><span class="p">,</span> <span class="nx">Request</span> <span class="nv">$request</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">if</span> <span class="p">(</span><span class="nv">$request</span><span class="o">-&gt;</span><span class="na">isMethod</span><span class="p">(</span><span class="s1">&#39;POST&#39;</span><span class="p">))</span> <span class="p">{</span>
            <span class="nv">$email</span> <span class="o">=</span> <span class="nv">$request</span><span class="o">-&gt;</span><span class="na">request</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">(</span><span class="s1">&#39;email&#39;</span><span class="p">);</span>
            <span class="nv">$user</span> <span class="o">=</span> <span class="nv">$userRepository</span><span class="o">-&gt;</span><span class="na">findOneBy</span><span class="p">([</span><span class="s1">&#39;email&#39;</span> <span class="o">=&gt;</span> <span class="nv">$email</span><span class="p">]);</span>

            <span class="nv">$loginLinkDetails</span> <span class="o">=</span> <span class="nv">$loginLinkHandler</span><span class="o">-&gt;</span><span class="na">createLoginLink</span><span class="p">(</span><span class="nv">$user</span><span class="p">);</span>

            <span class="c1">// create a notification based on the login link details</span>
            <span class="nv">$notification</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">LoginLinkNotification</span><span class="p">(</span>
                <span class="nv">$loginLinkDetails</span><span class="p">,</span>
                <span class="s1">&#39;Welcome to MY WEBSITE!&#39;</span> <span class="c1">// email subject</span>
            <span class="p">);</span>
            <span class="c1">// create a recipient for this user</span>
            <span class="nv">$recipient</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Recipient</span><span class="p">(</span><span class="nv">$user</span><span class="o">-&gt;</span><span class="na">getEmail</span><span class="p">());</span>

            <span class="c1">// send the notification to the user</span>
            <span class="nv">$notifier</span><span class="o">-&gt;</span><span class="na">send</span><span class="p">(</span><span class="nv">$notification</span><span class="p">,</span> <span class="nv">$recipient</span><span class="p">);</span>

            <span class="c1">// render a &quot;Login link is sent!&quot; page</span>
            <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">render</span><span class="p">(</span><span class="s1">&#39;security/login_link_sent.html.twig&#39;</span><span class="p">);</span>
        <span class="p">}</span>

        <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">render</span><span class="p">(</span><span class="s1">&#39;security/login.html.twig&#39;</span><span class="p">);</span>
    <span class="p">}</span>

    <span class="c1">// ...</span>
<span class="p">}</span>
</pre></div>
</div>
<div class="admonition note">
<p class="admonition-title">Note</p>
<p>This integration requires the <a class="reference internal" href="../notifier.xhtml"><span class="doc">Notifier</span></a> and
<a class="reference internal" href="../mailer.xhtml"><span class="doc">Mailer</span></a> components to be installed and configured.
Install all required packages using:</p>
<div class="highlight-terminal notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="gp">$</span> composer require symfony/mailer symfony/notifier <span class="err">\</span>
<span class="go">    symfony/twig-bundle twig/extra-bundle \</span>
<span class="go">    twig/cssinliner-extra twig/inky-extra</span>
</pre></div>
</td></tr></table></div>
</div>
<p>This will send an email like this to the user:</p>
<img alt="../_images/login_link_email.png" class="align-center" src="../_images/login_link_email.png" />
<div class="admonition tip">
<p class="admonition-title">Tip</p>
<p>You can customize this e-mail template by extending the
<code class="docutils literal notranslate"><span class="pre">LoginLinkNotification</span></code> and configuring another <code class="docutils literal notranslate"><span class="pre">htmlTemplate</span></code>:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="c1">// src/Notifier/CustomLoginLinkNotification</span>
<span class="k">namespace</span> <span class="nx">App\Notifier</span><span class="p">;</span>

<span class="k">use</span> <span class="nx">Symfony\Component\Security\Http\LoginLink\LoginLinkNotification</span><span class="p">;</span>

<span class="k">class</span> <span class="nc">CustomLoginLinkNotification</span> <span class="k">extends</span> <span class="nx">LoginLinkNotification</span>
<span class="p">{</span>
    <span class="k">public</span> <span class="k">function</span> <span class="nf">asEmailMessage</span><span class="p">(</span><span class="nx">EmailRecipientInterface</span> <span class="nv">$recipient</span><span class="p">,</span> <span class="nx">string</span> <span class="nv">$transport</span> <span class="o">=</span> <span class="k">null</span><span class="p">)</span><span class="o">:</span> <span class="o">?</span><span class="nx">EmailMessage</span>
    <span class="p">{</span>
        <span class="nv">$emailMessage</span> <span class="o">=</span> <span class="k">parent</span><span class="o">::</span><span class="na">asEmailMessage</span><span class="p">(</span><span class="nv">$recipient</span><span class="p">,</span> <span class="nv">$transport</span><span class="p">);</span>

        <span class="c1">// get the NotificationEmail object and override the template</span>
        <span class="nv">$email</span> <span class="o">=</span> <span class="nv">$emailMessage</span><span class="o">-&gt;</span><span class="na">getMessage</span><span class="p">();</span>
        <span class="nv">$email</span><span class="o">-&gt;</span><span class="na">htmlTemplate</span><span class="p">(</span><span class="s1">&#39;emails/custom_login_link_email.html.twig&#39;</span><span class="p">);</span>

        <span class="k">return</span> <span class="nv">$emailMessage</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>
</div>
<p>Then, use this new <code class="docutils literal notranslate"><span class="pre">CustomLoginLinkNotification</span></code> in the controller
instead.</p>
</div>
</div>
</div>
<div class="section" id="important-considerations">
<h2>Important Considerations</h2>
<p>Login links are a convenient way of authenticating users, but it is also
considered less secure than a traditional username and password form. It is
not recommended to use login links in security critical applications.</p>
<p>However, the implementation in Symfony does have a couple extension points
to make the login links more secure. In this section, the most important
configuration decisions are discussed:</p>
<ul class="simple">
<li><p><a class="reference internal" href="#limit-login-link-lifetime">Limit Login Link Lifetime</a></p></li>
<li><p><a class="reference internal" href="#invalidate-login-links">Invalidate Login Links</a></p></li>
<li><p><a class="reference internal" href="#allow-a-link-to-only-be-used-once">Allow a Link to only be Used Once</a></p></li>
</ul>
<div class="section" id="limit-login-link-lifetime">
<h3>Limit Login Link Lifetime</h3>
<p>It is important for login links to have a limited lifetime. This reduces
the risk that someone can intercept the link and use it to login as
somebody else. By default, Symfony defines a lifetime of 10 minutes (600
seconds). You can customize this using the <code class="docutils literal notranslate"><span class="pre">lifetime</span></code> option:</p>
<div class="configuration-block">
<ul class="simple">
<li><p><em>YAML</em><div class="highlight-yaml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6
7
8</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1"># config/packages/security.yaml</span>
<span class="l l-Scalar l-Scalar-Plain">security</span><span class="p p-Indicator">:</span>
    <span class="l l-Scalar l-Scalar-Plain">firewalls</span><span class="p p-Indicator">:</span>
        <span class="l l-Scalar l-Scalar-Plain">main</span><span class="p p-Indicator">:</span>
            <span class="l l-Scalar l-Scalar-Plain">login_link</span><span class="p p-Indicator">:</span>
                <span class="l l-Scalar l-Scalar-Plain">check_route</span><span class="p p-Indicator">:</span> <span class="l l-Scalar l-Scalar-Plain">login_check</span>
                <span class="c1"># lifetime in seconds</span>
                <span class="l l-Scalar l-Scalar-Plain">lifetime</span><span class="p p-Indicator">:</span> <span class="l l-Scalar l-Scalar-Plain">300</span>
</pre></div>
</td></tr></table></div>
</p></li>
<li><p><em>XML</em><div class="highlight-xml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c">&lt;!-- config/packages/security.xml --&gt;</span>
<span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>
<span class="nt">&lt;srv:container</span> <span class="na">xmlns=</span><span class="s">&quot;http://symfony.com/schema/dic/security&quot;</span>
    <span class="na">xmlns:srv=</span><span class="s">&quot;http://symfony.com/schema/dic/services&quot;</span>
    <span class="na">xmlns:xsi=</span><span class="s">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span>
    <span class="na">xsi:schemaLocation=</span><span class="s">&quot;http://symfony.com/schema/dic/services</span>
<span class="s">        https://symfony.com/schema/dic/services/services-1.0.xsd</span>
<span class="s">        http://symfony.com/schema/dic/security</span>
<span class="s">        https://symfony.com/schema/dic/security/security-1.0.xsd&quot;</span><span class="nt">&gt;</span>

    <span class="nt">&lt;config&gt;</span>
        <span class="nt">&lt;firewall</span> <span class="na">name=</span><span class="s">&quot;main&quot;</span><span class="nt">&gt;</span>
            <span class="c">&lt;!-- lifetime: lifetime in seconds --&gt;</span>
            <span class="nt">&lt;login-link</span> <span class="na">check-route=</span><span class="s">&quot;login_check&quot;</span>
                <span class="na">lifetime=</span><span class="s">&quot;300&quot;</span>
            <span class="nt">/&gt;</span>
        <span class="nt">&lt;/firewall&gt;</span>
    <span class="nt">&lt;/config&gt;</span>
<span class="nt">&lt;/srv:container&gt;</span>
</pre></div>
</td></tr></table></div>
</p></li>
<li><p><em>PHP</em><div class="highlight-php notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1">// config/packages/security.php</span>
<span class="nv">$container</span><span class="o">-&gt;</span><span class="na">loadFromExtension</span><span class="p">(</span><span class="s1">&#39;security&#39;</span><span class="p">,</span> <span class="p">[</span>
    <span class="s1">&#39;firewalls&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
        <span class="s1">&#39;main&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
            <span class="s1">&#39;login_link&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
                <span class="s1">&#39;check_route&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;login_check&#39;</span><span class="p">,</span>
                <span class="c1">// lifetime in seconds</span>
                <span class="s1">&#39;lifetime&#39;</span> <span class="o">=&gt;</span> <span class="mi">300</span><span class="p">,</span>
            <span class="p">],</span>
        <span class="p">],</span>
    <span class="p">],</span>
<span class="p">]);</span>
</pre></div>
</td></tr></table></div>
</p></li>
</ul>
</div>
</div>
<div class="section" id="invalidate-login-links">
<span id="security-login-link-signature"></span><h3>Invalidate Login Links</h3>
<p>Symfony uses signed URLs to implement login links. The advantage of this is
that valid links do not have to be stored in a database. The signed URLs
allow Symfony to still invalidate already sent login links when important
information changes (e.g. a user’s email address).</p>
<p>The signed URL contains 3 parameters:</p>
<dl class="simple">
<dt><code class="docutils literal notranslate"><span class="pre">expires</span></code></dt>
<dd><p>The UNIX timestamp when the link expires.</p>
</dd>
<dt><code class="docutils literal notranslate"><span class="pre">user</span></code></dt>
<dd><p>The value returned from <code class="docutils literal notranslate"><span class="pre">$user-&gt;getUsername()</span></code> for this user.</p>
</dd>
<dt><code class="docutils literal notranslate"><span class="pre">hash</span></code></dt>
<dd><p>A hash of <code class="docutils literal notranslate"><span class="pre">expires</span></code>, <code class="docutils literal notranslate"><span class="pre">user</span></code> and any configured signature
properties. Whenever these change, the hash changes and previous login
links are invalidated.</p>
</dd>
</dl>
<p>You can add more properties to the <code class="docutils literal notranslate"><span class="pre">hash</span></code> by using the
<code class="docutils literal notranslate"><span class="pre">signature_properties</span></code> option:</p>
<div class="configuration-block">
<ul class="simple">
<li><p><em>YAML</em><div class="highlight-yaml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6
7</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1"># config/packages/security.yaml</span>
<span class="l l-Scalar l-Scalar-Plain">security</span><span class="p p-Indicator">:</span>
    <span class="l l-Scalar l-Scalar-Plain">firewalls</span><span class="p p-Indicator">:</span>
        <span class="l l-Scalar l-Scalar-Plain">main</span><span class="p p-Indicator">:</span>
            <span class="l l-Scalar l-Scalar-Plain">login_link</span><span class="p p-Indicator">:</span>
                <span class="l l-Scalar l-Scalar-Plain">check_route</span><span class="p p-Indicator">:</span> <span class="l l-Scalar l-Scalar-Plain">login_check</span>
                <span class="l l-Scalar l-Scalar-Plain">signature_properties</span><span class="p p-Indicator">:</span> <span class="p p-Indicator">[</span><span class="nv">id</span><span class="p p-Indicator">,</span> <span class="nv">email</span><span class="p p-Indicator">]</span>
</pre></div>
</td></tr></table></div>
</p></li>
<li><p><em>XML</em><div class="highlight-xml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c">&lt;!-- config/packages/security.xml --&gt;</span>
<span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>
<span class="nt">&lt;srv:container</span> <span class="na">xmlns=</span><span class="s">&quot;http://symfony.com/schema/dic/security&quot;</span>
    <span class="na">xmlns:srv=</span><span class="s">&quot;http://symfony.com/schema/dic/services&quot;</span>
    <span class="na">xmlns:xsi=</span><span class="s">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span>
    <span class="na">xsi:schemaLocation=</span><span class="s">&quot;http://symfony.com/schema/dic/services</span>
<span class="s">        https://symfony.com/schema/dic/services/services-1.0.xsd</span>
<span class="s">        http://symfony.com/schema/dic/security</span>
<span class="s">        https://symfony.com/schema/dic/security/security-1.0.xsd&quot;</span><span class="nt">&gt;</span>

    <span class="nt">&lt;config&gt;</span>
        <span class="nt">&lt;firewall</span> <span class="na">name=</span><span class="s">&quot;main&quot;</span><span class="nt">&gt;</span>
            <span class="nt">&lt;login-link</span> <span class="na">check-route=</span><span class="s">&quot;login_check&quot;</span><span class="nt">&gt;</span>
                <span class="nt">&lt;signature-property&gt;</span>id<span class="nt">&lt;/signature-property&gt;</span>
                <span class="nt">&lt;signature-property&gt;</span>email<span class="nt">&lt;/signature-property&gt;</span>
            <span class="nt">&lt;/login-link&gt;</span>
        <span class="nt">&lt;/firewall&gt;</span>
    <span class="nt">&lt;/config&gt;</span>
<span class="nt">&lt;/srv:container&gt;</span>
</pre></div>
</td></tr></table></div>
</p></li>
<li><p><em>PHP</em><div class="highlight-php notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1">// config/packages/security.php</span>
<span class="nv">$container</span><span class="o">-&gt;</span><span class="na">loadFromExtension</span><span class="p">(</span><span class="s1">&#39;security&#39;</span><span class="p">,</span> <span class="p">[</span>
    <span class="s1">&#39;firewalls&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
        <span class="s1">&#39;main&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
            <span class="s1">&#39;login_link&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
                <span class="s1">&#39;check_route&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;login_check&#39;</span><span class="p">,</span>
                <span class="s1">&#39;signature_properties&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span><span class="s1">&#39;id&#39;</span><span class="p">,</span> <span class="s1">&#39;email&#39;</span><span class="p">],</span>
            <span class="p">],</span>
        <span class="p">],</span>
    <span class="p">],</span>
<span class="p">]);</span>
</pre></div>
</td></tr></table></div>
</p></li>
</ul>
</div>
<p>The properties are fetched from the user object using the
<a class="reference internal" href="../components/property_access.xhtml"><span class="doc">PropertyAccess component</span></a> (e.g. using
<code class="docutils literal notranslate"><span class="pre">getEmail()</span></code> or a public <code class="docutils literal notranslate"><span class="pre">$email</span></code> property in this example).</p>
<div class="admonition tip">
<p class="admonition-title">Tip</p>
<p>You can also use the signature properties to add very advanced
invalidating logic to your login links. For instance, if you store a
<code class="docutils literal notranslate"><span class="pre">$lastLinkRequestedAt</span></code> property on your users that you update in the
<code class="docutils literal notranslate"><span class="pre">requestLoginLink()</span></code> controller, you can invalidate all login links
whenever a user requests a new link.</p>
</div>
</div>
<div class="section" id="configure-a-maximum-use-of-a-link">
<h3>Configure a Maximum Use of a Link</h3>
<p>It is a common characteristic of login links to limit the number of times
it can be used. Symfony can support this by storing used login links in the
cache. Enable this support by setting the <code class="docutils literal notranslate"><span class="pre">max_uses</span></code> option:</p>
<div class="configuration-block">
<ul class="simple">
<li><p><em>YAML</em><div class="highlight-yaml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1"># config/packages/security.yaml</span>
<span class="l l-Scalar l-Scalar-Plain">security</span><span class="p p-Indicator">:</span>
    <span class="l l-Scalar l-Scalar-Plain">firewalls</span><span class="p p-Indicator">:</span>
        <span class="l l-Scalar l-Scalar-Plain">main</span><span class="p p-Indicator">:</span>
            <span class="l l-Scalar l-Scalar-Plain">login_link</span><span class="p p-Indicator">:</span>
                <span class="l l-Scalar l-Scalar-Plain">check_route</span><span class="p p-Indicator">:</span> <span class="l l-Scalar l-Scalar-Plain">login_check</span>
                <span class="c1"># only allow the link to be used 3 times</span>
                <span class="l l-Scalar l-Scalar-Plain">max_uses</span><span class="p p-Indicator">:</span> <span class="l l-Scalar l-Scalar-Plain">3</span>

                <span class="c1"># optionally, configure the cache pool</span>
                <span class="c1">#used_link_cache: &#39;cache.redis&#39;</span>
</pre></div>
</td></tr></table></div>
</p></li>
<li><p><em>XML</em><div class="highlight-xml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c">&lt;!-- config/packages/security.xml --&gt;</span>
<span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>
<span class="nt">&lt;srv:container</span> <span class="na">xmlns=</span><span class="s">&quot;http://symfony.com/schema/dic/security&quot;</span>
    <span class="na">xmlns:srv=</span><span class="s">&quot;http://symfony.com/schema/dic/services&quot;</span>
    <span class="na">xmlns:xsi=</span><span class="s">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span>
    <span class="na">xsi:schemaLocation=</span><span class="s">&quot;http://symfony.com/schema/dic/services</span>
<span class="s">        https://symfony.com/schema/dic/services/services-1.0.xsd</span>
<span class="s">        http://symfony.com/schema/dic/security</span>
<span class="s">        https://symfony.com/schema/dic/security/security-1.0.xsd&quot;</span><span class="nt">&gt;</span>

    <span class="nt">&lt;config&gt;</span>
        <span class="nt">&lt;firewall</span> <span class="na">name=</span><span class="s">&quot;main&quot;</span><span class="nt">&gt;</span>
            <span class="c">&lt;!-- max-uses: only allow the link to be used 3 times</span>
<span class="c">                 used-link-cache: optionally, configure the cache pool --&gt;</span>
            <span class="nt">&lt;login-link</span> <span class="na">check-route=</span><span class="s">&quot;login_check&quot;</span>
                <span class="na">max-uses=</span><span class="s">&quot;3&quot;</span>
                <span class="na">used-link-cache=</span><span class="s">&quot;cache.redis&quot;</span>
            <span class="nt">/&gt;</span>
        <span class="nt">&lt;/firewall&gt;</span>
    <span class="nt">&lt;/config&gt;</span>
<span class="nt">&lt;/srv:container&gt;</span>
</pre></div>
</td></tr></table></div>
</p></li>
<li><p><em>PHP</em><div class="highlight-php notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1">// config/packages/security.php</span>
<span class="nv">$container</span><span class="o">-&gt;</span><span class="na">loadFromExtension</span><span class="p">(</span><span class="s1">&#39;security&#39;</span><span class="p">,</span> <span class="p">[</span>
    <span class="s1">&#39;firewalls&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
        <span class="s1">&#39;main&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
            <span class="s1">&#39;login_link&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
                <span class="s1">&#39;check_route&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;login_check&#39;</span><span class="p">,</span>
                <span class="c1">// only allow the link to be used 3 times</span>
                <span class="s1">&#39;max_uses&#39;</span> <span class="o">=&gt;</span> <span class="mi">3</span><span class="p">,</span>

                <span class="c1">// optionally, configure the cache pool</span>
                <span class="c1">//&#39;used_link_cache&#39; =&gt; &#39;cache.redis&#39;,</span>
            <span class="p">],</span>
        <span class="p">],</span>
    <span class="p">],</span>
<span class="p">]);</span>
</pre></div>
</td></tr></table></div>
</p></li>
</ul>
</div>
<p>Make sure there is enough space left in the cache, otherwise invalid links
can no longer be stored (and thus become valid again). Expired invalid
links are automatically removed from the cache.</p>
<p>The cache pools are not cleared by the <code class="docutils literal notranslate"><span class="pre">cache:clear</span></code> command, but
removing <code class="docutils literal notranslate"><span class="pre">var/cache/</span></code> manually may remove the cache if the cache
component is configured to store its cache in that location. Read the
<a class="reference internal" href="../cache.xhtml"><span class="doc">Cache</span></a> guide for more information.</p>
<div class="section" id="allow-a-link-to-only-be-used-once">
<h4>Allow a Link to only be Used Once</h4>
<p>When setting <code class="docutils literal notranslate"><span class="pre">max_uses</span></code> to <code class="docutils literal notranslate"><span class="pre">1</span></code>, you must take extra precautions to
make it work as expected. Email providers and browsers often load a
preview of the links, meaning that the link is already invalidated by
the preview loader.</p>
<p>In order to solve this issue, first set the <code class="docutils literal notranslate"><span class="pre">check_post_only</span></code> option let
the authenticator only handle HTTP POST methods:</p>
<div class="configuration-block">
<ul class="simple">
<li><p><em>YAML</em><div class="highlight-yaml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6
7
8</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1"># config/packages/security.yaml</span>
<span class="l l-Scalar l-Scalar-Plain">security</span><span class="p p-Indicator">:</span>
    <span class="l l-Scalar l-Scalar-Plain">firewalls</span><span class="p p-Indicator">:</span>
        <span class="l l-Scalar l-Scalar-Plain">main</span><span class="p p-Indicator">:</span>
            <span class="l l-Scalar l-Scalar-Plain">login_link</span><span class="p p-Indicator">:</span>
                <span class="l l-Scalar l-Scalar-Plain">check_route</span><span class="p p-Indicator">:</span> <span class="l l-Scalar l-Scalar-Plain">login_check</span>
                <span class="l l-Scalar l-Scalar-Plain">check_post_only</span><span class="p p-Indicator">:</span> <span class="l l-Scalar l-Scalar-Plain">true</span>
                <span class="l l-Scalar l-Scalar-Plain">max_uses</span><span class="p p-Indicator">:</span> <span class="l l-Scalar l-Scalar-Plain">1</span>
</pre></div>
</td></tr></table></div>
</p></li>
<li><p><em>XML</em><div class="highlight-xml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c">&lt;!-- config/packages/security.xml --&gt;</span>
<span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>
<span class="nt">&lt;srv:container</span> <span class="na">xmlns=</span><span class="s">&quot;http://symfony.com/schema/dic/security&quot;</span>
    <span class="na">xmlns:srv=</span><span class="s">&quot;http://symfony.com/schema/dic/services&quot;</span>
    <span class="na">xmlns:xsi=</span><span class="s">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span>
    <span class="na">xsi:schemaLocation=</span><span class="s">&quot;http://symfony.com/schema/dic/services</span>
<span class="s">        https://symfony.com/schema/dic/services/services-1.0.xsd</span>
<span class="s">        http://symfony.com/schema/dic/security</span>
<span class="s">        https://symfony.com/schema/dic/security/security-1.0.xsd&quot;</span><span class="nt">&gt;</span>

    <span class="nt">&lt;config&gt;</span>
        <span class="nt">&lt;firewall</span> <span class="na">name=</span><span class="s">&quot;main&quot;</span><span class="nt">&gt;</span>
            <span class="nt">&lt;login-link</span> <span class="na">check-route=</span><span class="s">&quot;login_check&quot;</span>
                <span class="na">check-post-only=</span><span class="s">&quot;true&quot;</span>
                <span class="na">max-uses=</span><span class="s">&quot;1&quot;</span>
            <span class="nt">/&gt;</span>
        <span class="nt">&lt;/firewall&gt;</span>
    <span class="nt">&lt;/config&gt;</span>
<span class="nt">&lt;/srv:container&gt;</span>
</pre></div>
</td></tr></table></div>
</p></li>
<li><p><em>PHP</em><div class="highlight-php notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1">// config/packages/security.php</span>
<span class="nv">$container</span><span class="o">-&gt;</span><span class="na">loadFromExtension</span><span class="p">(</span><span class="s1">&#39;security&#39;</span><span class="p">,</span> <span class="p">[</span>
    <span class="s1">&#39;firewalls&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
        <span class="s1">&#39;main&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
            <span class="s1">&#39;login_link&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
                <span class="s1">&#39;check_route&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;login_check&#39;</span><span class="p">,</span>
                <span class="s1">&#39;check_post_only&#39;</span> <span class="o">=&gt;</span> <span class="k">true</span><span class="p">,</span>
                <span class="s1">&#39;max_uses&#39;</span> <span class="o">=&gt;</span> <span class="mi">1</span><span class="p">,</span>
            <span class="p">],</span>
        <span class="p">],</span>
    <span class="p">],</span>
<span class="p">]);</span>
</pre></div>
</td></tr></table></div>
</p></li>
</ul>
</div>
<p>Then, use the <code class="docutils literal notranslate"><span class="pre">check_route</span></code> controller to render a page that lets the
user create this POST request (e.g. by clicking a button):</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="c1">// src/Controller/SecurityController.php</span>
<span class="k">namespace</span> <span class="nx">App\Controller</span><span class="p">;</span>

<span class="c1">// ...</span>
<span class="k">use</span> <span class="nx">Symfony\Component\Routing\Generator\UrlGeneratorInterface</span><span class="p">;</span>

<span class="k">class</span> <span class="nc">SecurityController</span> <span class="k">extends</span> <span class="nx">AbstractController</span>
<span class="p">{</span>
    <span class="sd">/**</span>
<span class="sd">     * @Route(&quot;/login_check&quot;, name=&quot;login_check&quot;)</span>
<span class="sd">     */</span>
    <span class="k">public</span> <span class="k">function</span> <span class="nf">check</span><span class="p">(</span><span class="nx">Request</span> <span class="nv">$request</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="c1">// get the login link query parameters</span>
        <span class="nv">$expires</span> <span class="o">=</span> <span class="nv">$request</span><span class="o">-&gt;</span><span class="na">query</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">(</span><span class="s1">&#39;expires&#39;</span><span class="p">);</span>
        <span class="nv">$username</span> <span class="o">=</span> <span class="nv">$request</span><span class="o">-&gt;</span><span class="na">query</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">(</span><span class="s1">&#39;user&#39;</span><span class="p">);</span>
        <span class="nv">$hash</span> <span class="o">=</span> <span class="nv">$request</span><span class="o">-&gt;</span><span class="na">query</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">(</span><span class="s1">&#39;hash&#39;</span><span class="p">);</span>

        <span class="c1">// and render a template with the button</span>
        <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">render</span><span class="p">(</span><span class="s1">&#39;security/process_login_link.html.twig&#39;</span><span class="p">,</span> <span class="p">[</span>
            <span class="s1">&#39;expires&#39;</span> <span class="o">=&gt;</span> <span class="nv">$expires</span><span class="p">,</span>
            <span class="s1">&#39;user&#39;</span> <span class="o">=&gt;</span> <span class="nv">$username</span><span class="p">,</span>
            <span class="s1">&#39;hash&#39;</span> <span class="o">=&gt;</span> <span class="nv">$hash</span><span class="p">,</span>
        <span class="p">]);</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>
</div>
<div class="highlight-html+twig notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c">{# templates/security/process_login_link.html.twig #}</span>
<span class="cp">{%</span> <span class="k">extends</span> <span class="s1">&#39;base.html.twig&#39;</span> <span class="cp">%}</span>

<span class="cp">{%</span> <span class="k">block</span> <span class="nv">body</span> <span class="cp">%}</span>
    <span class="p">&lt;</span><span class="nt">h2</span><span class="p">&gt;</span>Hi! You are about to login to ...<span class="p">&lt;/</span><span class="nt">h2</span><span class="p">&gt;</span>

    <span class="c">&lt;!-- for instance, use a form with hidden fields to</span>
<span class="c">         create the POST request ---&gt;</span>
    <span class="p">&lt;</span><span class="nt">form</span> <span class="na">action</span><span class="o">=</span><span class="s">&quot;</span><span class="cp">{{</span> <span class="nv">path</span><span class="o">(</span><span class="s1">&#39;login_check&#39;</span><span class="o">)</span> <span class="cp">}}</span><span class="s">&quot;</span> <span class="na">method</span><span class="o">=</span><span class="s">&quot;POST&quot;</span><span class="p">&gt;</span>
        <span class="p">&lt;</span><span class="nt">input</span> <span class="na">type</span><span class="o">=</span><span class="s">&quot;hidden&quot;</span> <span class="na">name</span><span class="o">=</span><span class="s">&quot;expires&quot;</span> <span class="na">value</span><span class="o">=</span><span class="s">&quot;</span><span class="cp">{{</span> <span class="nv">expires</span> <span class="cp">}}</span><span class="s">&quot;</span><span class="p">&gt;</span>
        <span class="p">&lt;</span><span class="nt">input</span> <span class="na">type</span><span class="o">=</span><span class="s">&quot;hidden&quot;</span> <span class="na">name</span><span class="o">=</span><span class="s">&quot;user&quot;</span> <span class="na">value</span><span class="o">=</span><span class="s">&quot;</span><span class="cp">{{</span> <span class="nv">user</span> <span class="cp">}}</span><span class="s">&quot;</span><span class="p">&gt;</span>
        <span class="p">&lt;</span><span class="nt">input</span> <span class="na">type</span><span class="o">=</span><span class="s">&quot;hidden&quot;</span> <span class="na">name</span><span class="o">=</span><span class="s">&quot;hash&quot;</span> <span class="na">value</span><span class="o">=</span><span class="s">&quot;</span><span class="cp">{{</span> <span class="nv">hash</span> <span class="cp">}}</span><span class="s">&quot;</span><span class="p">&gt;</span>

        <span class="p">&lt;</span><span class="nt">button</span> <span class="na">type</span><span class="o">=</span><span class="s">&quot;submit&quot;</span><span class="p">&gt;</span>Continue<span class="p">&lt;/</span><span class="nt">button</span><span class="p">&gt;</span>
    <span class="p">&lt;/</span><span class="nt">form</span><span class="p">&gt;</span>
<span class="cp">{%</span> <span class="k">endblock</span> <span class="cp">%}</span>
</pre></div>
</td></tr></table></div>
</div>
</div>
</div>
</div>


          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>