<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <title>How to Secure any Service or Method in your Application</title>
    <link rel="stylesheet" href="../_static/epub.css" type="text/css" />
    <link rel="stylesheet" href="../_static/pygments.css" type="text/css" />
    <link rel="stylesheet" type="text/css" href="../_static/rtd_custom.css" /> 
  </head><body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <div class="section" id="how-to-secure-any-service-or-method-in-your-application">
<span id="index-0"></span><h1>How to Secure any Service or Method in your Application</h1>
<p>In the security article, you learned how to
<a class="reference internal" href="../security.xhtml#security-securing-controller"><span class="std std-ref">secure a controller</span></a> via a shortcut method.</p>
<p>But, you can check access <em>anywhere</em> in your code by injecting the <code class="docutils literal notranslate"><span class="pre">Security</span></code>
service. For example, suppose you have a <code class="docutils literal notranslate"><span class="pre">SalesReportManager</span></code> service and you
want to include extra details only for users that have a <code class="docutils literal notranslate"><span class="pre">ROLE_SALES_ADMIN</span></code> role:</p>
<div class="highlight-diff notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28</pre></div></td><td class="code"><div class="highlight"><pre><span></span>// src/Newsletter/NewsletterManager.php

// ...
use Symfony\Component\Security\Core\Exception\AccessDeniedException;
<span class="gi">+ use Symfony\Component\Security\Core\Security;</span>

class SalesReportManager
{
<span class="gi">+     private $security;</span>

<span class="gi">+     public function __construct(Security $security)</span>
<span class="gi">+     {</span>
<span class="gi">+         $this-&gt;security = $security;</span>
<span class="gi">+     }</span>

    public function sendNewsletter()
    {
        $salesData = [];

<span class="gi">+         if ($this-&gt;security-&gt;isGranted(&#39;ROLE_SALES_ADMIN&#39;)) {</span>
<span class="gi">+             $salesData[&#39;top_secret_numbers&#39;] = rand();</span>
<span class="gi">+         }</span>

        // ...
    }

    // ...
}
</pre></div>
</td></tr></table></div>
<p>If youâ€™re using the <a class="reference internal" href="../service_container.xhtml#service-container-services-load-example"><span class="std std-ref">default services.yaml configuration</span></a>,
Symfony will automatically pass the <code class="docutils literal notranslate"><span class="pre">security.helper</span></code> to your service
thanks to autowiring and the <code class="docutils literal notranslate"><span class="pre">Security</span></code> type-hint.</p>
<p>You can also use a lower-level
<code class="docutils literal notranslate"><a class="reference external" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Security/Core/Authorization/AuthorizationCheckerInterface.php" title="Symfony\Component\Security\Core\Authorization\AuthorizationCheckerInterface"><span class="pre">AuthorizationCheckerInterface</span></a><span class="link-target"> <span class="pre">[https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Security/Core/Authorization/AuthorizationCheckerInterface.php]</span></span></code>
service. It does the same thing as <code class="docutils literal notranslate"><span class="pre">Security</span></code>, but allows you to type-hint a
more-specific interface.</p>
</div>


          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>