<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <title>How to Impersonate a User</title>
    <link rel="stylesheet" href="../_static/epub.css" type="text/css" />
    <link rel="stylesheet" href="../_static/pygments.css" type="text/css" />
    <link rel="stylesheet" type="text/css" href="../_static/rtd_custom.css" /> 
  </head><body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <div class="section" id="how-to-impersonate-a-user">
<span id="index-0"></span><h1>How to Impersonate a User</h1>
<p>Sometimes, it’s useful to be able to switch from one user to another without
having to log out and log in again (for instance when you are debugging something
a user sees that you can’t reproduce).</p>
<div class="admonition caution">
<p class="admonition-title">Caution</p>
<p>User impersonation is not compatible with some authentication mechanisms
(e.g. <code class="docutils literal notranslate"><span class="pre">REMOTE_USER</span></code>) where the authentication information is expected to be
sent on each request.</p>
</div>
<p>Impersonating the user can be done by activating the <code class="docutils literal notranslate"><span class="pre">switch_user</span></code> firewall
listener:</p>
<div class="configuration-block">
<ul class="simple">
<li><p><em>YAML</em><div class="highlight-yaml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6
7
8</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1"># config/packages/security.yaml</span>
<span class="l l-Scalar l-Scalar-Plain">security</span><span class="p p-Indicator">:</span>
    <span class="c1"># ...</span>

    <span class="l l-Scalar l-Scalar-Plain">firewalls</span><span class="p p-Indicator">:</span>
        <span class="l l-Scalar l-Scalar-Plain">main</span><span class="p p-Indicator">:</span>
            <span class="c1"># ...</span>
            <span class="l l-Scalar l-Scalar-Plain">switch_user</span><span class="p p-Indicator">:</span> <span class="l l-Scalar l-Scalar-Plain">true</span>
</pre></div>
</td></tr></table></div>
</p></li>
<li><p><em>XML</em><div class="highlight-xml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c">&lt;!-- config/packages/security.xml --&gt;</span>
<span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>
<span class="nt">&lt;srv:container</span> <span class="na">xmlns=</span><span class="s">&quot;http://symfony.com/schema/dic/security&quot;</span>
    <span class="na">xmlns:xsi=</span><span class="s">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span>
    <span class="na">xmlns:srv=</span><span class="s">&quot;http://symfony.com/schema/dic/services&quot;</span>
    <span class="na">xsi:schemaLocation=</span><span class="s">&quot;http://symfony.com/schema/dic/services</span>
<span class="s">        https://symfony.com/schema/dic/services/services-1.0.xsd&quot;</span><span class="nt">&gt;</span>

    <span class="nt">&lt;config&gt;</span>
        <span class="c">&lt;!-- ... --&gt;</span>

        <span class="nt">&lt;firewall</span> <span class="na">name=</span><span class="s">&quot;main&quot;</span><span class="nt">&gt;</span>
            <span class="c">&lt;!-- ... --&gt;</span>
            <span class="nt">&lt;switch-user/&gt;</span>
        <span class="nt">&lt;/firewall&gt;</span>
    <span class="nt">&lt;/config&gt;</span>
<span class="nt">&lt;/srv:container&gt;</span>
</pre></div>
</td></tr></table></div>
</p></li>
<li><p><em>PHP</em><div class="highlight-php notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1">// config/packages/security.php</span>
<span class="nv">$container</span><span class="o">-&gt;</span><span class="na">loadFromExtension</span><span class="p">(</span><span class="s1">&#39;security&#39;</span><span class="p">,</span> <span class="p">[</span>
    <span class="c1">// ...</span>

    <span class="s1">&#39;firewalls&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
        <span class="s1">&#39;main&#39;</span><span class="o">=&gt;</span> <span class="p">[</span>
            <span class="c1">// ...</span>
            <span class="s1">&#39;switch_user&#39;</span> <span class="o">=&gt;</span> <span class="k">true</span><span class="p">,</span>
        <span class="p">],</span>
    <span class="p">],</span>
<span class="p">]);</span>
</pre></div>
</td></tr></table></div>
</p></li>
</ul>
</div>
<p>To switch to another user, add a query string with the <code class="docutils literal notranslate"><span class="pre">_switch_user</span></code>
parameter and the username (or whatever field our user provider uses to load users)
as the value to the current URL:</p>
<div class="highlight-text notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre>1</pre></div></td><td class="code"><div class="highlight"><pre><span></span>http://example.com/somewhere?_switch_user=thomas
</pre></div>
</td></tr></table></div>
<div class="admonition tip">
<p class="admonition-title">Tip</p>
<p>Instead of adding a <code class="docutils literal notranslate"><span class="pre">_switch_user</span></code> query string parameter, you can pass
the username in a <code class="docutils literal notranslate"><span class="pre">HTTP_X_SWITCH_USER</span></code> header.</p>
</div>
<p>To switch back to the original user, use the special <code class="docutils literal notranslate"><span class="pre">_exit</span></code> username:</p>
<div class="highlight-text notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre>1</pre></div></td><td class="code"><div class="highlight"><pre><span></span>http://example.com/somewhere?_switch_user=_exit
</pre></div>
</td></tr></table></div>
<p>This feature is only available to users with a special role called <code class="docutils literal notranslate"><span class="pre">ROLE_ALLOWED_TO_SWITCH</span></code>.
Using <a class="reference internal" href="../security.xhtml#security-role-hierarchy"><span class="std std-ref">role_hierarchy</span></a> is a great way to give this
role to the users that need it.</p>
<div class="section" id="knowing-when-impersonation-is-active">
<h2>Knowing When Impersonation Is Active</h2>
<p>When a user is being impersonated, Symfony grants them a special role called
<code class="docutils literal notranslate"><span class="pre">ROLE_PREVIOUS_ADMIN</span></code> (in addition to the roles the user may have). Use this
special role, for instance, to show a link to exit impersonation in a template:</p>
<div class="highlight-html+twig notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="cp">{%</span> <span class="k">if</span> <span class="nv">is_granted</span><span class="o">(</span><span class="s1">&#39;ROLE_PREVIOUS_ADMIN&#39;</span><span class="o">)</span> <span class="cp">%}</span>
    <span class="p">&lt;</span><span class="nt">a</span> <span class="na">href</span><span class="o">=</span><span class="s">&quot;</span><span class="cp">{{</span> <span class="nv">path</span><span class="o">(</span><span class="s1">&#39;homepage&#39;</span><span class="o">,</span> <span class="o">{</span><span class="s1">&#39;_switch_user&#39;</span><span class="o">:</span> <span class="s1">&#39;_exit&#39;</span><span class="o">})</span> <span class="cp">}}</span><span class="s">&quot;</span><span class="p">&gt;</span>Exit impersonation<span class="p">&lt;/</span><span class="nt">a</span><span class="p">&gt;</span>
<span class="cp">{%</span> <span class="k">endif</span> <span class="cp">%}</span>
</pre></div>
</td></tr></table></div>
</div>
<div class="section" id="finding-the-original-user">
<h2>Finding the Original User</h2>
<div class="versionadded">
<p><span class="versionmodified">New in version 4.3: </span>The <code class="docutils literal notranslate"><span class="pre">SwitchUserToken</span></code> class was introduced in Symfony 4.3.</p>
</div>
<p>In some cases, you may need to get the object that represents the impersonator
user rather than the impersonated user. When a user is impersonated the token
stored in the token storage will be a <code class="docutils literal notranslate"><span class="pre">SwitchUserToken</span></code> instance. Use the
following snippet to obtain the original token which gives you access to
the impersonator user:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="c1">// src/Service/SomeService.php</span>
<span class="k">namespace</span> <span class="nx">App\Service</span><span class="p">;</span>

<span class="k">use</span> <span class="nx">Symfony\Component\Security\Core\Authentication\Token\SwitchUserToken</span><span class="p">;</span>
<span class="k">use</span> <span class="nx">Symfony\Component\Security\Core\Security</span><span class="p">;</span>
<span class="c1">// ...</span>

<span class="k">class</span> <span class="nc">SomeService</span>
<span class="p">{</span>
    <span class="k">private</span> <span class="nv">$security</span><span class="p">;</span>

    <span class="k">public</span> <span class="k">function</span> <span class="fm">__construct</span><span class="p">(</span><span class="nx">Security</span> <span class="nv">$security</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">security</span> <span class="o">=</span> <span class="nv">$security</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="k">public</span> <span class="k">function</span> <span class="nf">someMethod</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="c1">// ...</span>

        <span class="nv">$token</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">security</span><span class="o">-&gt;</span><span class="na">getToken</span><span class="p">();</span>

        <span class="k">if</span> <span class="p">(</span><span class="nv">$token</span> <span class="nx">instanceof</span> <span class="nx">SwitchUserToken</span><span class="p">)</span> <span class="p">{</span>
            <span class="nv">$impersonatorUser</span> <span class="o">=</span> <span class="nv">$token</span><span class="o">-&gt;</span><span class="na">getOriginalToken</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">getUser</span><span class="p">();</span>
        <span class="p">}</span>

        <span class="c1">// ...</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>
</div>
</div>
<div class="section" id="controlling-the-query-parameter">
<h2>Controlling the Query Parameter</h2>
<p>This feature needs to be available only to a restricted group of users.
By default, access is restricted to users having the <code class="docutils literal notranslate"><span class="pre">ROLE_ALLOWED_TO_SWITCH</span></code>
role. The name of this role can be modified via the <code class="docutils literal notranslate"><span class="pre">role</span></code> setting. You can
also adjust the query parameter name via the <code class="docutils literal notranslate"><span class="pre">parameter</span></code> setting:</p>
<div class="configuration-block">
<ul class="simple">
<li><p><em>YAML</em><div class="highlight-yaml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6
7
8</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1"># config/packages/security.yaml</span>
<span class="l l-Scalar l-Scalar-Plain">security</span><span class="p p-Indicator">:</span>
    <span class="c1"># ...</span>

    <span class="l l-Scalar l-Scalar-Plain">firewalls</span><span class="p p-Indicator">:</span>
        <span class="l l-Scalar l-Scalar-Plain">main</span><span class="p p-Indicator">:</span>
            <span class="c1"># ...</span>
            <span class="l l-Scalar l-Scalar-Plain">switch_user</span><span class="p p-Indicator">:</span> <span class="p p-Indicator">{</span> <span class="nv">role</span><span class="p p-Indicator">:</span> <span class="nv">ROLE_ADMIN</span><span class="p p-Indicator">,</span> <span class="nv">parameter</span><span class="p p-Indicator">:</span> <span class="nv">_want_to_be_this_user</span> <span class="p p-Indicator">}</span>
</pre></div>
</td></tr></table></div>
</p></li>
<li><p><em>XML</em><div class="highlight-xml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c">&lt;!-- config/packages/security.xml --&gt;</span>
<span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>
<span class="nt">&lt;srv:container</span> <span class="na">xmlns=</span><span class="s">&quot;http://symfony.com/schema/dic/security&quot;</span>
    <span class="na">xmlns:xsi=</span><span class="s">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span>
    <span class="na">xmlns:srv=</span><span class="s">&quot;http://symfony.com/schema/dic/services&quot;</span>
    <span class="na">xsi:schemaLocation=</span><span class="s">&quot;http://symfony.com/schema/dic/services</span>
<span class="s">        https://symfony.com/schema/dic/services/services-1.0.xsd&quot;</span><span class="nt">&gt;</span>
    <span class="nt">&lt;config&gt;</span>
        <span class="c">&lt;!-- ... --&gt;</span>

        <span class="nt">&lt;firewall</span> <span class="na">name=</span><span class="s">&quot;main&quot;</span><span class="nt">&gt;</span>
            <span class="c">&lt;!-- ... --&gt;</span>
            <span class="nt">&lt;switch-user</span> <span class="na">role=</span><span class="s">&quot;ROLE_ADMIN&quot;</span> <span class="na">parameter=</span><span class="s">&quot;_want_to_be_this_user&quot;</span><span class="nt">/&gt;</span>
        <span class="nt">&lt;/firewall&gt;</span>
    <span class="nt">&lt;/config&gt;</span>
<span class="nt">&lt;/srv:container&gt;</span>
</pre></div>
</td></tr></table></div>
</p></li>
<li><p><em>PHP</em><div class="highlight-php notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1">// config/packages/security.php</span>
<span class="nv">$container</span><span class="o">-&gt;</span><span class="na">loadFromExtension</span><span class="p">(</span><span class="s1">&#39;security&#39;</span><span class="p">,</span> <span class="p">[</span>
    <span class="c1">// ...</span>

    <span class="s1">&#39;firewalls&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
        <span class="s1">&#39;main&#39;</span><span class="o">=&gt;</span> <span class="p">[</span>
            <span class="c1">// ...</span>
            <span class="s1">&#39;switch_user&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
                <span class="s1">&#39;role&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;ROLE_ADMIN&#39;</span><span class="p">,</span>
                <span class="s1">&#39;parameter&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;_want_to_be_this_user&#39;</span><span class="p">,</span>
            <span class="p">],</span>
        <span class="p">],</span>
    <span class="p">],</span>
<span class="p">]);</span>
</pre></div>
</td></tr></table></div>
</p></li>
</ul>
</div>
</div>
<div class="section" id="limiting-user-switching">
<h2>Limiting User Switching</h2>
<p>If you need more control over user switching, you can use a security voter. First,
configure <code class="docutils literal notranslate"><span class="pre">switch_user</span></code> to check for some new, custom attribute. This can be
anything, but <em>cannot</em> start with <code class="docutils literal notranslate"><span class="pre">ROLE_</span></code> (to enforce that only your voter will
be called):</p>
<div class="configuration-block">
<ul class="simple">
<li><p><em>YAML</em><div class="highlight-yaml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6
7
8</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1"># config/packages/security.yaml</span>
<span class="l l-Scalar l-Scalar-Plain">security</span><span class="p p-Indicator">:</span>
    <span class="c1"># ...</span>

    <span class="l l-Scalar l-Scalar-Plain">firewalls</span><span class="p p-Indicator">:</span>
        <span class="l l-Scalar l-Scalar-Plain">main</span><span class="p p-Indicator">:</span>
            <span class="c1"># ...</span>
            <span class="l l-Scalar l-Scalar-Plain">switch_user</span><span class="p p-Indicator">:</span> <span class="p p-Indicator">{</span> <span class="nv">role</span><span class="p p-Indicator">:</span> <span class="nv">CAN_SWITCH_USER</span> <span class="p p-Indicator">}</span>
</pre></div>
</td></tr></table></div>
</p></li>
<li><p><em>XML</em><div class="highlight-xml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c">&lt;!-- config/packages/security.xml --&gt;</span>
<span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>
<span class="nt">&lt;srv:container</span> <span class="na">xmlns=</span><span class="s">&quot;http://symfony.com/schema/dic/security&quot;</span>
    <span class="na">xmlns:xsi=</span><span class="s">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span>
    <span class="na">xmlns:srv=</span><span class="s">&quot;http://symfony.com/schema/dic/services&quot;</span>
    <span class="na">xsi:schemaLocation=</span><span class="s">&quot;http://symfony.com/schema/dic/services</span>
<span class="s">        https://symfony.com/schema/dic/services/services-1.0.xsd&quot;</span><span class="nt">&gt;</span>
    <span class="nt">&lt;config&gt;</span>
        <span class="c">&lt;!-- ... --&gt;</span>

        <span class="nt">&lt;firewall</span> <span class="na">name=</span><span class="s">&quot;main&quot;</span><span class="nt">&gt;</span>
            <span class="c">&lt;!-- ... --&gt;</span>
            <span class="nt">&lt;switch-user</span> <span class="na">role=</span><span class="s">&quot;CAN_SWITCH_USER&quot;</span><span class="nt">/&gt;</span>
        <span class="nt">&lt;/firewall&gt;</span>
    <span class="nt">&lt;/config&gt;</span>
<span class="nt">&lt;/srv:container&gt;</span>
</pre></div>
</td></tr></table></div>
</p></li>
<li><p><em>PHP</em><div class="highlight-php notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1">// config/packages/security.php</span>
<span class="nv">$container</span><span class="o">-&gt;</span><span class="na">loadFromExtension</span><span class="p">(</span><span class="s1">&#39;security&#39;</span><span class="p">,</span> <span class="p">[</span>
    <span class="c1">// ...</span>

    <span class="s1">&#39;firewalls&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
        <span class="s1">&#39;main&#39;</span><span class="o">=&gt;</span> <span class="p">[</span>
            <span class="c1">// ...</span>
            <span class="s1">&#39;switch_user&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
                <span class="s1">&#39;role&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;CAN_SWITCH_USER&#39;</span><span class="p">,</span>
            <span class="p">],</span>
        <span class="p">],</span>
    <span class="p">],</span>
<span class="p">]);</span>
</pre></div>
</td></tr></table></div>
</p></li>
</ul>
</div>
<p>Then, create a voter class that responds to this role and includes whatever custom
logic you want:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="c1">// src/Service/Voter/SwitchToCustomerVoter.php</span>
<span class="k">namespace</span> <span class="nx">App\Security\Voter</span><span class="p">;</span>

<span class="k">use</span> <span class="nx">Symfony\Component\Security\Core\Authentication\Token\TokenInterface</span><span class="p">;</span>
<span class="k">use</span> <span class="nx">Symfony\Component\Security\Core\Authorization\Voter\Voter</span><span class="p">;</span>
<span class="k">use</span> <span class="nx">Symfony\Component\Security\Core\Security</span><span class="p">;</span>
<span class="k">use</span> <span class="nx">Symfony\Component\Security\Core\User\UserInterface</span><span class="p">;</span>

<span class="k">class</span> <span class="nc">SwitchToCustomerVoter</span> <span class="k">extends</span> <span class="nx">Voter</span>
<span class="p">{</span>
    <span class="k">private</span> <span class="nv">$security</span><span class="p">;</span>

    <span class="k">public</span> <span class="k">function</span> <span class="fm">__construct</span><span class="p">(</span><span class="nx">Security</span> <span class="nv">$security</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">security</span> <span class="o">=</span> <span class="nv">$security</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="k">protected</span> <span class="k">function</span> <span class="nf">supports</span><span class="p">(</span><span class="nv">$attribute</span><span class="p">,</span> <span class="nv">$subject</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">return</span> <span class="nb">in_array</span><span class="p">(</span><span class="nv">$attribute</span><span class="p">,</span> <span class="p">[</span><span class="s1">&#39;CAN_SWITCH_USER&#39;</span><span class="p">])</span>
            <span class="o">&amp;&amp;</span> <span class="nv">$subject</span> <span class="nx">instanceof</span> <span class="nx">UserInterface</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="k">protected</span> <span class="k">function</span> <span class="nf">voteOnAttribute</span><span class="p">(</span><span class="nv">$attribute</span><span class="p">,</span> <span class="nv">$subject</span><span class="p">,</span> <span class="nx">TokenInterface</span> <span class="nv">$token</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="nv">$user</span> <span class="o">=</span> <span class="nv">$token</span><span class="o">-&gt;</span><span class="na">getUser</span><span class="p">();</span>
        <span class="c1">// if the user is anonymous or if the subject is not a user, do not grant access</span>
        <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nv">$user</span> <span class="nx">instanceof</span> <span class="nx">UserInterface</span> <span class="o">||</span> <span class="o">!</span><span class="nv">$subject</span> <span class="nx">instanceof</span> <span class="nx">UserInterface</span><span class="p">)</span> <span class="p">{</span>
            <span class="k">return</span> <span class="k">false</span><span class="p">;</span>
        <span class="p">}</span>

        <span class="c1">// you can still check for ROLE_ALLOWED_TO_SWITCH</span>
        <span class="k">if</span> <span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">security</span><span class="o">-&gt;</span><span class="na">isGranted</span><span class="p">(</span><span class="s1">&#39;ROLE_ALLOWED_TO_SWITCH&#39;</span><span class="p">))</span> <span class="p">{</span>
            <span class="k">return</span> <span class="k">true</span><span class="p">;</span>
        <span class="p">}</span>

        <span class="c1">// check for any roles you want</span>
        <span class="k">if</span> <span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">security</span><span class="o">-&gt;</span><span class="na">isGranted</span><span class="p">(</span><span class="s1">&#39;ROLE_TECH_SUPPORT&#39;</span><span class="p">))</span> <span class="p">{</span>
            <span class="k">return</span> <span class="k">true</span><span class="p">;</span>
        <span class="p">}</span>

        <span class="cm">/*</span>
<span class="cm">         * or use some custom data from your User object</span>
<span class="cm">        if ($user-&gt;isAllowedToSwitch()) {</span>
<span class="cm">            return true;</span>
<span class="cm">        }</span>
<span class="cm">        */</span>

        <span class="k">return</span> <span class="k">false</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>
</div>
<p>That’s it! When switching users, your voter now has full control over whether or
not this is allowed. If your voter isn’t called, see <a class="reference internal" href="voters.xhtml#declaring-the-voter-as-a-service"><span class="std std-ref">Configuring the Voter</span></a>.</p>
</div>
<div class="section" id="events">
<h2>Events</h2>
<p>The firewall dispatches the <code class="docutils literal notranslate"><span class="pre">security.switch_user</span></code> event right after the impersonation
is completed. The <code class="docutils literal notranslate"><a class="reference external" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Security/Http/Event/SwitchUserEvent.php" title="Symfony\Component\Security\Http\Event\SwitchUserEvent"><span class="pre">SwitchUserEvent</span></a><span class="link-target"> <span class="pre">[https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Security/Http/Event/SwitchUserEvent.php]</span></span></code> is
passed to the listener, and you can use this to get the user that you are now impersonating.</p>
<p>The <a class="reference internal" href="../session/locale_sticky_session.xhtml"><span class="doc">Making the Locale “Sticky” during a User’s Session</span></a> article does not update the locale
when you impersonate a user. If you <em>do</em> want to be sure to update the locale when
you switch users, add an event subscriber on this event:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="c1">// src/EventListener/SwitchUserSubscriber.php</span>
<span class="k">namespace</span> <span class="nx">App\EventListener</span><span class="p">;</span>

<span class="k">use</span> <span class="nx">Symfony\Component\EventDispatcher\EventSubscriberInterface</span><span class="p">;</span>
<span class="k">use</span> <span class="nx">Symfony\Component\Security\Http\Event\SwitchUserEvent</span><span class="p">;</span>
<span class="k">use</span> <span class="nx">Symfony\Component\Security\Http\SecurityEvents</span><span class="p">;</span>

<span class="k">class</span> <span class="nc">SwitchUserSubscriber</span> <span class="k">implements</span> <span class="nx">EventSubscriberInterface</span>
<span class="p">{</span>
    <span class="k">public</span> <span class="k">function</span> <span class="nf">onSwitchUser</span><span class="p">(</span><span class="nx">SwitchUserEvent</span> <span class="nv">$event</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="nv">$request</span> <span class="o">=</span> <span class="nv">$event</span><span class="o">-&gt;</span><span class="na">getRequest</span><span class="p">();</span>

        <span class="k">if</span> <span class="p">(</span><span class="nv">$request</span><span class="o">-&gt;</span><span class="na">hasSession</span><span class="p">()</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="nv">$session</span> <span class="o">=</span> <span class="nv">$request</span><span class="o">-&gt;</span><span class="na">getSession</span><span class="p">()))</span> <span class="p">{</span>
            <span class="nv">$session</span><span class="o">-&gt;</span><span class="na">set</span><span class="p">(</span>
                <span class="s1">&#39;_locale&#39;</span><span class="p">,</span>
                <span class="c1">// assuming your User has some getLocale() method</span>
                <span class="nv">$event</span><span class="o">-&gt;</span><span class="na">getTargetUser</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">getLocale</span><span class="p">()</span>
            <span class="p">);</span>
        <span class="p">}</span>
    <span class="p">}</span>

    <span class="k">public</span> <span class="k">static</span> <span class="k">function</span> <span class="nf">getSubscribedEvents</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="k">return</span> <span class="p">[</span>
            <span class="c1">// constant for security.switch_user</span>
            <span class="nx">SecurityEvents</span><span class="o">::</span><span class="na">SWITCH_USER</span> <span class="o">=&gt;</span> <span class="s1">&#39;onSwitchUser&#39;</span><span class="p">,</span>
        <span class="p">];</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>
</div>
<p>That’s it! If you’re using the <a class="reference internal" href="../service_container.xhtml#service-container-services-load-example"><span class="std std-ref">default services.yaml configuration</span></a>,
Symfony will automatically discover your service and call <code class="docutils literal notranslate"><span class="pre">onSwitchUser</span></code> whenever
a switch user occurs.</p>
<p>For more details about event subscribers, see <a class="reference internal" href="../event_dispatcher.xhtml"><span class="doc">Events and Event Listeners</span></a>.</p>
</div>
</div>


          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>