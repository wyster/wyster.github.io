<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <title>How to Use a Custom Version Strategy for Assets</title>
    <link rel="stylesheet" href="../_static/epub.css" type="text/css" />
    <link rel="stylesheet" href="../_static/pygments.css" type="text/css" />
    <link rel="stylesheet" type="text/css" href="../_static/rtd_custom.css" /> 
  </head><body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <div class="section" id="how-to-use-a-custom-version-strategy-for-assets">
<span id="index-0"></span><h1>How to Use a Custom Version Strategy for Assets</h1>
<p>Asset versioning is a technique that improves the performance of web
applications by adding a version identifier to the URL of the static assets
(CSS, JavaScript, images, etc.) When the content of the asset changes, its
identifier is also modified to force the browser to download it again instead of
reusing the cached asset.</p>
<p>If your application requires advanced versioning, such as generating the
version dynamically based on some external information, you can create your
own version strategy.</p>
<div class="admonition note">
<p class="admonition-title">Note</p>
<p>Symfony provides various cache busting implementations via the
<a class="reference internal" href="../reference/configuration/framework.xhtml#reference-framework-assets-version"><span class="std std-ref">version</span></a>,
<a class="reference internal" href="../reference/configuration/framework.xhtml#reference-assets-version-format"><span class="std std-ref">version_format</span></a>, and
<a class="reference internal" href="../reference/configuration/framework.xhtml#reference-assets-json-manifest-path"><span class="std std-ref">json_manifest_path</span></a>
configuration options.</p>
</div>
<div class="section" id="creating-your-own-asset-version-strategy">
<h2>Creating your Own Asset Version Strategy</h2>
<p>The following example shows how to create a version strategy compatible with
<a class="reference external" href="https://www.npmjs.com/package/gulp-buster">gulp-buster</a><span class="link-target"> [https://www.npmjs.com/package/gulp-buster]</span>. This tool defines a configuration file called <code class="docutils literal notranslate"><span class="pre">busters.json</span></code>
which maps each asset file to its content hash:</p>
<div class="highlight-json notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="p">{</span>
    <span class="nt">&quot;js/script.js&quot;</span><span class="p">:</span> <span class="s2">&quot;f9c7afd05729f10f55b689f36bb20172&quot;</span><span class="p">,</span>
    <span class="nt">&quot;css/style.css&quot;</span><span class="p">:</span> <span class="s2">&quot;91cd067f79a5839536b46c494c4272d8&quot;</span>
<span class="p">}</span>
</pre></div>
</td></tr></table></div>
<div class="section" id="implement-versionstrategyinterface">
<h3>Implement VersionStrategyInterface</h3>
<p>Asset version strategies are PHP classes that implement the
<code class="docutils literal notranslate"><a class="reference external" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Asset/VersionStrategy/VersionStrategyInterface.php" title="Symfony\Component\Asset\VersionStrategy\VersionStrategyInterface"><span class="pre">VersionStrategyInterface</span></a><span class="link-target"> <span class="pre">[https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Asset/VersionStrategy/VersionStrategyInterface.php]</span></span></code>.
In this example, the constructor of the class takes as arguments the path to
the manifest file generated by <a class="reference external" href="https://www.npmjs.com/package/gulp-buster">gulp-buster</a><span class="link-target"> [https://www.npmjs.com/package/gulp-buster]</span> and the format of the generated
version string:</p>
<div class="highlight-php notranslate"><div class="highlight"><pre><span></span><span class="c1">// src/Asset/VersionStrategy/GulpBusterVersionStrategy.php</span>
<span class="k">namespace</span> <span class="nx">App\Asset\VersionStrategy</span><span class="p">;</span>

<span class="k">use</span> <span class="nx">Symfony\Component\Asset\VersionStrategy\VersionStrategyInterface</span><span class="p">;</span>

<span class="k">class</span> <span class="nc">GulpBusterVersionStrategy</span> <span class="k">implements</span> <span class="nx">VersionStrategyInterface</span>
<span class="p">{</span>
    <span class="sd">/**</span>
<span class="sd">     * @var string</span>
<span class="sd">     */</span>
    <span class="k">private</span> <span class="nv">$manifestPath</span><span class="p">;</span>

    <span class="sd">/**</span>
<span class="sd">     * @var string</span>
<span class="sd">     */</span>
    <span class="k">private</span> <span class="nv">$format</span><span class="p">;</span>

    <span class="sd">/**</span>
<span class="sd">     * @var string[]</span>
<span class="sd">     */</span>
    <span class="k">private</span> <span class="nv">$hashes</span><span class="p">;</span>

    <span class="sd">/**</span>
<span class="sd">     * @param string      $manifestPath</span>
<span class="sd">     * @param string|null $format</span>
<span class="sd">     */</span>
    <span class="k">public</span> <span class="k">function</span> <span class="fm">__construct</span><span class="p">(</span><span class="nv">$manifestPath</span><span class="p">,</span> <span class="nv">$format</span> <span class="o">=</span> <span class="k">null</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">manifestPath</span> <span class="o">=</span> <span class="nv">$manifestPath</span><span class="p">;</span>
        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">format</span> <span class="o">=</span> <span class="nv">$format</span> <span class="o">?:</span> <span class="s1">&#39;%s?%s&#39;</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="k">public</span> <span class="k">function</span> <span class="nf">getVersion</span><span class="p">(</span><span class="nv">$path</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nb">is_array</span><span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">hashes</span><span class="p">))</span> <span class="p">{</span>
            <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">hashes</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">loadManifest</span><span class="p">();</span>
        <span class="p">}</span>

        <span class="k">return</span> <span class="nb">isset</span><span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">hashes</span><span class="p">[</span><span class="nv">$path</span><span class="p">])</span> <span class="o">?</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">hashes</span><span class="p">[</span><span class="nv">$path</span><span class="p">]</span> <span class="o">:</span> <span class="s1">&#39;&#39;</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="k">public</span> <span class="k">function</span> <span class="nf">applyVersion</span><span class="p">(</span><span class="nv">$path</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="nv">$version</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">getVersion</span><span class="p">(</span><span class="nv">$path</span><span class="p">);</span>

        <span class="k">if</span> <span class="p">(</span><span class="s1">&#39;&#39;</span> <span class="o">===</span> <span class="nv">$version</span><span class="p">)</span> <span class="p">{</span>
            <span class="k">return</span> <span class="nv">$path</span><span class="p">;</span>
        <span class="p">}</span>

        <span class="k">return</span> <span class="nb">sprintf</span><span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">format</span><span class="p">,</span> <span class="nv">$path</span><span class="p">,</span> <span class="nv">$version</span><span class="p">);</span>
    <span class="p">}</span>

    <span class="k">private</span> <span class="k">function</span> <span class="nf">loadManifest</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="k">return</span> <span class="nb">json_decode</span><span class="p">(</span><span class="nb">file_get_contents</span><span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">manifestPath</span><span class="p">),</span> <span class="k">true</span><span class="p">);</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>
</div>
</div>
<div class="section" id="register-the-strategy-service">
<h3>Register the Strategy Service</h3>
<p>After creating the strategy PHP class, register it as a Symfony service.</p>
<div class="configuration-block">
<ul class="simple">
<li><p><em>YAML</em><div class="highlight-yaml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1"># config/services.yaml</span>
<span class="l l-Scalar l-Scalar-Plain">services</span><span class="p p-Indicator">:</span>
    <span class="l l-Scalar l-Scalar-Plain">App\Asset\VersionStrategy\GulpBusterVersionStrategy</span><span class="p p-Indicator">:</span>
        <span class="l l-Scalar l-Scalar-Plain">arguments</span><span class="p p-Indicator">:</span>
            <span class="p p-Indicator">-</span> <span class="s">&quot;%kernel.project_dir%/busters.json&quot;</span>
            <span class="p p-Indicator">-</span> <span class="s">&quot;%%s?version=%%s&quot;</span>
</pre></div>
</td></tr></table></div>
</p></li>
<li><p><em>XML</em><div class="highlight-xml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c">&lt;!-- config/services.xml --&gt;</span>
<span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span>
<span class="nt">&lt;container</span> <span class="na">xmlns=</span><span class="s">&quot;http://symfony.com/schema/dic/services&quot;</span>
    <span class="na">xmlns:xsi=</span><span class="s">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span>
    <span class="na">xsi:schemaLocation=</span><span class="s">&quot;http://symfony.com/schema/dic/services</span>
<span class="s">        https://symfony.com/schema/dic/services/services-1.0.xsd&quot;</span>
<span class="nt">&gt;</span>
    <span class="nt">&lt;services&gt;</span>
        <span class="nt">&lt;service</span> <span class="na">id=</span><span class="s">&quot;App\Asset\VersionStrategy\GulpBusterVersionStrategy&quot;</span><span class="nt">&gt;</span>
            <span class="nt">&lt;argument&gt;</span>%kernel.project_dir%/busters.json<span class="nt">&lt;/argument&gt;</span>
            <span class="nt">&lt;argument&gt;</span>%%s?version=%%s<span class="nt">&lt;/argument&gt;</span>
        <span class="nt">&lt;/service&gt;</span>
    <span class="nt">&lt;/services&gt;</span>
<span class="nt">&lt;/container&gt;</span>
</pre></div>
</td></tr></table></div>
</p></li>
<li><p><em>PHP</em><div class="highlight-php notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1">// config/services.php</span>
<span class="k">namespace</span> <span class="nx">Symfony\Component\DependencyInjection\Loader\Configurator</span><span class="p">;</span>

<span class="k">use</span> <span class="nx">App\Asset\VersionStrategy\GulpBusterVersionStrategy</span><span class="p">;</span>
<span class="k">use</span> <span class="nx">Symfony\Component\DependencyInjection\Definition</span><span class="p">;</span>

<span class="k">return</span> <span class="k">function</span><span class="p">(</span><span class="nx">ContainerConfigurator</span> <span class="nv">$configurator</span><span class="p">)</span> <span class="p">{</span>
    <span class="nv">$services</span> <span class="o">=</span> <span class="nv">$configurator</span><span class="o">-&gt;</span><span class="na">services</span><span class="p">();</span>

    <span class="nv">$services</span><span class="o">-&gt;</span><span class="na">set</span><span class="p">(</span><span class="nx">GulpBusterVersionStrategy</span><span class="o">::</span><span class="na">class</span><span class="p">)</span>
        <span class="o">-&gt;</span><span class="na">args</span><span class="p">(</span>
            <span class="p">[</span>
                <span class="s1">&#39;%kernel.project_dir%/busters.json&#39;</span><span class="p">,</span>
                <span class="s1">&#39;%%s?version=%%s&#39;</span><span class="p">,</span>
            <span class="p">]</span>
        <span class="p">);</span>
<span class="p">};</span>
</pre></div>
</td></tr></table></div>
</p></li>
</ul>
</div>
<p>Finally, enable the new asset versioning for all the application assets or just
for some <a class="reference internal" href="../reference/configuration/framework.xhtml#reference-framework-assets-packages"><span class="std std-ref">asset package</span></a> thanks to
the <a class="reference internal" href="../reference/configuration/framework.xhtml#reference-assets-version-strategy"><span class="std std-ref">version_strategy</span></a> option:</p>
<div class="configuration-block">
<ul class="simple">
<li><p><em>YAML</em><div class="highlight-yaml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1"># config/packages/framework.yaml</span>
<span class="l l-Scalar l-Scalar-Plain">framework</span><span class="p p-Indicator">:</span>
    <span class="c1"># ...</span>
    <span class="l l-Scalar l-Scalar-Plain">assets</span><span class="p p-Indicator">:</span>
        <span class="l l-Scalar l-Scalar-Plain">version_strategy</span><span class="p p-Indicator">:</span> <span class="s">&#39;App\Asset\VersionStrategy\GulpBusterVersionStrategy&#39;</span>
</pre></div>
</td></tr></table></div>
</p></li>
<li><p><em>XML</em><div class="highlight-xml notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c">&lt;!-- config/packages/framework.xml --&gt;</span>
<span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span>
<span class="nt">&lt;container</span> <span class="na">xmlns=</span><span class="s">&quot;http://symfony.com/schema/dic/services&quot;</span>
    <span class="na">xmlns:xsi=</span><span class="s">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span>
    <span class="na">xmlns:framework=</span><span class="s">&quot;http://symfony.com/schema/dic/symfony&quot;</span>
    <span class="na">xsi:schemaLocation=</span><span class="s">&quot;http://symfony.com/schema/dic/services https://symfony.com/schema/dic/services/services-1.0.xsd</span>
<span class="s">        http://symfony.com/schema/dic/symfony https://symfony.com/schema/dic/symfony/symfony-1.0.xsd&quot;</span><span class="nt">&gt;</span>

    <span class="nt">&lt;framework:config&gt;</span>
        <span class="nt">&lt;framework:assets</span> <span class="na">version-strategy=</span><span class="s">&quot;App\Asset\VersionStrategy\GulpBusterVersionStrategy&quot;</span><span class="nt">/&gt;</span>
    <span class="nt">&lt;/framework:config&gt;</span>
<span class="nt">&lt;/container&gt;</span>
</pre></div>
</td></tr></table></div>
</p></li>
<li><p><em>PHP</em><div class="highlight-php notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6
7
8
9</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1">// config/packages/framework.php</span>
<span class="k">use</span> <span class="nx">App\Asset\VersionStrategy\GulpBusterVersionStrategy</span><span class="p">;</span>

<span class="nv">$container</span><span class="o">-&gt;</span><span class="na">loadFromExtension</span><span class="p">(</span><span class="s1">&#39;framework&#39;</span><span class="p">,</span> <span class="p">[</span>
    <span class="c1">// ...</span>
    <span class="s1">&#39;assets&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
        <span class="s1">&#39;version_strategy&#39;</span> <span class="o">=&gt;</span> <span class="nx">GulpBusterVersionStrategy</span><span class="o">::</span><span class="na">class</span><span class="p">,</span>
    <span class="p">],</span>
<span class="p">]);</span>
</pre></div>
</td></tr></table></div>
</p></li>
</ul>
</div>
</div>
</div>
</div>


          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>