<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <title>Passing Information from Twig to JavaScript</title>
    <link rel="stylesheet" href="../../_static/epub.css" type="text/css" />
    <link rel="stylesheet" href="../../_static/pygments.css" type="text/css" />
    <link rel="stylesheet" type="text/css" href="../../_static/rtd_custom.css" /> 
  </head><body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <div class="section" id="passing-information-from-twig-to-javascript">
<h1>Passing Information from Twig to JavaScript</h1>
<p>In Symfony applications, you may find that you need to pass some dynamic data
(e.g. user information) from Twig to your JavaScript code. One great way to pass
dynamic configuration is by storing information in <code class="docutils literal notranslate"><span class="pre">data</span></code> attributes and reading
them later in JavaScript. For example:</p>
<div class="highlight-html+twig notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&quot;js-user-rating&quot;</span> <span class="na">data-is-authenticated</span><span class="o">=</span><span class="s">&quot;</span><span class="cp">{{</span> <span class="nv">app.user</span> <span class="o">?</span> <span class="s1">&#39;true&#39;</span> <span class="o">:</span> <span class="s1">&#39;false&#39;</span> <span class="cp">}}</span><span class="s">&quot;</span><span class="p">&gt;</span>
    <span class="c">&lt;!-- ... --&gt;</span>
<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
</pre></div>
</td></tr></table></div>
<p>Fetch this in JavaScript:</p>
<div class="highlight-javascript notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6
7</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="nb">document</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="s1">&#39;DOMContentLoaded&#39;</span><span class="p">,</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
    <span class="kd">var</span> <span class="nx">userRating</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">querySelector</span><span class="p">(</span><span class="s1">&#39;.js-user-rating&#39;</span><span class="p">);</span>
    <span class="kd">var</span> <span class="nx">isAuthenticated</span> <span class="o">=</span> <span class="nx">userRating</span><span class="p">.</span><span class="nx">dataset</span><span class="p">.</span><span class="nx">isAuthenticated</span><span class="p">;</span>

    <span class="c1">// or with jQuery</span>
    <span class="c1">//var isAuthenticated = $(&#39;.js-user-rating&#39;).data(&#39;isAuthenticated&#39;);</span>
<span class="p">});</span>
</pre></div>
</td></tr></table></div>
<div class="admonition note">
<p class="admonition-title">Note</p>
<p>When <a class="reference external" href="https://developer.mozilla.org/en-US/docs/Learn/HTML/Howto/Use_data_attributes">accessing data attributes from JavaScript</a><span class="link-target"> [https://developer.mozilla.org/en-US/docs/Learn/HTML/Howto/Use_data_attributes]</span>, the attribute names are
converted from dash-style to camelCase. For example, <code class="docutils literal notranslate"><span class="pre">data-is-authenticated</span></code>
becomes <code class="docutils literal notranslate"><span class="pre">isAuthenticated</span></code> and <code class="docutils literal notranslate"><span class="pre">data-number-of-reviews</span></code> becomes
<code class="docutils literal notranslate"><span class="pre">numberOfReviews</span></code>.</p>
</div>
<p>There is no size limit for the value of the <code class="docutils literal notranslate"><span class="pre">data-</span></code> attributes, so you can
store any content. In Twig, use the <code class="docutils literal notranslate"><span class="pre">html_attr</span></code> escaping strategy to avoid messing
with HTML attributes. For example, if your <code class="docutils literal notranslate"><span class="pre">User</span></code> object has some <code class="docutils literal notranslate"><span class="pre">getProfileData()</span></code>
method that returns an array, you could do the following:</p>
<div class="highlight-html+twig notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="p">&lt;</span><span class="nt">div</span> <span class="na">data-user-profile</span><span class="o">=</span><span class="s">&quot;</span><span class="cp">{{</span> <span class="nv">app.user</span> <span class="o">?</span> <span class="nv">app.user.profileData</span><span class="o">|</span><span class="nf">json_encode</span><span class="o">|</span><span class="nf">e</span><span class="o">(</span><span class="s1">&#39;html_attr&#39;</span><span class="o">)</span> <span class="cp">}}</span><span class="s">&quot;</span><span class="p">&gt;</span>
    <span class="c">&lt;!-- ... --&gt;</span>
<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
</pre></div>
</td></tr></table></div>
</div>


          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>