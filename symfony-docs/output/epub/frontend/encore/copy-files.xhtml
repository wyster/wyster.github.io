<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <title>Copying &amp; Referencing Images</title>
    <link rel="stylesheet" href="../../_static/epub.css" type="text/css" />
    <link rel="stylesheet" href="../../_static/pygments.css" type="text/css" />
    <link rel="stylesheet" type="text/css" href="../../_static/rtd_custom.css" /> 
  </head><body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <div class="section" id="copying-referencing-images">
<h1>Copying &amp; Referencing Images</h1>
<p>Need to reference a static file - like the path to an image for an <code class="docutils literal notranslate"><span class="pre">img</span></code> tag?
That can be tricky if you store your assets outside of the public document root.
Fortunately, depending on your situation, there is a solution!</p>
<div class="section" id="referencing-images-from-inside-a-webpacked-javascript-file">
<h2>Referencing Images from Inside a Webpacked JavaScript File</h2>
<p>To reference an image tag from inside a JavaScript file, <em>require</em> the file:</p>
<div class="highlight-javascript notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6
7</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c1">// assets/app.js</span>

<span class="c1">// returns the final, public path to this file</span>
<span class="c1">// path is relative to this file - e.g. assets/images/logo.png</span>
<span class="kr">const</span> <span class="nx">logoPath</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;../images/logo.png&#39;</span><span class="p">);</span>

<span class="kd">let</span> <span class="nx">html</span> <span class="o">=</span> <span class="sb">`&lt;img src=&quot;</span><span class="si">${</span><span class="nx">logoPath</span><span class="si">}</span><span class="sb">&quot; alt=&quot;ACME logo&quot;&gt;`</span><span class="p">;</span>
</pre></div>
</td></tr></table></div>
<p>When you <code class="docutils literal notranslate"><span class="pre">require</span></code> (or <code class="docutils literal notranslate"><span class="pre">import</span></code>) an image file, Webpack copies it into your
output directory and returns the final, <em>public</em> path to that file.</p>
</div>
<div class="section" id="referencing-image-files-from-a-template">
<h2>Referencing Image files from a Template</h2>
<p>To reference an image file from outside of a JavaScript file that’s processed by
Webpack - like a template - you can use the <code class="docutils literal notranslate"><span class="pre">copyFiles()</span></code> method to copy those
files into your final output directory.</p>
<div class="highlight-diff notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18</pre></div></td><td class="code"><div class="highlight"><pre><span></span>// webpack.config.js

Encore
    // ...
    .setOutputPath(&#39;public/build/&#39;)

<span class="gi">+     .copyFiles({</span>
<span class="gi">+         from: &#39;./assets/images&#39;,</span>
<span class="gi">+</span>
<span class="gi">+         // optional target path, relative to the output dir</span>
<span class="gi">+         //to: &#39;images/[path][name].[ext]&#39;,</span>
<span class="gi">+</span>
<span class="gi">+         // if versioning is enabled, add the file hash too</span>
<span class="gi">+         //to: &#39;images/[path][name].[hash:8].[ext]&#39;,</span>
<span class="gi">+</span>
<span class="gi">+         // only copy files matching this pattern</span>
<span class="gi">+         //pattern: /\.(png|jpg|jpeg)$/</span>
<span class="gi">+     })</span>
</pre></div>
</td></tr></table></div>
<p>This will copy all files from <code class="docutils literal notranslate"><span class="pre">assets/images</span></code> into <code class="docutils literal notranslate"><span class="pre">public/build</span></code> (the output
path). If you have <a class="reference internal" href="versioning.xhtml"><span class="doc">versioning enabled</span></a>, the copied files will
include a hash based on their content.</p>
<p>To render inside Twig, use the <code class="docutils literal notranslate"><span class="pre">asset()</span></code> function:</p>
<div class="highlight-html+twig notranslate"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5</pre></div></td><td class="code"><div class="highlight"><pre><span></span><span class="c">{# assets/images/logo.png was copied to public/build/logo.png #}</span>
<span class="p">&lt;</span><span class="nt">img</span> <span class="na">src</span><span class="o">=</span><span class="s">&quot;</span><span class="cp">{{</span> <span class="nv">asset</span><span class="o">(</span><span class="s1">&#39;build/logo.png&#39;</span><span class="o">)</span> <span class="cp">}}</span><span class="s">&quot;</span> <span class="na">alt</span><span class="o">=</span><span class="s">&quot;ACME logo&quot;</span><span class="p">&gt;</span>

<span class="c">{# assets/images/subdir/logo.png was copied to public/build/subdir/logo.png #}</span>
<span class="p">&lt;</span><span class="nt">img</span> <span class="na">src</span><span class="o">=</span><span class="s">&quot;</span><span class="cp">{{</span> <span class="nv">asset</span><span class="o">(</span><span class="s1">&#39;build/subdir/logo.png&#39;</span><span class="o">)</span> <span class="cp">}}</span><span class="s">&quot;</span> <span class="na">alt</span><span class="o">=</span><span class="s">&quot;ACME logo&quot;</span><span class="p">&gt;</span>
</pre></div>
</td></tr></table></div>
<p>Make sure you’ve enabled the <a class="reference internal" href="versioning.xhtml#load-manifest-files"><span class="std std-ref">json_manifest_path</span></a> option,
which tells the <code class="docutils literal notranslate"><span class="pre">asset()</span></code> function to read the final paths from the <code class="docutils literal notranslate"><span class="pre">manifest.json</span></code>
file. If you’re not sure what path argument to pass to the <code class="docutils literal notranslate"><span class="pre">asset()</span></code> function,
find the file in <code class="docutils literal notranslate"><span class="pre">manifest.json</span></code> and use the <em>key</em> as the argument.</p>
</div>
</div>


          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>